var searchIndex = {};
searchIndex["perfcnt_parse"] = {"doc":"","items":[],"paths":[]};
searchIndex["perfcnt_list"] = {"doc":"","items":[],"paths":[]};
searchIndex["perfcnt"] = {"doc":"","items":[[0,"linux","perfcnt","A wrapper around perf_event open (http://lxr.free-electrons.com/source/tools/perf/design.txt)",null,null],[3,"PerfCounterBuilderLinux","perfcnt::linux","",null,null],[3,"FileReadFormat","","",null,null],[12,"value","","The value of the event",0,null],[12,"time_enabled","","if PERF_FORMAT_TOTAL_TIME_ENABLED",0,null],[12,"time_running","","if PERF_FORMAT_TOTAL_TIME_RUNNING",0,null],[12,"id","","if PERF_FORMAT_ID",0,null],[3,"MMAPPage","","",null,null],[3,"PerfCounter","","",null,null],[3,"SamplingPerfCounter","","",null,null],[3,"MMAPRecord","","The MMAP events record the PROT_EXEC mappings so that we can correlate user-space IPs to code.",null,null],[3,"LostRecord","","This record indicates when events are lost.",null,null],[3,"CommRecord","","This record indicates a change in the process name.",null,null],[3,"ExitRecord","","This record indicates a process exit event.",null,null],[3,"ThrottleRecord","","This record indicates a throttle/unthrottle event.",null,null],[3,"ForkRecord","","This record indicates a fork event.",null,null],[3,"ReadRecord","","This record indicates a read event.",null,null],[3,"SampleRecord","","This record indicates a sample.",null,null],[4,"HardwareEventType","","",null,null],[13,"CPUCycles","","Total cycles.  Be wary of what happens during CPU frequency scaling.",1,null],[13,"Instructions","","Retired instructions.  Be careful, these can be affected by various issues, most notably hardware interrupt counts.",1,null],[13,"CacheReferences","","Cache  accesses.  Usually this indicates Last Level Cache accesses but this may vary depending on your CPU. This may include prefetches and",1,null],[13,"CacheMisses","","Cache misses.  Usually this indicates Last Level Cache misses; this is intended to be used  in  conjunction with the",1,null],[13,"BranchInstructions","","Retired branch instructions.  Prior to Linux 2.6.34, this used the wrong event on AMD processors.",1,null],[13,"BranchMisses","","Mispredicted branch instructions.",1,null],[13,"BusCycles","","Bus cycles, which can be different from total cycles.",1,null],[13,"StalledCyclesFrontend","","Stalled cycles during issue. (Since Linux 3.0)",1,null],[13,"StalledCyclesBackend","","Stalled cycles during retirement. (Since Linux 3.0)",1,null],[13,"RefCPUCycles","","Total cycles; not affected by CPU frequency scaling. (Since Linux 3.3)",1,null],[4,"SoftwareEventType","","",null,null],[13,"CpuClock","","This reports the CPU clock, a high-resolution per-CPU timer.",2,null],[13,"TaskClock","","This reports a clock count specific to the task that is running.",2,null],[13,"PageFaults","","This reports the number of page faults.",2,null],[13,"ContextSwitches","","This counts context switches.",2,null],[13,"CpuMigrations","","This reports the number of times the process has migrated to a new CPU.",2,null],[13,"PageFaultsMin","","This counts the number of minor page faults.  These did not require disk I/O to handle.",2,null],[13,"PageFaultsMaj","","This counts the number of major page faults.  These required disk I/O to handle.",2,null],[13,"AlignmentFaults","","This counts the number of alignment faults.",2,null],[13,"EmulationFaults","","This counts the number of emulation faults.  The kernel sometimes traps on unimplemented  instructions  and\nemulates them for user space.  This can negatively impact performance.",2,null],[4,"CacheId","","",null,null],[13,"L1D","","For measuring Level 1 Data Cache",3,null],[13,"L1I","","For measuring Level 1 Instruction Cache",3,null],[13,"LL","","For measuring Last-Level Cache",3,null],[13,"DTLB","","For measuring the Data TLB",3,null],[13,"ITLB","","For measuring the Instruction TLB",3,null],[13,"BPU","","For measuring the branch prediction unit",3,null],[13,"NODE","","For measuring local memory accesses",3,null],[4,"CacheOpId","","",null,null],[13,"Read","","For read accesses",4,null],[13,"Write","","For write accesses",4,null],[13,"Prefetch","","For prefetch accesses",4,null],[4,"CacheOpResultId","","",null,null],[13,"Access","","To measure accesses.",5,null],[13,"Miss","","To measure misses.",5,null],[4,"Event","","",null,null],[13,"MMAP","","",6,null],[13,"Lost","","",6,null],[13,"Comm","","",6,null],[13,"Exit","","",6,null],[13,"Throttle","","",6,null],[13,"Unthrottle","","",6,null],[13,"Fork","","",6,null],[13,"Read","","",6,null],[13,"Sample","","",6,null],[0,"perf_format","","Contains the various data format structures as used by perf",null,null],[3,"ThreadId","perfcnt::linux::perf_format","Unique thread descriptor. Used in many different perf structures.",null,null],[12,"pid","","",7,null],[12,"tid","","",7,null],[3,"Cpu","","Generic CPU description. Used in many different perf structures.",null,null],[12,"cpu","","",8,null],[12,"res","","",8,null],[3,"SampleId","","",null,null],[12,"ptid","","if PERF_SAMPLE_TID set",9,null],[12,"time","","if PERF_SAMPLE_TIME set",9,null],[12,"id","","if PERF_SAMPLE_ID set",9,null],[12,"stream_id","","if PERF_SAMPLE_STREAM_ID set",9,null],[12,"cpu","","if PERF_SAMPLE_CPU set",9,null],[12,"identifier","","if PERF_SAMPLE_IDENTIFIER set",9,null],[3,"Event","","",null,null],[12,"header","","",10,null],[12,"data","","",10,null],[3,"EventHeader","","",null,null],[12,"event_type","","",11,null],[12,"misc","","",11,null],[12,"size","","",11,null],[3,"ForkRecord","","This record indicates a fork event.",null,null],[12,"pid","","",12,null],[12,"ppid","","",12,null],[12,"tid","","",12,null],[12,"ptid","","",12,null],[12,"time","","",12,null],[3,"ExitRecord","","This record indicates a process exit event.",null,null],[12,"pid","","",13,null],[12,"ppid","","",13,null],[12,"tid","","",13,null],[12,"ptid","","",13,null],[12,"time","","",13,null],[3,"ThrottleRecord","","",null,null],[12,"time","","",14,null],[12,"id","","",14,null],[12,"stream_id","","",14,null],[3,"UnthrottleRecord","","",null,null],[12,"time","","",15,null],[12,"id","","",15,null],[12,"stream_id","","",15,null],[3,"MMAPRecord","","The MMAP events record the PROT_EXEC mappings so that we can correlate user-space IPs to code.",null,null],[12,"pid","","",16,null],[12,"tid","","",16,null],[12,"addr","","",16,null],[12,"len","","",16,null],[12,"pgoff","","",16,null],[12,"filename","","",16,null],[3,"MMAP2Record","","",null,null],[12,"ptid","","",17,null],[12,"addr","","",17,null],[12,"len","","",17,null],[12,"pgoff","","",17,null],[12,"maj","","",17,null],[12,"min","","",17,null],[12,"ino","","",17,null],[12,"ino_generation","","",17,null],[12,"prot","","",17,null],[12,"flags","","",17,null],[12,"filename","","",17,null],[3,"ReadFormat","","We use the same read format for READ_FORMAT_GROUP and non-grouped reads for simplicity",null,null],[12,"time_enabled","","if PERF_FORMAT_TOTAL_TIME_ENABLED",18,null],[12,"time_running","","if PERF_FORMAT_TOTAL_TIME_RUNNING",18,null],[12,"values","","Collection of (value, Some(id) if PERF_FORMAT_ID)",18,null],[3,"ReadRecord","","",null,null],[12,"pid","","",19,null],[12,"tid","","",19,null],[12,"value","","",19,null],[3,"BranchEntry","","",null,null],[12,"from","","",20,null],[12,"to","","",20,null],[12,"flags","","",20,null],[3,"SampleRecord","","This record indicates a sample.",null,null],[12,"sample_id","","if PERF_SAMPLE_IDENTIFIER",21,null],[12,"ip","","if PERF_SAMPLE_IP",21,null],[12,"ptid","","if PERF_SAMPLE_TID",21,null],[12,"time","","if PERF_SAMPLE_TIME",21,null],[12,"addr","","if PERF_SAMPLE_ADDR",21,null],[12,"id","","if PERF_SAMPLE_ID",21,null],[12,"stream_id","","if PERF_SAMPLE_STREAM_ID",21,null],[12,"cpu","","if PERF_SAMPLE_CPU",21,null],[12,"period","","if PERF_SAMPLE_PERIOD",21,null],[12,"v","","if PERF_SAMPLE_READ",21,null],[12,"ips","","if PERF_SAMPLE_CALLCHAIN",21,null],[12,"raw","","if PERF_SAMPLE_RAW",21,null],[12,"lbr","","if PERF_SAMPLE_REGS_USER &amp; PERF_SAMPLE_BRANCH_STACK",21,null],[12,"abi_user","","PERF_SAMPLE_STACK_USER",21,null],[12,"regs_user","","PERF_SAMPLE_STACK_USER",21,null],[12,"user_stack","","PERF_SAMPLE_STACK_USER",21,null],[12,"dyn_size","","PERF_SAMPLE_STACK_USER",21,null],[12,"weight","","if PERF_SAMPLE_WEIGHT",21,null],[12,"data_src","","if PERF_SAMPLE_DATA_SRC",21,null],[12,"transaction","","if PERF_SAMPLE_TRANSACTION",21,null],[12,"abi","","if PERF_SAMPLE_REGS_INTR",21,null],[12,"regs_intr","","if PERF_SAMPLE_REGS_INTR",21,null],[3,"CommRecord","","",null,null],[12,"ptid","","",22,null],[12,"comm","","",22,null],[3,"LostRecord","","",null,null],[3,"BuildIdRecord","","",null,null],[12,"pid","","",23,null],[12,"build_id","","",23,null],[12,"filename","","",23,null],[3,"HeaderFlags","","",null,null],[12,"nrcpus","","",24,null],[12,"arch","","",24,null],[12,"version","","",24,null],[12,"osrelease","","",24,null],[12,"hostname","","",24,null],[12,"build_id","","",24,null],[12,"tracing_data","","",24,null],[12,"branch_stack","","",24,null],[12,"numa_topology","","",24,null],[12,"cpu_topology","","",24,null],[12,"event_desc","","",24,null],[12,"cmdline","","",24,null],[12,"total_mem","","",24,null],[12,"cpuid","","",24,null],[12,"cpudesc","","",24,null],[12,"group_desc","","",24,null],[12,"pmu_mappings","","",24,null],[3,"PerfFileHeader","","",null,null],[12,"size","","",25,null],[12,"attr_size","","",25,null],[12,"attrs","","",25,null],[12,"data","","",25,null],[12,"event_types","","",25,null],[12,"flags","","",25,null],[3,"EventAttr","","",null,null],[12,"attr_type","","",26,null],[12,"size","","",26,null],[12,"config","","",26,null],[12,"sample_period_freq","","",26,null],[12,"sample_type","","",26,null],[12,"read_format","","",26,null],[12,"settings","","",26,null],[12,"wakeup_events_watermark","","",26,null],[12,"bp_type","","",26,null],[12,"config1_or_bp_addr","","",26,null],[12,"config2_or_bp_len","","",26,null],[12,"branch_sample_type","","",26,null],[12,"sample_regs_user","","",26,null],[12,"sample_stack_user","","",26,null],[12,"clock_id","","",26,null],[12,"sample_regs_intr","","",26,null],[12,"aux_watermark","","",26,null],[12,"reserved","","",26,null],[3,"ReadFormatFlags","","",null,null],[3,"SampleFormatFlags","","",null,null],[3,"EventAttrFlags","","",null,null],[3,"PerfFileSection","","",null,null],[12,"offset","","",27,null],[12,"size","","",27,null],[3,"NrCpus","","",null,null],[12,"online","","How many CPUs are online",28,null],[12,"available","","CPUs not yet online",28,null],[3,"EventDesc","","",null,null],[12,"attr","","",29,null],[12,"event_string","","",29,null],[12,"ids","","",29,null],[3,"CpuTopology","","",null,null],[12,"cores","","",30,null],[12,"threads","","",30,null],[3,"NumaNode","","",null,null],[12,"node_nr","","",31,null],[12,"mem_total","","",31,null],[12,"mem_free","","",31,null],[12,"cpus","","",31,null],[3,"PmuMapping","","",null,null],[12,"pmu_type","","",32,null],[12,"pmu_name","","",32,null],[3,"GroupDesc","","",null,null],[12,"string","","",33,null],[12,"leader_idx","","",33,null],[12,"nr_members","","",33,null],[4,"EventData","","",null,null],[13,"MMAP","","",34,null],[13,"Lost","","",34,null],[13,"Comm","","",34,null],[13,"Exit","","",34,null],[13,"Throttle","","",34,null],[13,"Unthrottle","","",34,null],[13,"Fork","","",34,null],[13,"Sample","","",34,null],[13,"MMAP2","","",34,null],[13,"BuildId","","",34,null],[13,"None","","",34,null],[4,"EventType","","",null,null],[13,"Mmap","","",35,null],[13,"Lost","","",35,null],[13,"Comm","","",35,null],[13,"Exit","","",35,null],[13,"Throttle","","",35,null],[13,"Unthrottle","","",35,null],[13,"Fork","","",35,null],[13,"Read","","",35,null],[13,"Sample","","",35,null],[13,"Mmap2","","",35,null],[13,"BuildId","","",35,null],[13,"FinishedRound","","",35,null],[13,"Unknown","","",35,null],[4,"HeaderFlag","","",null,null],[13,"NrCpus","","",36,null],[13,"Arch","","",36,null],[13,"Version","","",36,null],[13,"OsRelease","","",36,null],[13,"Hostname","","",36,null],[13,"BuildId","","",36,null],[13,"TracingData","","",36,null],[13,"BranchStack","","",36,null],[13,"NumaTopology","","",36,null],[13,"CpuTopology","","",36,null],[13,"EventDesc","","",36,null],[13,"CmdLine","","",36,null],[13,"TotalMem","","",36,null],[13,"CpuId","","",36,null],[13,"CpuDesc","","",36,null],[13,"GroupDesc","","",36,null],[13,"PmuMappings","","",36,null],[4,"EventAttrType","","",null,null],[13,"Hardware","","",37,null],[13,"Software","","",37,null],[13,"TracePoint","","",37,null],[13,"HwCache","","",37,null],[13,"Raw","","",37,null],[13,"Breakpoint","","",37,null],[13,"Unknown","","",37,null],[17,"FORMAT_TOTAL_TIME_ENABLED","","Adds the 64-bit time_enabled field.  This can be used to calculate estimated totals if the PMU is overcommitted\nand multiplexing is happening.",null,null],[17,"FORMAT_TOTAL_TIME_RUNNING","","Adds the 64-bit time_running field.  This can be used to calculate estimated totals if the PMU is  overcommitted\nand  multiplexing is happening.",null,null],[17,"FORMAT_ID","","Adds a 64-bit unique value that corresponds to the event group.",null,null],[17,"FORMAT_GROUP","","Allows all counter values in an event group to be read with one read.",null,null],[17,"PERF_SAMPLE_IP","","Records instruction pointer.",null,null],[17,"PERF_SAMPLE_TID","","Records the process and thread IDs.",null,null],[17,"PERF_SAMPLE_TIME","","Records a timestamp.",null,null],[17,"PERF_SAMPLE_ADDR","","Records an address, if applicable.",null,null],[17,"PERF_SAMPLE_READ","","Record counter values for all events in a group, not just the group leader.",null,null],[17,"PERF_SAMPLE_CALLCHAIN","","Records the callchain (stack backtrace).",null,null],[17,"PERF_SAMPLE_ID","","Records a unique ID for the opened event&#39;s group leader.",null,null],[17,"PERF_SAMPLE_CPU","","Records CPU number.",null,null],[17,"PERF_SAMPLE_PERIOD","","Records the current sampling period.",null,null],[17,"PERF_SAMPLE_STREAM_ID","","Records  a  unique  ID  for  the  opened  event.  Unlike PERF_SAMPLE_ID the actual ID is returned, not the group\nleader.  This ID is the same as the one returned by PERF_FORMAT_ID.",null,null],[17,"PERF_SAMPLE_RAW","","Records additional data, if applicable.  Usually returned by tracepoint events.",null,null],[17,"PERF_SAMPLE_BRANCH_STACK","","This provides a record of recent branches, as provided by CPU branch  sampling  hardware  (such  as  Intel  Last\nBranch Record).  Not all hardware supports this feature.\nSee the branch_sample_type field for how to filter which branches are reported.",null,null],[17,"PERF_SAMPLE_REGS_USER","","Records the current user-level CPU register state (the values in the process before the kernel was called).",null,null],[17,"PERF_SAMPLE_STACK_USER","","Records the user level stack, allowing stack unwinding.",null,null],[17,"PERF_SAMPLE_WEIGHT","","Records a hardware provided weight value that expresses how costly the sampled event was.\nThis allows the hardware to highlight expensive events in a profile.",null,null],[17,"PERF_SAMPLE_DATA_SRC","","Records the data source: where in the memory hierarchy the data associated with the sampled instruction came from.\nThis is only available if the underlying hardware supports this feature.",null,null],[17,"PERF_SAMPLE_IDENTIFIER","","",null,null],[17,"PERF_SAMPLE_TRANSACTION","","",null,null],[17,"PERF_SAMPLE_REGS_INTR","","",null,null],[17,"EVENT_ATTR_DISABLED","","off by default",null,null],[17,"EVENT_ATTR_INHERIT","","children inherit it",null,null],[17,"EVENT_ATTR_PINNED","","must always be on PMU",null,null],[17,"EVENT_ATTR_EXCLUSIVE","","only group on PMU",null,null],[17,"EVENT_ATTR_EXCLUDE_USER","","don&#39;t count user",null,null],[17,"EVENT_ATTR_EXCLUDE_KERNEL","","ditto kernel",null,null],[17,"EVENT_ATTR_EXCLUDE_HV","","ditto hypervisor",null,null],[17,"EVENT_ATTR_EXCLUDE_IDLE","","don&#39;t count when idle",null,null],[17,"EVENT_ATTR_MMAP","","include mmap data",null,null],[17,"EVENT_ATTR_COMM","","include comm data",null,null],[17,"EVENT_ATTR_FREQ","","use freq, not period",null,null],[17,"EVENT_ATTR_INHERIT_STAT","","per task counts",null,null],[17,"EVENT_ATTR_ENABLE_ON_EXEC","","next exec enables",null,null],[17,"EVENT_ATTR_TASK","","trace fork/exit",null,null],[17,"EVENT_ATTR_WATERMARK","","wakeup_watermark",null,null],[17,"EVENT_ATTR_SAMPLE_IP_ARBITRARY_SKID","","SAMPLE_IP can have arbitrary skid",null,null],[17,"EVENT_ATTR_SAMPLE_IP_CONSTANT_SKID","","SAMPLE_IP must have constant skid",null,null],[17,"EVENT_ATTR_SAMPLE_IP_REQ_ZERO_SKID","","SAMPLE_IP requested to have 0 skid",null,null],[17,"EVENT_ATTR_SAMPLE_IP_ZERO_SKID","","SAMPLE_IP must have 0 skid",null,null],[17,"EVENT_ATTR_MMAP_DATA","","non-exec mmap data",null,null],[17,"EVENT_ATTR_SAMPLE_ID_ALL","","sample_type all events",null,null],[17,"EVENT_ATTR_EXCLUDE_HOST","","don&#39;t count in host",null,null],[17,"EVENT_ATTR_EXCLUDE_GUEST","","don&#39;t count in guest",null,null],[17,"EVENT_ATTR_EXCLUDE_CALLCHAIN_KERNEL","","exclude kernel callchains",null,null],[17,"EVENT_ATTR_EXCLUDE_CALLCHAIN_USER","","exclude user callchains",null,null],[17,"EVENT_ATTR_MMAP2","","include mmap with inode data",null,null],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"fmt","","",34,null],[11,"fmt","","",11,null],[11,"size","","",11,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"fmt","","",35,null],[11,"new","","",35,{"inputs":[{"name":"u32"}],"output":{"name":"eventtype"}}],[11,"is_unknown","","",35,null],[11,"fmt","","",12,null],[11,"fmt","","",13,null],[11,"fmt","","",14,null],[11,"fmt","","",15,null],[11,"fmt","","",16,null],[11,"fmt","","",17,null],[11,"fmt","","",18,null],[11,"default","","",18,{"inputs":[],"output":{"name":"readformat"}}],[11,"fmt","","",19,null],[11,"fmt","","",20,null],[11,"fmt","","",21,null],[11,"fmt","","",22,null],[11,"fmt","","",38,null],[11,"fmt","","",23,null],[11,"eq","","",36,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"fmt","","",24,null],[11,"collect","","",24,null],[11,"fmt","","",25,null],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"attr_type","","",26,null],[11,"default","","",26,{"inputs":[],"output":{"name":"eventattr"}}],[11,"fmt","","",37,null],[11,"new","","",37,{"inputs":[{"name":"u32"}],"output":{"name":"eventattrtype"}}],[11,"hash","","",39,null],[11,"cmp","","",39,null],[11,"partial_cmp","","",39,null],[11,"lt","","",39,null],[11,"le","","",39,null],[11,"gt","","",39,null],[11,"ge","","",39,null],[11,"clone","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"fmt","","",39,null],[11,"empty","","Returns an empty set of flags.",39,{"inputs":[],"output":{"name":"readformatflags"}}],[11,"all","","Returns the set containing all flags.",39,{"inputs":[],"output":{"name":"readformatflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",39,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",39,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",39,{"inputs":[{"name":"u64"}],"output":{"name":"readformatflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",39,null],[11,"is_all","","Returns `true` if all flags are currently set.",39,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",39,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",39,null],[11,"insert","","Inserts the specified flags in-place.",39,null],[11,"remove","","Removes the specified flags in-place.",39,null],[11,"toggle","","Toggles the specified flags in-place.",39,null],[11,"bitor","","Returns the union of the two sets of flags.",39,null],[11,"bitor_assign","","Adds the set of flags.",39,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",39,null],[11,"bitxor_assign","","Toggles the set of flags.",39,null],[11,"bitand","","Returns the intersection between the two sets of flags.",39,null],[11,"bitand_assign","","Disables all flags disabled in the set.",39,null],[11,"sub","","Returns the set difference of the two sets of flags.",39,null],[11,"sub_assign","","Disables all flags enabled in the set.",39,null],[11,"not","","Returns the complement of this set of flags.",39,null],[11,"extend","","",39,null],[11,"from_iter","","",39,{"inputs":[{"name":"t"}],"output":{"name":"readformatflags"}}],[11,"has_total_time_enabled","","",39,null],[11,"has_total_time_running","","",39,null],[11,"has_id","","",39,null],[11,"has_group","","",39,null],[11,"hash","","",40,null],[11,"cmp","","",40,null],[11,"partial_cmp","","",40,null],[11,"lt","","",40,null],[11,"le","","",40,null],[11,"gt","","",40,null],[11,"ge","","",40,null],[11,"clone","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"fmt","","",40,null],[11,"empty","","Returns an empty set of flags.",40,{"inputs":[],"output":{"name":"sampleformatflags"}}],[11,"all","","Returns the set containing all flags.",40,{"inputs":[],"output":{"name":"sampleformatflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",40,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",40,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",40,{"inputs":[{"name":"u64"}],"output":{"name":"sampleformatflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,null],[11,"is_all","","Returns `true` if all flags are currently set.",40,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",40,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",40,null],[11,"insert","","Inserts the specified flags in-place.",40,null],[11,"remove","","Removes the specified flags in-place.",40,null],[11,"toggle","","Toggles the specified flags in-place.",40,null],[11,"bitor","","Returns the union of the two sets of flags.",40,null],[11,"bitor_assign","","Adds the set of flags.",40,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",40,null],[11,"bitxor_assign","","Toggles the set of flags.",40,null],[11,"bitand","","Returns the intersection between the two sets of flags.",40,null],[11,"bitand_assign","","Disables all flags disabled in the set.",40,null],[11,"sub","","Returns the set difference of the two sets of flags.",40,null],[11,"sub_assign","","Disables all flags enabled in the set.",40,null],[11,"not","","Returns the complement of this set of flags.",40,null],[11,"extend","","",40,null],[11,"from_iter","","",40,{"inputs":[{"name":"t"}],"output":{"name":"sampleformatflags"}}],[11,"has_ip","","",40,null],[11,"has_tid","","",40,null],[11,"has_time","","",40,null],[11,"has_addr","","",40,null],[11,"has_read","","",40,null],[11,"has_callchain","","",40,null],[11,"has_sample_id","","",40,null],[11,"has_cpu","","",40,null],[11,"has_period","","",40,null],[11,"has_stream_id","","",40,null],[11,"has_raw","","",40,null],[11,"has_branch_stack","","",40,null],[11,"has_regs_user","","",40,null],[11,"has_stack_user","","",40,null],[11,"has_weight","","",40,null],[11,"has_data_src","","",40,null],[11,"has_identifier","","",40,null],[11,"has_transaction","","",40,null],[11,"has_regs_intr","","",40,null],[11,"hash","","",41,null],[11,"cmp","","",41,null],[11,"partial_cmp","","",41,null],[11,"lt","","",41,null],[11,"le","","",41,null],[11,"gt","","",41,null],[11,"ge","","",41,null],[11,"clone","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"fmt","","",41,null],[11,"empty","","Returns an empty set of flags.",41,{"inputs":[],"output":{"name":"eventattrflags"}}],[11,"all","","Returns the set containing all flags.",41,{"inputs":[],"output":{"name":"eventattrflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",41,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",41,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",41,{"inputs":[{"name":"u64"}],"output":{"name":"eventattrflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",41,null],[11,"is_all","","Returns `true` if all flags are currently set.",41,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",41,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",41,null],[11,"insert","","Inserts the specified flags in-place.",41,null],[11,"remove","","Removes the specified flags in-place.",41,null],[11,"toggle","","Toggles the specified flags in-place.",41,null],[11,"bitor","","Returns the union of the two sets of flags.",41,null],[11,"bitor_assign","","Adds the set of flags.",41,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",41,null],[11,"bitxor_assign","","Toggles the set of flags.",41,null],[11,"bitand","","Returns the intersection between the two sets of flags.",41,null],[11,"bitand_assign","","Disables all flags disabled in the set.",41,null],[11,"sub","","Returns the set difference of the two sets of flags.",41,null],[11,"sub_assign","","Disables all flags enabled in the set.",41,null],[11,"not","","Returns the complement of this set of flags.",41,null],[11,"extend","","",41,null],[11,"from_iter","","",41,{"inputs":[{"name":"t"}],"output":{"name":"eventattrflags"}}],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"start","","",27,null],[11,"end","","",27,null],[11,"fmt","","",28,null],[11,"fmt","","",29,null],[11,"fmt","","",30,null],[11,"fmt","","",31,null],[11,"fmt","","",32,null],[11,"fmt","","",33,null],[0,"parser","perfcnt::linux","Uses the `nom` library to parse the in memory format of perf data structures and\ntransforms them into more rust-like data-strutures.",null,null],[3,"PerfFile","perfcnt::linux::parser","",null,null],[12,"header","","",42,null],[12,"attrs","","",42,null],[3,"PerfFileEventDataIter","","",null,null],[5,"parse_sample_record","","",null,null],[5,"parse_comm_record","","",null,null],[11,"fmt","","",42,null],[11,"next","","",43,null],[11,"new","","",42,{"inputs":[{"name":"vec"}],"output":{"name":"perffile"}}],[11,"data","","",42,null],[11,"get_build_id","","",42,null],[11,"get_hostname","","",42,null],[11,"get_os_release","","",42,null],[11,"get_version","","",42,null],[11,"get_arch","","",42,null],[11,"get_nr_cpus","","",42,null],[11,"get_cpu_description","","",42,null],[11,"get_cpu_id","","",42,null],[11,"get_total_memory","","",42,null],[11,"get_cmd_line","","",42,null],[11,"get_event_description","","",42,null],[11,"get_cpu_topology","","",42,null],[11,"get_numa_topology","","",42,null],[11,"get_pmu_mappings","","",42,null],[11,"get_group_descriptions","","",42,null],[11,"default","perfcnt::linux","",44,{"inputs":[],"output":{"name":"perfcounterbuilderlinux"}}],[11,"from_hardware_event","","Instantiate a generic performance counter for hardware events as defined by the Linux interface.",44,{"inputs":[{"name":"hardwareeventtype"}],"output":{"name":"perfcounterbuilderlinux"}}],[11,"from_software_event","","Instantiate a generic performance counter for software events as defined by the Linux interface.",44,{"inputs":[{"name":"softwareeventtype"}],"output":{"name":"perfcounterbuilderlinux"}}],[11,"from_cache_event","","Instantiate a generic performance counter for software events as defined by the Linux interface.",44,{"inputs":[{"name":"cacheid"},{"name":"cacheopid"},{"name":"cacheopresultid"}],"output":{"name":"perfcounterbuilderlinux"}}],[11,"from_intel_event_description","","Instantiate a H/W performance counter using a hardware event as described in Intels SDM.",44,{"inputs":[{"name":"intelperformancecounterdescription"}],"output":{"name":"perfcounterbuilderlinux"}}],[11,"set_group","","Set counter group.",44,null],[11,"set_flag_fd_output","","Sets PERF_FLAG_FD_OUTPUT",44,null],[11,"set_flag_pid_cgroup","","Sets PERF_FLAG_PID_CGROUP",44,null],[11,"set_sample_period","","Add a sample period.",44,null],[11,"set_sample_frequency","","Add a sample frequency.",44,null],[11,"disable","","The counter starts out disabled.",44,null],[11,"inherit","","This counter should count events of child tasks as well as the task specified.",44,null],[11,"pinned","","The pinned bit specifies that the counter should always be on the CPU if at all possible.\nIt applies only to  hardware counters and only to group leaders.",44,null],[11,"exclusive","","The counter is exclusive i.e., when this counter&#39;s group is on the CPU,\nit should be the only group using the CPU&#39;s counters.",44,null],[11,"exclude_user","","The counter excludes events that happen in user space.",44,null],[11,"exclude_kernel","","The counter excludes events that happen in the kernel.",44,null],[11,"exclude_hv","","The counter excludes events that happen in the hypervisor.",44,null],[11,"exclude_idle","","The counter doesn&#39;t count when the CPU is idle.",44,null],[11,"enable_mmap","","Enables recording of exec mmap events.",44,null],[11,"inherit_stat","","The counter will save event counts on context switch for inherited tasks.\nThis is meaningful only if the inherit field is set.",44,null],[11,"enable_on_exec","","The counter is automatically enabled after a call to exec.",44,null],[11,"enable_task_notification","","fork/exit notifications are included in the ring buffer.",44,null],[11,"enable_watermark","","The counter has  a  sampling  interrupt happen when we cross the wakeup_watermark\nboundary.  Otherwise interrupts happen after wakeup_events samples.",44,null],[11,"set_ip_sample_arbitrary_skid","","Sampled IP counter can have arbitrary skid.",44,null],[11,"set_ip_sample_constant_skid","","Sampled IP counter requested to have constant skid.",44,null],[11,"set_ip_sample_req_zero_skid","","Sampled IP counter requested to have 0 skid.",44,null],[11,"enable_mmap_data","","The counterpart of enable_mmap, but enables including data mmap events in the ring-buffer.",44,null],[11,"set_ip_sample_zero_skid","","Sampled IP counter must have 0 skid.",44,null],[11,"enable_read_format_time_enabled","","Adds the 64-bit time_enabled field.  This can be used to calculate estimated totals if the PMU is overcommitted\nand multiplexing is happening.",44,null],[11,"enable_read_format_time_running","","Adds the 64-bit time_running field.  This can be used to calculate estimated totals if the PMU is  overcommitted\nand  multiplexing is happening.",44,null],[11,"enable_read_format_id","","Adds a 64-bit unique value that corresponds to the event group.",44,null],[11,"enable_read_format_group","","Allows all counter values in an event group to be read with one read.",44,null],[11,"enable_sampling_ip","","",44,null],[11,"enable_sampling_tid","","",44,null],[11,"enable_sampling_time","","",44,null],[11,"enable_sampling_addr","","",44,null],[11,"enable_sampling_read","","",44,null],[11,"enable_sampling_callchain","","",44,null],[11,"enable_sampling_sample_id","","",44,null],[11,"enable_sampling_cpu","","",44,null],[11,"enable_sampling_period","","",44,null],[11,"enable_sampling_stream_id","","",44,null],[11,"enable_sampling_raw","","",44,null],[11,"enable_sampling_branch_stack","","",44,null],[11,"enable_sampling_regs_user","","",44,null],[11,"enable_sampling_stack_user","","",44,null],[11,"enable_sampling_sample_weight","","",44,null],[11,"enable_sampling_data_src","","",44,null],[11,"enable_sampling_identifier","","",44,null],[11,"enable_sampling_transaction","","",44,null],[11,"for_all_pids","","Measure for all PIDs on the core.",44,null],[11,"for_pid","","Measure for a specific PID.",44,null],[11,"on_cpu","","Pin counter to CPU.",44,null],[11,"on_all_cpus","","Measure on all CPUs.",44,null],[11,"finish_sampling_counter","","",44,null],[11,"finish","","Instantiate the performance counter.",44,null],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"filereadformat"}}],[11,"fmt","","",45,null],[11,"read_fd","","Read the file descriptor and parse the return format.",46,null],[11,"reset","","",46,null],[11,"start","","",46,null],[11,"stop","","",46,null],[11,"read","","",46,null],[11,"fmt","","",47,null],[11,"fmt","","",48,null],[11,"fmt","","",49,null],[11,"fmt","","",50,null],[11,"fmt","","",51,null],[11,"fmt","","",52,null],[11,"fmt","","",53,null],[11,"fmt","","",54,null],[11,"fmt","","",6,null],[11,"next","","Iterate over the event buffer.",55,null],[11,"new","","",55,{"inputs":[{"name":"perfcounter"}],"output":{"name":"samplingperfcounter"}}],[11,"print","","",55,null],[8,"AbstractPerfCounter","perfcnt","Abstract trait to control performance counters.",null,null],[10,"reset","","Reset performance counter.",56,null],[10,"start","","Start measuring.",56,null],[10,"stop","","Stop measuring.",56,null],[10,"read","","Read the counter value.",56,null]],"paths":[[3,"FileReadFormat"],[4,"HardwareEventType"],[4,"SoftwareEventType"],[4,"CacheId"],[4,"CacheOpId"],[4,"CacheOpResultId"],[4,"Event"],[3,"ThreadId"],[3,"Cpu"],[3,"SampleId"],[3,"Event"],[3,"EventHeader"],[3,"ForkRecord"],[3,"ExitRecord"],[3,"ThrottleRecord"],[3,"UnthrottleRecord"],[3,"MMAPRecord"],[3,"MMAP2Record"],[3,"ReadFormat"],[3,"ReadRecord"],[3,"BranchEntry"],[3,"SampleRecord"],[3,"CommRecord"],[3,"BuildIdRecord"],[3,"HeaderFlags"],[3,"PerfFileHeader"],[3,"EventAttr"],[3,"PerfFileSection"],[3,"NrCpus"],[3,"EventDesc"],[3,"CpuTopology"],[3,"NumaNode"],[3,"PmuMapping"],[3,"GroupDesc"],[4,"EventData"],[4,"EventType"],[4,"HeaderFlag"],[4,"EventAttrType"],[3,"LostRecord"],[3,"ReadFormatFlags"],[3,"SampleFormatFlags"],[3,"EventAttrFlags"],[3,"PerfFile"],[3,"PerfFileEventDataIter"],[3,"PerfCounterBuilderLinux"],[3,"MMAPPage"],[3,"PerfCounter"],[3,"MMAPRecord"],[3,"LostRecord"],[3,"CommRecord"],[3,"ExitRecord"],[3,"ThrottleRecord"],[3,"ForkRecord"],[3,"ReadRecord"],[3,"SampleRecord"],[3,"SamplingPerfCounter"],[8,"AbstractPerfCounter"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["x86"] = {"doc":"","items":[[0,"io","x86","I/O port functionality.",null,null],[5,"outb","x86::io","Write 8 bits to port",null,{"inputs":[{"name":"u16"},{"name":"u8"}],"output":null}],[5,"inb","","Read 8 bits from port",null,{"inputs":[{"name":"u16"}],"output":{"name":"u8"}}],[5,"outw","","Write 16 bits to port",null,{"inputs":[{"name":"u16"},{"name":"u16"}],"output":null}],[5,"inw","","Read 16 bits from port",null,{"inputs":[{"name":"u16"}],"output":{"name":"u16"}}],[5,"outl","","Write 32 bits to port",null,{"inputs":[{"name":"u16"},{"name":"u32"}],"output":null}],[5,"inl","","Read 32 bits from port",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[0,"controlregs","x86","Functions to read and write control registers.",null,null],[5,"cr0","x86::controlregs","",null,{"inputs":[],"output":{"name":"u64"}}],[5,"cr0_write","","Write cr0.",null,{"inputs":[{"name":"u64"}],"output":null}],[5,"cr2","","Contains page-fault linear address.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"cr3","","Contains page-table root pointer.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"cr3_write","","Switch page-table PML4 pointer.",null,{"inputs":[{"name":"u64"}],"output":null}],[5,"cr4","","Contains various flags to control operations in protected mode.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"cr4_write","","Write cr4.",null,{"inputs":[{"name":"u64"}],"output":null}],[0,"msr","x86","MSR value list and function to read and write them.",null,null],[5,"wrmsr","x86::msr","Write 64 bits to msr register.",null,{"inputs":[{"name":"u32"},{"name":"u64"}],"output":null}],[5,"rdmsr","","Read 64 bits msr register.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u64"}}],[17,"P5_MC_ADDR","","See Section 35.16, MSRs in Pentium Processors,  and see  Table 35-2.",null,null],[17,"IA32_P5_MC_ADDR","","See Section 35.16, MSRs in Pentium Processors.",null,null],[17,"P5_MC_TYPE","","See Section 35.16, MSRs in Pentium Processors,  and see  Table 35-2.",null,null],[17,"IA32_P5_MC_TYPE","","See Section 35.16, MSRs in Pentium Processors.",null,null],[17,"IA32_MONITOR_FILTER_SIZE","","See Section 8.10.5, Monitor/Mwait Address Range Determination,   and see Table 35-2.",null,null],[17,"IA32_MONITOR_FILTER_LINE_SIZE","","See Section 8.10.5, Monitor/Mwait Address  Range Determination.",null,null],[17,"IA32_TIME_STAMP_COUNTER","","See Section 17.13, Time-Stamp Counter,  and see Table 35-2.",null,null],[17,"TSC","","See Section 17.13, Time-Stamp Counter.",null,null],[17,"MSR_PLATFORM_ID","","Model Specific Platform ID (R)",null,null],[17,"IA32_PLATFORM_ID","","Platform ID (R)  See Table 35-2. The operating system can use this MSR to  determine slot  information for the processor and the proper microcode update to load.",null,null],[17,"APIC_BASE","","Section 10.4.4, Local APIC Status and Location.",null,null],[17,"IA32_APIC_BASE","","APIC Location and Status (R/W) See Table 35-2. See Section 10.4.4, Local APIC  Status and Location.",null,null],[17,"EBL_CR_POWERON","","Processor Hard Power-On Configuration  (R/W) Enables and disables processor features;  (R) indicates current processor configuration.",null,null],[17,"MSR_EBL_CR_POWERON","","Processor Hard Power-On Configuration (R/W) Enables and  disables processor features;  (R) indicates current processor configuration.",null,null],[17,"MSR_EBC_HARD_POWERON","","Processor Hard Power-On Configuration (R/W) Enables and disables processor features;  (R) indicates current processor configuration.",null,null],[17,"MSR_EBC_SOFT_POWERON","","Processor Soft Power-On Configuration (R/W)  Enables and disables processor features.",null,null],[17,"MSR_EBC_FREQUENCY_ID","","Processor Frequency Configuration The bit field layout of this MSR varies according to  the MODEL value in the CPUID version  information. The following bit field layout applies to Pentium 4 and Xeon Processors with MODEL  encoding equal or greater than 2.  (R) The field Indicates the current processor  frequency configuration.",null,null],[17,"TEST_CTL","","Test Control Register",null,null],[17,"MSR_SMI_COUNT","","SMI Counter (R/O)",null,null],[17,"IA32_FEATURE_CONTROL","","Control Features in IA-32 Processor (R/W) See Table 35-2 (If CPUID.01H:ECX.[bit 5])",null,null],[17,"IA32_TSC_ADJUST","","Per-Logical-Processor TSC ADJUST (R/W) See Table 35-2.",null,null],[17,"MSR_LASTBRANCH_0_FROM_IP","","Last Branch Record 0 From IP (R/W) One of eight pairs of last branch record registers on the last branch  record stack. This part of the stack contains pointers to the source  instruction for one of the last eight branches, exceptions, or  interrupts taken by the processor. See also: Last Branch Record Stack TOS at 1C9H Section 17.11, Last Branch, Interrupt, and Exception Recording  (Pentium M Processors).",null,null],[17,"MSR_LASTBRANCH_1","","Last Branch Record 1 (R/W) See description of MSR_LASTBRANCH_0.",null,null],[17,"MSR_LASTBRANCH_1_FROM_IP","","Last Branch Record 1 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_2_FROM_IP","","Last Branch Record 2 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_3_FROM_IP","","Last Branch Record 3 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_4","","Last Branch Record 4 (R/W) See description of MSR_LASTBRANCH_0.",null,null],[17,"MSR_LASTBRANCH_4_FROM_IP","","Last Branch Record 4 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_5","","Last Branch Record 5 (R/W) See description of MSR_LASTBRANCH_0.",null,null],[17,"MSR_LASTBRANCH_5_FROM_IP","","Last Branch Record 5 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_6","","Last Branch Record 6 (R/W) See description of MSR_LASTBRANCH_0.",null,null],[17,"MSR_LASTBRANCH_6_FROM_IP","","Last Branch Record 6 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_7","","Last Branch Record 7 (R/W) See description of MSR_LASTBRANCH_0.",null,null],[17,"MSR_LASTBRANCH_7_FROM_IP","","Last Branch Record 7 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_0_TO_IP","","Last Branch Record 0 (R/W)  One of 16 pairs of last branch record registers on  the last branch record stack (6C0H-6CFH). This  part of the stack contains pointers to the  destination instruction for one of the last 16  branches, exceptions, or interrupts that the  processor took. See Section 17.9, Last Branch, Interrupt, and  Exception Recording (Processors based on Intel  NetBurst® Microarchitecture).",null,null],[17,"MSR_LASTBRANCH_1_TO_IP","","Last Branch Record 1 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_2_TO_IP","","Last Branch Record 2 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_3_TO_IP","","Last Branch Record 3 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_4_TO_IP","","Last Branch Record 4 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_5_TO_IP","","Last Branch Record 5 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_6_TO_IP","","Last Branch Record 6 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_7_TO_IP","","Last Branch Record 7 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"IA32_BIOS_UPDT_TRIG","","BIOS Update Trigger Register (W)  See Table 35-2.",null,null],[17,"BIOS_UPDT_TRIG","","BIOS Update Trigger Register.",null,null],[17,"IA32_BIOS_SIGN_ID","","BIOS Update Signature ID (R/W) See Table 35-2.",null,null],[17,"IA32_SMM_MONITOR_CTL","","SMM Monitor Configuration (R/W) See Table 35-2.",null,null],[17,"IA32_SMBASE","","If IA32_VMX_MISC[bit 15])",null,null],[17,"MSR_SMRR_PHYSMASK","","System Management Mode Physical Address Mask register  (WO in SMM) Model-specific implementation of SMRR-like interface, read visible  and write only in SMM..",null,null],[17,"IA32_PMC0","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC1","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC2","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC3","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC4","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC5","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC6","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC7","","Performance Counter Register  See Table 35-2.",null,null],[17,"MSR_FSB_FREQ","","Scaleable Bus Speed(RO) This field indicates the intended scaleable bus clock speed for  processors based on Intel Atom microarchitecture:",null,null],[17,"MSR_PLATFORM_INFO","","see http://biosbits.org.",null,null],[17,"MSR_PKG_CST_CONFIG_CONTROL","","C-State Configuration Control (R/W)  Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States. See http://biosbits.org.",null,null],[17,"MSR_PMG_IO_CAPTURE_BASE","","Power Management IO Redirection in C-state (R/W)  See http://biosbits.org.",null,null],[17,"IA32_MPERF","","Maximum Performance Frequency Clock Count (RW)  See Table 35-2.",null,null],[17,"IA32_APERF","","Actual Performance Frequency Clock Count (RW)  See Table 35-2.",null,null],[17,"IA32_MTRRCAP","","MTRR Information See Section 11.11.1, MTRR Feature  Identification. .",null,null],[17,"MSR_BBL_CR_CTL","","",null,null],[17,"MSR_BBL_CR_CTL3","","",null,null],[17,"IA32_SYSENTER_CS","","CS register target for CPL 0 code (R/W) See Table 35-2. See Section 5.8.7, Performing Fast Calls to  System Procedures with the SYSENTER and  SYSEXIT Instructions.",null,null],[17,"SYSENTER_CS_MSR","","CS register target for CPL 0 code",null,null],[17,"IA32_SYSENTER_ESP","","Stack pointer for CPL 0 stack (R/W) See Table 35-2. See Section 5.8.7, Performing Fast Calls to  System Procedures with the SYSENTER and  SYSEXIT Instructions.",null,null],[17,"SYSENTER_ESP_MSR","","Stack pointer for CPL 0 stack",null,null],[17,"IA32_SYSENTER_EIP","","CPL 0 code entry point (R/W) See Table 35-2. See Section 5.8.7, Performing  Fast Calls to System Procedures with the SYSENTER and SYSEXIT Instructions.",null,null],[17,"SYSENTER_EIP_MSR","","CPL 0 code entry point",null,null],[17,"MCG_CAP","","",null,null],[17,"IA32_MCG_CAP","","Machine Check Capabilities (R) See Table 35-2. See Section 15.3.1.1,  IA32_MCG_CAP MSR.",null,null],[17,"IA32_MCG_STATUS","","Machine Check Status. (R) See Table 35-2. See Section 15.3.1.2,  IA32_MCG_STATUS MSR.",null,null],[17,"MCG_STATUS","","",null,null],[17,"MCG_CTL","","",null,null],[17,"IA32_MCG_CTL","","Machine Check Feature Enable (R/W) See Table 35-2. See Section 15.3.1.3, IA32_MCG_CTL MSR.",null,null],[17,"MSR_SMM_MCA_CAP","","Enhanced SMM Capabilities (SMM-RO) Reports SMM capability Enhancement. Accessible only while in  SMM.",null,null],[17,"MSR_ERROR_CONTROL","","MC Bank Error Configuration (R/W)",null,null],[17,"MSR_MCG_RAX","","Machine Check EAX/RAX Save State See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_RBX","","Machine Check EBX/RBX Save State See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_RCX","","Machine Check ECX/RCX Save State See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_RDX","","Machine Check EDX/RDX Save State See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_RSI","","Machine Check ESI/RSI Save State See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_RDI","","Machine Check EDI/RDI Save State See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_RBP","","Machine Check EBP/RBP Save State See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"IA32_PERFEVTSEL0","","Performance Event Select for Counter 0 (R/W) Supports all fields described inTable 35-2 and the fields below.",null,null],[17,"IA32_PERFEVTSEL1","","Performance Event Select for Counter 1 (R/W) Supports all fields described inTable 35-2 and the fields below.",null,null],[17,"IA32_PERFEVTSEL2","","Performance Event Select for Counter 2 (R/W) Supports all fields described inTable 35-2 and the fields below.",null,null],[17,"MSR_MCG_RFLAGS","","Machine Check EFLAGS/RFLAG Save State See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"IA32_PERFEVTSEL3","","Performance Event Select for Counter 3 (R/W) Supports all fields described inTable 35-2 and the fields below.",null,null],[17,"MSR_MCG_RIP","","Machine Check EIP/RIP Save State See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_MISC","","Machine Check Miscellaneous See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"IA32_PERFEVTSEL4","","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8",null,null],[17,"IA32_PERFEVTSEL5","","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8",null,null],[17,"IA32_PERFEVTSEL6","","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8",null,null],[17,"IA32_PERFEVTSEL7","","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8",null,null],[17,"MSR_MCG_R8","","Machine Check R8 See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_R9","","Machine Check R9D/R9 See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_R10","","Machine Check R10 See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_R11","","Machine Check R11 See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_R12","","Machine Check R12 See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_R13","","Machine Check R13 See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_MCG_R14","","Machine Check R14 See Section 15.3.2.6, IA32_MCG Extended  Machine Check State MSRs.",null,null],[17,"MSR_PERF_STATUS","","",null,null],[17,"IA32_PERF_STATUS","","See Table 35-2. See Section 14.1, Enhanced Intel  Speedstep® Technology.",null,null],[17,"IA32_PERF_CTL","","See Table 35-2. See Section 14.1, Enhanced Intel  Speedstep® Technology.",null,null],[17,"IA32_CLOCK_MODULATION","","Clock Modulation (R/W)  See Table 35-2. IA32_CLOCK_MODULATION MSR was originally named  IA32_THERM_CONTROL MSR.",null,null],[17,"IA32_THERM_INTERRUPT","","Thermal Interrupt Control (R/W) See Section 14.5.2, Thermal Monitor,  and see Table 35-2.",null,null],[17,"IA32_THERM_STATUS","","Thermal Monitor Status (R/W) See Section 14.5.2, Thermal Monitor,  and see  Table 35-2.",null,null],[17,"MSR_THERM2_CTL","","Thermal Monitor 2 Control.",null,null],[17,"IA32_MISC_ENABLE","","",null,null],[17,"MSR_PLATFORM_BRV","","Platform Feature Requirements (R)",null,null],[17,"MSR_TEMPERATURE_TARGET","","",null,null],[17,"MSR_OFFCORE_RSP_0","","Offcore Response Event Select Register (R/W)",null,null],[17,"MSR_OFFCORE_RSP_1","","Offcore Response Event Select Register (R/W)",null,null],[17,"MSR_MISC_PWR_MGMT","","See http://biosbits.org.",null,null],[17,"MSR_TURBO_POWER_CURRENT_LIMIT","","See http://biosbits.org.",null,null],[17,"MSR_TURBO_RATIO_LIMIT","","Maximum Ratio Limit of Turbo Mode RO if MSR_PLATFORM_INFO.[28] = 0, RW if MSR_PLATFORM_INFO.[28] = 1",null,null],[17,"IA32_ENERGY_PERF_BIAS","","if CPUID.6H:ECX[3] = 1",null,null],[17,"IA32_PACKAGE_THERM_STATUS","","If CPUID.06H: EAX[6] = 1",null,null],[17,"IA32_PACKAGE_THERM_INTERRUPT","","If CPUID.06H: EAX[6] = 1",null,null],[17,"MSR_LBR_SELECT","","Last Branch Record Filtering Select Register (R/W)  See Section 17.6.2, Filtering of Last Branch Records.",null,null],[17,"MSR_LASTBRANCH_TOS","","Last Branch Record Stack TOS (R/W)  Contains an index (0-3 or 0-15) that points to the  top of the last branch record stack (that is, that points the index of the MSR containing the most  recent branch record). See Section 17.9.2, LBR Stack for Processors Based on Intel NetBurst® Microarchitecture ; and  addresses 1DBH-1DEH and 680H-68FH.",null,null],[17,"DEBUGCTLMSR","","",null,null],[17,"MSR_DEBUGCTLA","","Debug Control (R/W)  Controls how several debug features are used. Bit  definitions are discussed in the referenced section. See Section 17.9.1, MSR_DEBUGCTLA MSR.",null,null],[17,"MSR_DEBUGCTLB","","Debug Control (R/W)  Controls how several debug features are used. Bit definitions are discussed in the referenced section. See Section 17.11, Last Branch, Interrupt, and Exception Recording  (Pentium M Processors).",null,null],[17,"IA32_DEBUGCTL","","Debug Control (R/W)  Controls how several debug features are used. Bit definitions are  discussed in the referenced section.",null,null],[17,"LASTBRANCHFROMIP","","",null,null],[17,"MSR_LASTBRANCH_0","","Last Branch Record 0 (R/W)  One of four last branch record registers on the last  branch record stack. It contains pointers to the  source and destination instruction for one of the  last four branches, exceptions, or interrupts that  the processor took. MSR_LASTBRANCH_0 through  MSR_LASTBRANCH_3 at 1DBH-1DEH are  available only on family 0FH, models 0H-02H.  They have been replaced by the MSRs at 680H- 68FH and 6C0H-6CFH.",null,null],[17,"LASTBRANCHTOIP","","",null,null],[17,"LASTINTFROMIP","","",null,null],[17,"MSR_LASTBRANCH_2","","Last Branch Record 2 See description of the MSR_LASTBRANCH_0 MSR at 1DBH.",null,null],[17,"MSR_LER_FROM_LIP","","Last Exception Record From Linear IP (R)  Contains a pointer to the last branch instruction that the processor  executed prior to the last exception that was generated or the last  interrupt that was handled. See Section 17.11, Last Branch, Interrupt, and Exception Recording  (Pentium M Processors)  and Section 17.12.2, Last Branch and Last  Exception MSRs.",null,null],[17,"LASTINTTOIP","","",null,null],[17,"MSR_LASTBRANCH_3","","Last Branch Record 3 See description of the MSR_LASTBRANCH_0 MSR  at 1DBH.",null,null],[17,"MSR_LER_TO_LIP","","Last Exception Record To Linear IP (R)  This area contains a pointer to the target of the last branch instruction  that the processor executed prior to the last exception that was  generated or the last interrupt that was handled. See Section 17.11, Last Branch, Interrupt, and Exception Recording  (Pentium M Processors)  and Section 17.12.2, Last Branch and Last  Exception MSRs.",null,null],[17,"ROB_CR_BKUPTMPDR6","","",null,null],[17,"IA32_SMRR_PHYSBASE","","See Table 35-2.",null,null],[17,"IA32_SMRR_PHYSMASK","","If IA32_MTRR_CAP[SMRR]  = 1",null,null],[17,"IA32_PLATFORM_DCA_CAP","","06_0FH",null,null],[17,"IA32_CPU_DCA_CAP","","",null,null],[17,"IA32_DCA_0_CAP","","06_2EH",null,null],[17,"MSR_POWER_CTL","","Power Control Register. See http://biosbits.org.",null,null],[17,"IA32_MTRR_PHYSBASE0","","Variable Range Base MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSMASK0","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSBASE1","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSMASK1","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSBASE2","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSMASK2","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs .",null,null],[17,"IA32_MTRR_PHYSBASE3","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSMASK3","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSBASE4","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSMASK4","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSBASE5","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSMASK5","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSBASE6","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSMASK6","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSBASE7","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSMASK7","","Variable Range Mask MTRR See Section 11.11.2.3, Variable Range MTRRs.",null,null],[17,"IA32_MTRR_PHYSBASE8","","if IA32_MTRR_CAP[7:0] &gt;  8",null,null],[17,"IA32_MTRR_PHYSMASK8","","if IA32_MTRR_CAP[7:0] &gt;  8",null,null],[17,"IA32_MTRR_PHYSBASE9","","if IA32_MTRR_CAP[7:0] &gt;  9",null,null],[17,"IA32_MTRR_PHYSMASK9","","if IA32_MTRR_CAP[7:0] &gt;  9",null,null],[17,"IA32_MTRR_FIX64K_00000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX16K_80000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX16K_A0000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_C0000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_C8000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .",null,null],[17,"IA32_MTRR_FIX4K_D0000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .",null,null],[17,"IA32_MTRR_FIX4K_D8000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_E0000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_E8000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_F0000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_F8000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_PAT","","Page Attribute Table See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MC0_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC1_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC2_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC3_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC4_CTL2","","See Table 35-2.",null,null],[17,"MSR_MC4_CTL2","","Always 0 (CMCI not supported).",null,null],[17,"IA32_MC5_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC6_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC7_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC8_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC9_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC10_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC11_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC12_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC13_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC14_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC15_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC16_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC17_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC18_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC19_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC20_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC21_CTL2","","See Table 35-2.",null,null],[17,"IA32_MTRR_DEF_TYPE","","Default Memory Types (R/W)  Sets the memory type for the regions of physical memory that are not  mapped by the MTRRs.  See Section 11.11.2.1, IA32_MTRR_DEF_TYPE MSR.",null,null],[17,"MSR_BPU_COUNTER0","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_GQ_SNOOP_MESF","","",null,null],[17,"MSR_BPU_COUNTER1","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_BPU_COUNTER2","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_BPU_COUNTER3","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_MS_COUNTER0","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_MS_COUNTER1","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_MS_COUNTER2","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_MS_COUNTER3","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_FLAME_COUNTER0","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_PERF_FIXED_CTR0","","Fixed-Function Performance Counter Register 0 (R/W)",null,null],[17,"IA32_FIXED_CTR0","","Fixed-Function Performance Counter Register 0 (R/W)  See Table 35-2.",null,null],[17,"MSR_FLAME_COUNTER1","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_PERF_FIXED_CTR1","","Fixed-Function Performance Counter Register 1 (R/W)",null,null],[17,"IA32_FIXED_CTR1","","Fixed-Function Performance Counter Register 1 (R/W)  See Table 35-2.",null,null],[17,"MSR_FLAME_COUNTER2","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_PERF_FIXED_CTR2","","Fixed-Function Performance Counter Register 2 (R/W)",null,null],[17,"IA32_FIXED_CTR2","","Fixed-Function Performance Counter Register 2 (R/W)  See Table 35-2.",null,null],[17,"MSR_FLAME_COUNTER3","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_IQ_COUNTER4","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_IQ_COUNTER5","","See Section 18.12.2, Performance Counters.",null,null],[17,"IA32_PERF_CAPABILITIES","","See Table 35-2. See Section 17.4.1, IA32_DEBUGCTL MSR.",null,null],[17,"MSR_PERF_CAPABILITIES","","RO. This applies to processors that do not support architectural  perfmon version 2.",null,null],[17,"MSR_BPU_CCCR0","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_BPU_CCCR1","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_BPU_CCCR2","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_BPU_CCCR3","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_MS_CCCR0","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_MS_CCCR1","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_MS_CCCR2","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_MS_CCCR3","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_FLAME_CCCR0","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_FLAME_CCCR1","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_FLAME_CCCR2","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_FLAME_CCCR3","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR0","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR1","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR2","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR3","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR4","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR5","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_PERF_FIXED_CTR_CTRL","","Fixed-Function-Counter Control Register (R/W)",null,null],[17,"IA32_FIXED_CTR_CTRL","","Fixed-Function-Counter Control Register (R/W)  See Table 35-2.",null,null],[17,"MSR_PERF_GLOBAL_STAUS","","See Section 18.4.2, Global Counter Control Facilities.",null,null],[17,"IA32_PERF_GLOBAL_STAUS","","See Table 35-2. See Section 18.4.2, Global Counter Control  Facilities.",null,null],[17,"MSR_PERF_GLOBAL_CTRL","","See Section 18.4.2, Global Counter Control Facilities.",null,null],[17,"IA32_PERF_GLOBAL_CTRL","","See Table 35-2. See Section 18.4.2, Global Counter Control  Facilities.",null,null],[17,"MSR_PERF_GLOBAL_OVF_CTRL","","See Section 18.4.2, Global Counter Control Facilities.",null,null],[17,"IA32_PERF_GLOBAL_OVF_CTRL","","See Table 35-2. See Section 18.4.2, Global Counter Control  Facilities.",null,null],[17,"MSR_UNCORE_PERF_GLOBAL_CTRL","","See Section 18.7.2.1, Uncore Performance Monitoring  Management Facility.",null,null],[17,"MSR_UNC_PERF_GLOBAL_CTRL","","Uncore PMU global control",null,null],[17,"MSR_UNCORE_PERF_GLOBAL_STATUS","","See Section 18.7.2.1, Uncore Performance Monitoring  Management Facility.",null,null],[17,"MSR_UNC_PERF_GLOBAL_STATUS","","Uncore PMU main status",null,null],[17,"MSR_UNCORE_PERF_GLOBAL_OVF_CTRL","","See Section 18.7.2.1, Uncore Performance Monitoring  Management Facility.",null,null],[17,"MSR_UNCORE_FIXED_CTR0","","See Section 18.7.2.1, Uncore Performance Monitoring  Management Facility.",null,null],[17,"MSR_W_PMON_FIXED_CTR","","Uncore W-box perfmon fixed counter",null,null],[17,"MSR_UNC_PERF_FIXED_CTRL","","Uncore fixed counter control (R/W)",null,null],[17,"MSR_UNCORE_FIXED_CTR_CTRL","","See Section 18.7.2.1, Uncore Performance Monitoring  Management Facility.",null,null],[17,"MSR_W_PMON_FIXED_CTR_CTL","","Uncore U-box perfmon fixed counter control MSR",null,null],[17,"MSR_UNC_PERF_FIXED_CTR","","Uncore fixed counter",null,null],[17,"MSR_UNCORE_ADDR_OPCODE_MATCH","","See Section 18.7.2.3, Uncore Address/Opcode Match MSR.",null,null],[17,"MSR_UNC_CBO_CONFIG","","Uncore C-Box configuration information (R/O)",null,null],[17,"MSR_PEBS_NUM_ALT","","",null,null],[17,"MSR_BSU_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_BSU_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FSB_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FSB_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FIRM_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FIRM_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FLAME_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FLAME_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_DAC_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_DAC_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_MOB_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_MOB_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_PMH_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_PMH_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_SAAT_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_SAAT_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_U2L_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC0","","See Section 18.7.2.2, Uncore Performance Event Configuration  Facility.",null,null],[17,"MSR_UNC_ARB_PER_CTR0","","Uncore Arb unit, performance counter 0",null,null],[17,"MSR_U2L_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC1","","See Section 18.7.2.2, Uncore Performance Event Configuration  Facility.",null,null],[17,"MSR_UNC_ARB_PER_CTR1","","Uncore Arb unit, performance counter 1",null,null],[17,"MSR_BPU_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC2","","See Section 18.7.2.2, Uncore Performance Event Configuration  Facility.",null,null],[17,"MSR_UNC_ARB_PERFEVTSEL0","","Uncore Arb unit, counter 0 event select MSR",null,null],[17,"MSR_BPU_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC3","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_UNC_ARB_PERFEVTSEL1","","Uncore Arb unit, counter 1 event select MSR",null,null],[17,"MSR_IS_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC4","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_IS_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC5","","See Section 18.7.2.2, Uncore Performance Event Configuration  Facility.",null,null],[17,"MSR_ITLB_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC6","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_ITLB_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC7","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_CRU_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_CRU_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_IQ_ESCR0","","See Section 18.12.1, ESCR MSRs. This MSR is not available on later processors. It is  only available on processor family 0FH, models  01H-02H.",null,null],[17,"MSR_IQ_ESCR1","","See Section 18.12.1, ESCR MSRs. This MSR is not available on later processors. It is  only available on processor family 0FH, models  01H-02H.",null,null],[17,"MSR_RAT_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_RAT_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_SSU_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_MS_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL0","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_MS_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL1","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_TBPU_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL2","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_TBPU_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL3","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_TC_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL4","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_TC_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL5","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_UNCORE_PERFEVTSEL6","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_UNCORE_PERFEVTSEL7","","See Section 18.7.2.2, Uncore Performance Event Configuration Facility.",null,null],[17,"MSR_IX_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_ALF_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_ALF_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_CRU_ESCR2","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_CRU_ESCR3","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_CRU_ESCR4","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_CRU_ESCR5","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"IA32_PEBS_ENABLE","","",null,null],[17,"MSR_PEBS_ENABLE","","Precise Event-Based Sampling (PEBS) (R/W)  Controls the enabling of precise event sampling  and replay tagging.",null,null],[17,"MSR_PEBS_MATRIX_VERT","","See Table 19-26.",null,null],[17,"MSR_PEBS_LD_LAT","","see See Section 18.7.1.2, Load Latency Performance Monitoring  Facility.",null,null],[17,"MSR_PKG_C3_RESIDENCY","","Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States.",null,null],[17,"MSR_PKG_C2_RESIDENCY","","Package C2 Residency Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C-States",null,null],[17,"MSR_PKG_C6C_RESIDENCY","","Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States.",null,null],[17,"MSR_PKG_C4_RESIDENCY","","Package C4 Residency Note: C-state values are processor specific C-state code names, unrelated to MWAIT extension C-state parameters or ACPI C-States",null,null],[17,"MSR_PKG_C7_RESIDENCY","","Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States.",null,null],[17,"MSR_PKG_C6_RESIDENCY","","Package C6 Residency Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C-States",null,null],[17,"MSR_CORE_C3_RESIDENCY","","Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States.",null,null],[17,"MSR_CORE_C4_RESIDENCY","","Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States.",null,null],[17,"MSR_CORE_C6_RESIDENCY","","Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States.",null,null],[17,"MSR_CORE_C7_RESIDENCY","","Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States.",null,null],[17,"MC0_CTL","","",null,null],[17,"IA32_MC0_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MC0_STATUS","","",null,null],[17,"IA32_MC0_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"MC0_ADDR","","",null,null],[17,"IA32_MC0_ADDR1","","P6 Family Processors",null,null],[17,"IA32_MC0_ADDR","","See Section 14.3.2.3., IA32_MCi_ADDR MSRs .  The IA32_MC0_ADDR register is either not implemented or contains no address if the ADDRV flag in the IA32_MC0_STATUS register is clear.  When not implemented in the processor, all reads and writes to this MSR  will cause a general-protection exception.",null,null],[17,"MC0_MISC","","Defined in MCA architecture but not implemented in the P6 family  processors.",null,null],[17,"IA32_MC0_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The IA32_MC0_MISC MSR is either not  implemented or does not contain additional  information if the MISCV flag in the  IA32_MC0_STATUS register is clear. When not implemented in the processor, all reads  and writes to this MSR will cause a general- protection exception.",null,null],[17,"MSR_MC0_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MC1_CTL","","",null,null],[17,"IA32_MC1_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MC1_STATUS","","Bit definitions same as MC0_STATUS.",null,null],[17,"IA32_MC1_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"MC1_ADDR","","",null,null],[17,"IA32_MC1_ADDR2","","P6 Family Processors",null,null],[17,"IA32_MC1_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The IA32_MC1_ADDR register is either not implemented or  contains no address if the ADDRV flag in the IA32_MC1_STATUS  register is clear.  When not implemented in the processor, all reads and writes to this  MSR will cause a general-protection exception.",null,null],[17,"MC1_MISC","","Defined in MCA architecture but not implemented in the P6 family  processors.",null,null],[17,"IA32_MC1_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The IA32_MC1_MISC MSR is either not  implemented or does not contain additional  information if the MISCV flag in the  IA32_MC1_STATUS register is clear. When not implemented in the processor, all reads  and writes to this MSR will cause a general- protection exception.",null,null],[17,"MSR_MC1_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MC2_CTL","","",null,null],[17,"IA32_MC2_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MC2_STATUS","","Bit definitions same as MC0_STATUS.",null,null],[17,"IA32_MC2_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"MC2_ADDR","","",null,null],[17,"IA32_MC2_ADDR1","","P6 Family Processors",null,null],[17,"IA32_MC2_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The IA32_MC2_ADDR register is either not  implemented or contains no address if the ADDRV  flag in the IA32_MC2_STATUS register is clear.  When not implemented in the processor, all reads  and writes to this MSR will cause a general- protection exception.",null,null],[17,"MC2_MISC","","Defined in MCA architecture but not implemented in the P6 family  processors.",null,null],[17,"IA32_MC2_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The IA32_MC2_MISC MSR is either not  implemented or does not contain additional  information if the MISCV flag in the IA32_MC2_STATUS register is clear.  When not implemented in the processor, all reads  and writes to this MSR will cause a general- protection exception.",null,null],[17,"MSR_MC2_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MC4_CTL","","",null,null],[17,"IA32_MC3_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC4_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MC4_STATUS","","Bit definitions same as MC0_STATUS, except bits 0, 4, 57, and 61 are  hardcoded to 1.",null,null],[17,"IA32_MC3_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"MSR_MC4_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.",null,null],[17,"MC4_ADDR","","Defined in MCA architecture but not implemented in P6 Family processors.",null,null],[17,"IA32_MC3_ADDR1","","P6 Family Processors",null,null],[17,"IA32_MC3_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The IA32_MC3_ADDR register is either not  implemented or contains no address if the ADDRV  flag in the IA32_MC3_STATUS register is clear. When not implemented in the processor, all reads  and writes to this MSR will cause a general- protection exception.",null,null],[17,"MSR_MC4_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR register is either not implemented or  contains no address if the ADDRV flag in the MSR_MC4_STATUS  register is clear. When not implemented in the processor, all reads and writes to this  MSR will cause a general-protection exception.",null,null],[17,"MC4_MISC","","Defined in MCA architecture but not implemented in the P6 family  processors.",null,null],[17,"IA32_MC3_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The IA32_MC3_MISC MSR is either not  implemented or does not contain additional  information if the MISCV flag in the  IA32_MC3_STATUS register is clear. When not implemented in the processor, all reads  and writes to this MSR will cause a general- protection exception.",null,null],[17,"MC3_CTL","","",null,null],[17,"IA32_MC4_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC3_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MC3_STATUS","","Bit definitions same as MC0_STATUS.",null,null],[17,"IA32_MC4_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"MSR_MC3_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.",null,null],[17,"MC3_ADDR","","",null,null],[17,"IA32_MC4_ADDR1","","P6 Family Processors",null,null],[17,"IA32_MC4_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The IA32_MC2_ADDR register is either not  implemented or contains no address if the ADDRV  flag in the IA32_MC4_STATUS register is clear.  When not implemented in the processor, all reads  and writes to this MSR will cause a general- protection exception.",null,null],[17,"MSR_MC3_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC3_ADDR register is either not implemented or  contains no address if the ADDRV flag in the MSR_MC3_STATUS register is clear.  When not implemented in the processor, all reads and writes to this  MSR will cause a general-protection exception.",null,null],[17,"MSR_MC3_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MC3_MISC","","Defined in MCA architecture but not implemented in the P6 family  processors.",null,null],[17,"IA32_MC4_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.   The IA32_MC2_MISC MSR is either not  implemented or does not contain additional  information if the MISCV flag in the  IA32_MC4_STATUS register is clear.  When not implemented in the processor, all reads  and writes to this MSR will cause a general- protection exception.",null,null],[17,"MSR_MC4_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC5_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC5_CTL","","06_0FH",null,null],[17,"MSR_MC5_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC5_STATUS","","06_0FH",null,null],[17,"MSR_MC5_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR register is either not implemented or  contains no address if the ADDRV flag in the MSR_MC4_STATUS  register is clear. When not implemented in the processor, all reads and writes to this  MSR will cause a general-protection exception.",null,null],[17,"IA32_MC5_ADDR1","","06_0FH",null,null],[17,"MSR_MC5_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC5_MISC","","06_0FH",null,null],[17,"IA32_MC6_CTL","","06_1DH",null,null],[17,"MSR_MC6_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC6_STATUS","","06_1DH",null,null],[17,"MSR_MC6_STATUS","","Apply to Intel Xeon processor 7400 series (processor signature  06_1D) only. See Section 15.3.2.2, IA32_MCi_STATUS MSRS.  and  Chapter 23.",null,null],[17,"IA32_MC6_ADDR1","","06_1DH",null,null],[17,"MSR_MC6_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC6_MISC","","Misc MAC information of Integrated I/O. (R/O) see Section 15.3.2.4",null,null],[17,"MSR_MC6_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC7_CTL","","06_1AH",null,null],[17,"MSR_MC7_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC7_STATUS","","06_1AH",null,null],[17,"MSR_MC7_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC7_ADDR1","","06_1AH",null,null],[17,"MSR_MC7_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC7_MISC","","06_1AH",null,null],[17,"MSR_MC7_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC8_CTL","","06_1AH",null,null],[17,"MSR_MC8_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC8_STATUS","","06_1AH",null,null],[17,"MSR_MC8_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC8_ADDR1","","06_1AH",null,null],[17,"MSR_MC8_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC8_MISC","","06_1AH",null,null],[17,"MSR_MC8_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC9_CTL","","06_2EH",null,null],[17,"MSR_MC9_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC9_STATUS","","06_2EH",null,null],[17,"MSR_MC9_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC9_ADDR1","","06_2EH",null,null],[17,"MSR_MC9_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC9_MISC","","06_2EH",null,null],[17,"MSR_MC9_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC10_CTL","","06_2EH",null,null],[17,"MSR_MC10_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC10_STATUS","","06_2EH",null,null],[17,"MSR_MC10_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC10_ADDR1","","06_2EH",null,null],[17,"MSR_MC10_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC10_MISC","","06_2EH",null,null],[17,"MSR_MC10_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC11_CTL","","06_2EH",null,null],[17,"MSR_MC11_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC11_STATUS","","06_2EH",null,null],[17,"MSR_MC11_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC11_ADDR1","","06_2EH",null,null],[17,"MSR_MC11_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC11_MISC","","06_2EH",null,null],[17,"MSR_MC11_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC12_CTL","","06_2EH",null,null],[17,"MSR_MC12_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC12_STATUS","","06_2EH",null,null],[17,"MSR_MC12_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC12_ADDR1","","06_2EH",null,null],[17,"MSR_MC12_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC12_MISC","","06_2EH",null,null],[17,"MSR_MC12_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC13_CTL","","06_2EH",null,null],[17,"MSR_MC13_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC13_STATUS","","06_2EH",null,null],[17,"MSR_MC13_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC13_ADDR1","","06_2EH",null,null],[17,"MSR_MC13_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC13_MISC","","06_2EH",null,null],[17,"MSR_MC13_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC14_CTL","","06_2EH",null,null],[17,"MSR_MC14_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC14_STATUS","","06_2EH",null,null],[17,"MSR_MC14_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC14_ADDR1","","06_2EH",null,null],[17,"MSR_MC14_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC14_MISC","","06_2EH",null,null],[17,"MSR_MC14_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC15_CTL","","06_2EH",null,null],[17,"MSR_MC15_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC15_STATUS","","06_2EH",null,null],[17,"MSR_MC15_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC15_ADDR1","","06_2EH",null,null],[17,"MSR_MC15_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC15_MISC","","06_2EH",null,null],[17,"MSR_MC15_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC16_CTL","","06_2EH",null,null],[17,"MSR_MC16_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC16_STATUS","","06_2EH",null,null],[17,"MSR_MC16_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC16_ADDR1","","06_2EH",null,null],[17,"MSR_MC16_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC16_MISC","","06_2EH",null,null],[17,"MSR_MC16_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC17_CTL","","06_2EH",null,null],[17,"MSR_MC17_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC17_STATUS","","06_2EH",null,null],[17,"MSR_MC17_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC17_ADDR1","","06_2EH",null,null],[17,"MSR_MC17_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC17_MISC","","06_2EH",null,null],[17,"MSR_MC17_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC18_CTL","","06_2EH",null,null],[17,"MSR_MC18_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC18_STATUS","","06_2EH",null,null],[17,"MSR_MC18_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC18_ADDR1","","06_2EH",null,null],[17,"MSR_MC18_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC18_MISC","","06_2EH",null,null],[17,"MSR_MC18_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC19_CTL","","06_2EH",null,null],[17,"MSR_MC19_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC19_STATUS","","06_2EH",null,null],[17,"MSR_MC19_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC19_ADDR1","","06_2EH",null,null],[17,"MSR_MC19_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC19_MISC","","06_2EH",null,null],[17,"MSR_MC19_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC20_CTL","","06_2EH",null,null],[17,"MSR_MC20_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC20_STATUS","","06_2EH",null,null],[17,"MSR_MC20_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC20_ADDR1","","06_2EH",null,null],[17,"MSR_MC20_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC20_MISC","","06_2EH",null,null],[17,"MSR_MC20_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC21_CTL","","06_2EH",null,null],[17,"MSR_MC21_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC21_STATUS","","06_2EH",null,null],[17,"MSR_MC21_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"IA32_MC21_ADDR1","","06_2EH",null,null],[17,"MSR_MC21_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC21_MISC","","06_2EH",null,null],[17,"MSR_MC21_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC22_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC22_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"MSR_MC22_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"MSR_MC22_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC23_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC23_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"MSR_MC23_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"MSR_MC23_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC24_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC24_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"MSR_MC24_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"MSR_MC24_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC25_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC25_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"MSR_MC25_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"MSR_MC25_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC26_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC26_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter 16.",null,null],[17,"MSR_MC26_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"MSR_MC26_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_VMX_BASIC","","Reporting Register of Basic VMX Capabilities (R/O) See Table 35-2. See Appendix A.1, Basic VMX Information (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_PINBASED_CTLS","","Capability Reporting Register of Pin-based VM-execution  Controls (R/O) See Appendix A.3, VM-Execution Controls (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_PROCBASED_CTLS","","Capability Reporting Register of Primary Processor-based  VM-execution Controls (R/O) See Appendix A.3, VM-Execution Controls (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_EXIT_CTLS","","Capability Reporting Register of VM-exit Controls (R/O) See Appendix A.4, VM-Exit Controls (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_ENTRY_CTLS","","Capability Reporting Register of VM-entry Controls (R/O) See Appendix A.5, VM-Entry Controls (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_MISC","","Reporting Register of Miscellaneous VMX Capabilities (R/O) See Appendix A.6, Miscellaneous Data (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_CR0_FIXED0","","Capability Reporting Register of CR0 Bits Fixed to 0 (R/O) See Appendix A.7, VMX-Fixed Bits in CR0 (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_CRO_FIXED0","","If CPUID.01H:ECX.[bit 5] = 1",null,null],[17,"IA32_VMX_CR0_FIXED1","","Capability Reporting Register of CR0 Bits Fixed to 1 (R/O) See Appendix A.7, VMX-Fixed Bits in CR0 (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_CRO_FIXED1","","If CPUID.01H:ECX.[bit 5] = 1",null,null],[17,"IA32_VMX_CR4_FIXED0","","Capability Reporting Register of CR4 Bits Fixed to 0 (R/O) See Appendix A.8, VMX-Fixed Bits in CR4 (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_CR4_FIXED1","","Capability Reporting Register of CR4 Bits Fixed to 1 (R/O) See Appendix A.8, VMX-Fixed Bits in CR4 (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_VMCS_ENUM","","Capability Reporting Register of VMCS Field Enumeration (R/O) See Appendix A.9, VMCS Enumeration (If CPUID.01H:ECX.[bit 9])",null,null],[17,"IA32_VMX_PROCBASED_CTLS2","","Capability Reporting Register of Secondary Processor-based  VM-execution Controls (R/O) See Appendix A.3, VM-Execution Controls (If CPUID.01H:ECX.[bit 9] and  IA32_VMX_PROCBASED_CTLS[bit 63])",null,null],[17,"IA32_VMX_EPT_VPID_ENUM","","Capability Reporting Register of EPT and VPID (R/O)  See Table 35-2",null,null],[17,"IA32_VMX_EPT_VPID_CAP","","If ( CPUID.01H:ECX.[bit 5],  IA32_VMX_PROCBASED_C TLS[bit 63], and either  IA32_VMX_PROCBASED_C TLS2[bit 33] or  IA32_VMX_PROCBASED_C TLS2[bit 37])",null,null],[17,"IA32_VMX_TRUE_PINBASED_CTLS","","Capability Reporting Register of Pin-based VM-execution Flex  Controls (R/O) See Table 35-2",null,null],[17,"IA32_VMX_TRUE_PROCBASED_CTLS","","Capability Reporting Register of Primary Processor-based  VM-execution Flex Controls (R/O) See Table 35-2",null,null],[17,"IA32_VMX_TRUE_EXIT_CTLS","","Capability Reporting Register of VM-exit Flex Controls (R/O) See Table 35-2",null,null],[17,"IA32_VMX_TRUE_ENTRY_CTLS","","Capability Reporting Register of VM-entry Flex Controls (R/O) See Table 35-2",null,null],[17,"IA32_VMX_FMFUNC","","Capability Reporting Register of VM-function Controls (R/O) See Table 35-2",null,null],[17,"IA32_VMX_VMFUNC","","If( CPUID.01H:ECX.[bit 5] =  1 and IA32_VMX_BASIC[bit 55] )",null,null],[17,"IA32_A_PMC0","","(If CPUID.0AH: EAX[15:8] &gt;  0) &amp; IA32_PERF_CAPABILITIES[ 13] = 1",null,null],[17,"IA32_A_PMC1","","(If CPUID.0AH: EAX[15:8] &gt;  1) &amp; IA32_PERF_CAPABILITIES[ 13] = 1",null,null],[17,"IA32_A_PMC2","","(If CPUID.0AH: EAX[15:8] &gt;  2) &amp; IA32_PERF_CAPABILITIES[ 13] = 1",null,null],[17,"IA32_A_PMC3","","(If CPUID.0AH: EAX[15:8] &gt;  3) &amp; IA32_PERF_CAPABILITIES[ 13] = 1",null,null],[17,"IA32_A_PMC4","","(If CPUID.0AH: EAX[15:8] &gt;  4) &amp; IA32_PERF_CAPABILITIES[ 13] = 1",null,null],[17,"IA32_A_PMC5","","(If CPUID.0AH: EAX[15:8] &gt;  5) &amp; IA32_PERF_CAPABILITIES[ 13] = 1",null,null],[17,"IA32_A_PMC6","","(If CPUID.0AH: EAX[15:8] &gt;  6) &amp; IA32_PERF_CAPABILITIES[ 13] = 1",null,null],[17,"IA32_A_PMC7","","(If CPUID.0AH: EAX[15:8] &gt;  7) &amp; IA32_PERF_CAPABILITIES[ 13] = 1",null,null],[17,"MSR_SMM_FEATURE_CONTROL","","Enhanced SMM Feature Control (SMM-RW) Reports SMM capability Enhancement. Accessible only while in  SMM.",null,null],[17,"MSR_SMM_DELAYED","","SMM Delayed (SMM-RO) Reports the interruptible state of all logical processors in the  package . Available only while in SMM and  MSR_SMM_MCA_CAP[LONG_FLOW_INDICATION] == 1.",null,null],[17,"MSR_SMM_BLOCKED","","SMM Blocked (SMM-RO) Reports the blocked state of all logical processors in the package .  Available only while in SMM.",null,null],[17,"IA32_DS_AREA","","DS Save Area (R/W) See Table 35-2. Points to the DS buffer management area, which is used to manage the  BTS and PEBS buffers. See Section 18.12.4, Debug Store (DS)  Mechanism.",null,null],[17,"MSR_RAPL_POWER_UNIT","","Unit Multipliers used in RAPL Interfaces (R/O)  See Section 14.7.1, RAPL Interfaces.",null,null],[17,"MSR_PKGC3_IRTL","","Package C3 Interrupt Response Limit (R/W)  Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States.",null,null],[17,"MSR_PKGC6_IRTL","","Package C6 Interrupt Response Limit (R/W)  This MSR defines the budget allocated for the package to exit from  C6 to a C0 state, where interrupt request can be delivered to the  core and serviced. Additional core-exit latency amy be applicable  depending on the actual C-state the core is in.  Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States.",null,null],[17,"MSR_PKGC7_IRTL","","Package C7 Interrupt Response Limit (R/W)  This MSR defines the budget allocated for the package to exit from  C7 to a C0 state, where interrupt request can be delivered to the  core and serviced. Additional core-exit latency amy be applicable  depending on the actual C-state the core is in.  Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C-States.",null,null],[17,"MSR_PKG_POWER_LIMIT","","PKG RAPL Power Limit Control (R/W)  See Section 14.7.3, Package RAPL Domain.",null,null],[17,"MSR_PKG_ENERGY_STATUS","","PKG Energy Status (R/O)  See Section 14.7.3, Package RAPL Domain.",null,null],[17,"MSR_PKG_PERF_STATUS","","Package RAPL Perf Status (R/O)",null,null],[17,"MSR_PKG_POWER_INFO","","PKG RAPL Parameters (R/W) See Section 14.7.3,  Package RAPL  Domain.",null,null],[17,"MSR_DRAM_POWER_LIMIT","","DRAM RAPL Power Limit Control (R/W)  See Section 14.7.5, DRAM RAPL Domain.",null,null],[17,"MSR_DRAM_ENERGY_STATUS","","DRAM Energy Status (R/O)  See Section 14.7.5, DRAM RAPL Domain.",null,null],[17,"MSR_DRAM_PERF_STATUS","","DRAM Performance Throttling Status (R/O) See Section 14.7.5,  DRAM RAPL Domain.",null,null],[17,"MSR_DRAM_POWER_INFO","","DRAM RAPL Parameters (R/W) See Section 14.7.5, DRAM RAPL Domain.",null,null],[17,"MSR_PKG_C9_RESIDENCY","","Note: C-state values are processor specific C-state code names, unrelated to MWAIT extension C-state parameters or ACPI C-States.",null,null],[17,"MSR_PKG_C10_RESIDENCY","","Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C-States.",null,null],[17,"MSR_PP0_POWER_LIMIT","","PP0 RAPL Power Limit Control (R/W)  See Section 14.7.4, PP0/PP1 RAPL Domains.",null,null],[17,"MSR_PP0_ENERGY_STATUS","","PP0 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL Domains.",null,null],[17,"MSR_PP0_POLICY","","PP0 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL Domains.",null,null],[17,"MSR_PP0_PERF_STATUS","","PP0 Performance Throttling Status (R/O) See Section 14.7.4,  PP0/PP1 RAPL Domains.",null,null],[17,"MSR_PP1_POWER_LIMIT","","PP1 RAPL Power Limit Control (R/W)  See Section 14.7.4, PP0/PP1 RAPL Domains.",null,null],[17,"MSR_PP1_ENERGY_STATUS","","PP1 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL Domains.",null,null],[17,"MSR_PP1_POLICY","","PP1 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL Domains.",null,null],[17,"MSR_CONFIG_TDP_NOMINAL","","Nominal TDP Ratio (R/O)",null,null],[17,"MSR_CONFIG_TDP_LEVEL1","","ConfigTDP Level 1 ratio and power level (R/O)",null,null],[17,"MSR_CONFIG_TDP_LEVEL2","","ConfigTDP Level 2 ratio and power level (R/O)",null,null],[17,"MSR_CONFIG_TDP_CONTROL","","ConfigTDP Control (R/W)",null,null],[17,"MSR_TURBO_ACTIVATION_RATIO","","ConfigTDP Control (R/W)",null,null],[17,"MSR_CORE_C1_RESIDENCY","","Note: C-state values are processor specific C-state code names,  unrelated to MWAIT extension C-state parameters or ACPI C- States.",null,null],[17,"MSR_LASTBRANCH_8_FROM_IP","","Last Branch Record 8 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_9_FROM_IP","","Last Branch Record 9 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_10_FROM_IP","","Last Branch Record 10 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_11_FROM_IP","","Last Branch Record 11 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_12_FROM_IP","","Last Branch Record 12 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_13_FROM_IP","","Last Branch Record 13 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_14_FROM_IP","","Last Branch Record 14 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_15_FROM_IP","","Last Branch Record 15 From IP (R/W) See description of MSR_LASTBRANCH_0_FROM_IP.",null,null],[17,"MSR_LASTBRANCH_8_TO_IP","","Last Branch Record 8 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_9_TO_IP","","Last Branch Record 9 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_10_TO_IP","","Last Branch Record 10 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_11_TO_IP","","Last Branch Record 11 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_12_TO_IP","","Last Branch Record 12 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_13_TO_IP","","Last Branch Record 13 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_14_TO_IP","","Last Branch Record 14 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"MSR_LASTBRANCH_15_TO_IP","","Last Branch Record 15 To IP (R/W) See description of MSR_LASTBRANCH_0_TO_IP.",null,null],[17,"IA32_TSC_DEADLINE","","TSC Target of Local APIC s TSC Deadline Mode (R/W)  See Table 35-2",null,null],[17,"MSR_UNC_CBO_0_PERFEVTSEL0","","Uncore C-Box 0, counter 0 event select MSR",null,null],[17,"MSR_UNC_CBO_0_PERFEVTSEL1","","Uncore C-Box 0, counter 1 event select MSR",null,null],[17,"MSR_UNC_CBO_0_PER_CTR0","","Uncore C-Box 0, performance counter 0",null,null],[17,"MSR_UNC_CBO_0_PER_CTR1","","Uncore C-Box 0, performance counter 1",null,null],[17,"MSR_UNC_CBO_1_PERFEVTSEL0","","Uncore C-Box 1, counter 0 event select MSR",null,null],[17,"MSR_UNC_CBO_1_PERFEVTSEL1","","Uncore C-Box 1, counter 1 event select MSR",null,null],[17,"MSR_UNC_CBO_1_PER_CTR0","","Uncore C-Box 1, performance counter 0",null,null],[17,"MSR_UNC_CBO_1_PER_CTR1","","Uncore C-Box 1, performance counter 1",null,null],[17,"MSR_UNC_CBO_2_PERFEVTSEL0","","Uncore C-Box 2, counter 0 event select MSR",null,null],[17,"MSR_UNC_CBO_2_PERFEVTSEL1","","Uncore C-Box 2, counter 1 event select MSR",null,null],[17,"MSR_UNC_CBO_2_PER_CTR0","","Uncore C-Box 2, performance counter 0",null,null],[17,"MSR_UNC_CBO_2_PER_CTR1","","Uncore C-Box 2, performance counter 1",null,null],[17,"MSR_UNC_CBO_3_PERFEVTSEL0","","Uncore C-Box 3, counter 0 event select MSR",null,null],[17,"MSR_UNC_CBO_3_PERFEVTSEL1","","Uncore C-Box 3, counter 1 event select MSR.",null,null],[17,"MSR_UNC_CBO_3_PER_CTR0","","Uncore C-Box 3, performance counter 0.",null,null],[17,"MSR_UNC_CBO_3_PER_CTR1","","Uncore C-Box 3, performance counter 1.",null,null],[17,"IA32_X2APIC_APICID","","x2APIC ID register (R/O) See x2APIC Specification.",null,null],[17,"IA32_X2APIC_VERSION","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_TPR","","x2APIC Task Priority register (R/W)",null,null],[17,"IA32_X2APIC_PPR","","x2APIC Processor Priority register (R/O)",null,null],[17,"IA32_X2APIC_EOI","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_LDR","","x2APIC Logical Destination register (R/O)",null,null],[17,"IA32_X2APIC_SIVR","","x2APIC Spurious Interrupt Vector register (R/W)",null,null],[17,"IA32_X2APIC_ISR0","","x2APIC In-Service register bits [31:0] (R/O)",null,null],[17,"IA32_X2APIC_ISR1","","x2APIC In-Service register bits [63:32] (R/O)",null,null],[17,"IA32_X2APIC_ISR2","","x2APIC In-Service register bits [95:64] (R/O)",null,null],[17,"IA32_X2APIC_ISR3","","x2APIC In-Service register bits [127:96] (R/O)",null,null],[17,"IA32_X2APIC_ISR4","","x2APIC In-Service register bits [159:128] (R/O)",null,null],[17,"IA32_X2APIC_ISR5","","x2APIC In-Service register bits [191:160] (R/O)",null,null],[17,"IA32_X2APIC_ISR6","","x2APIC In-Service register bits [223:192] (R/O)",null,null],[17,"IA32_X2APIC_ISR7","","x2APIC In-Service register bits [255:224] (R/O)",null,null],[17,"IA32_X2APIC_TMR0","","x2APIC Trigger Mode register bits [31:0] (R/O)",null,null],[17,"IA32_X2APIC_TMR1","","x2APIC Trigger Mode register bits [63:32] (R/O)",null,null],[17,"IA32_X2APIC_TMR2","","x2APIC Trigger Mode register bits [95:64] (R/O)",null,null],[17,"IA32_X2APIC_TMR3","","x2APIC Trigger Mode register bits [127:96] (R/O)",null,null],[17,"IA32_X2APIC_TMR4","","x2APIC Trigger Mode register bits [159:128] (R/O)",null,null],[17,"IA32_X2APIC_TMR5","","x2APIC Trigger Mode register bits [191:160] (R/O)",null,null],[17,"IA32_X2APIC_TMR6","","x2APIC Trigger Mode register bits [223:192] (R/O)",null,null],[17,"IA32_X2APIC_TMR7","","x2APIC Trigger Mode register bits [255:224] (R/O)",null,null],[17,"IA32_X2APIC_IRR0","","x2APIC Interrupt Request register bits [31:0] (R/O)",null,null],[17,"IA32_X2APIC_IRR1","","x2APIC Interrupt Request register bits [63:32] (R/O)",null,null],[17,"IA32_X2APIC_IRR2","","x2APIC Interrupt Request register bits [95:64] (R/O)",null,null],[17,"IA32_X2APIC_IRR3","","x2APIC Interrupt Request register bits [127:96] (R/O)",null,null],[17,"IA32_X2APIC_IRR4","","x2APIC Interrupt Request register bits [159:128] (R/O)",null,null],[17,"IA32_X2APIC_IRR5","","x2APIC Interrupt Request register bits [191:160] (R/O)",null,null],[17,"IA32_X2APIC_IRR6","","x2APIC Interrupt Request register bits [223:192] (R/O)",null,null],[17,"IA32_X2APIC_IRR7","","x2APIC Interrupt Request register bits [255:224] (R/O)",null,null],[17,"IA32_X2APIC_ESR","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_LVT_CMCI","","x2APIC LVT Corrected Machine Check Interrupt register (R/W)",null,null],[17,"IA32_X2APIC_ICR","","x2APIC Interrupt Command register (R/W)",null,null],[17,"IA32_X2APIC_LVT_TIMER","","x2APIC LVT Timer Interrupt register (R/W)",null,null],[17,"IA32_X2APIC_LVT_THERMAL","","x2APIC LVT Thermal Sensor Interrupt register (R/W)",null,null],[17,"IA32_X2APIC_LVT_PMI","","x2APIC LVT Performance Monitor register (R/W)",null,null],[17,"IA32_X2APIC_LVT_LINT0","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_LVT_LINT1","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_LVT_ERROR","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_INIT_COUNT","","x2APIC Initial Count register (R/W)",null,null],[17,"IA32_X2APIC_CUR_COUNT","","x2APIC Current Count register (R/O)",null,null],[17,"IA32_X2APIC_DIV_CONF","","x2APIC Divide Configuration register (R/W)",null,null],[17,"IA32_X2APIC_SELF_IPI","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"MSR_U_PMON_GLOBAL_CTRL","","Uncore U-box perfmon global control MSR.",null,null],[17,"MSR_U_PMON_GLOBAL_STATUS","","Uncore U-box perfmon global status MSR.",null,null],[17,"MSR_U_PMON_GLOBAL_OVF_CTRL","","Uncore U-box perfmon global overflow control MSR.",null,null],[17,"MSR_U_PMON_EVNT_SEL","","Uncore U-box perfmon event select MSR.",null,null],[17,"MSR_U_PMON_CTR","","Uncore U-box perfmon counter MSR.",null,null],[17,"MSR_B0_PMON_BOX_CTRL","","Uncore B-box 0 perfmon local box control MSR.",null,null],[17,"MSR_B0_PMON_BOX_STATUS","","Uncore B-box 0 perfmon local box status MSR.",null,null],[17,"MSR_B0_PMON_BOX_OVF_CTRL","","Uncore B-box 0 perfmon local box overflow control MSR.",null,null],[17,"MSR_B0_PMON_EVNT_SEL0","","Uncore B-box 0 perfmon event select MSR.",null,null],[17,"MSR_B0_PMON_CTR0","","Uncore B-box 0 perfmon counter MSR.",null,null],[17,"MSR_B0_PMON_EVNT_SEL1","","Uncore B-box 0 perfmon event select MSR.",null,null],[17,"MSR_B0_PMON_CTR1","","Uncore B-box 0 perfmon counter MSR.",null,null],[17,"MSR_B0_PMON_EVNT_SEL2","","Uncore B-box 0 perfmon event select MSR.",null,null],[17,"MSR_B0_PMON_CTR2","","Uncore B-box 0 perfmon counter MSR.",null,null],[17,"MSR_B0_PMON_EVNT_SEL3","","Uncore B-box 0 perfmon event select MSR.",null,null],[17,"MSR_B0_PMON_CTR3","","Uncore B-box 0 perfmon counter MSR.",null,null],[17,"MSR_S0_PMON_BOX_CTRL","","Uncore S-box 0 perfmon local box control MSR.",null,null],[17,"MSR_S0_PMON_BOX_STATUS","","Uncore S-box 0 perfmon local box status MSR.",null,null],[17,"MSR_S0_PMON_BOX_OVF_CTRL","","Uncore S-box 0 perfmon local box overflow control MSR.",null,null],[17,"MSR_S0_PMON_EVNT_SEL0","","Uncore S-box 0 perfmon event select MSR.",null,null],[17,"MSR_S0_PMON_CTR0","","Uncore S-box 0 perfmon counter MSR.",null,null],[17,"MSR_S0_PMON_EVNT_SEL1","","Uncore S-box 0 perfmon event select MSR.",null,null],[17,"MSR_S0_PMON_CTR1","","Uncore S-box 0 perfmon counter MSR.",null,null],[17,"MSR_S0_PMON_EVNT_SEL2","","Uncore S-box 0 perfmon event select MSR.",null,null],[17,"MSR_S0_PMON_CTR2","","Uncore S-box 0 perfmon counter MSR.",null,null],[17,"MSR_S0_PMON_EVNT_SEL3","","Uncore S-box 0 perfmon event select MSR.",null,null],[17,"MSR_S0_PMON_CTR3","","Uncore S-box 0 perfmon counter MSR.",null,null],[17,"MSR_B1_PMON_BOX_CTRL","","Uncore B-box 1 perfmon local box control MSR.",null,null],[17,"MSR_B1_PMON_BOX_STATUS","","Uncore B-box 1 perfmon local box status MSR.",null,null],[17,"MSR_B1_PMON_BOX_OVF_CTRL","","Uncore B-box 1 perfmon local box overflow control MSR.",null,null],[17,"MSR_B1_PMON_EVNT_SEL0","","Uncore B-box 1 perfmon event select MSR.",null,null],[17,"MSR_B1_PMON_CTR0","","Uncore B-box 1 perfmon counter MSR.",null,null],[17,"MSR_B1_PMON_EVNT_SEL1","","Uncore B-box 1 perfmon event select MSR.",null,null],[17,"MSR_B1_PMON_CTR1","","Uncore B-box 1 perfmon counter MSR.",null,null],[17,"MSR_B1_PMON_EVNT_SEL2","","Uncore B-box 1 perfmon event select MSR.",null,null],[17,"MSR_B1_PMON_CTR2","","Uncore B-box 1 perfmon counter MSR.",null,null],[17,"MSR_B1_PMON_EVNT_SEL3","","Uncore B-box 1vperfmon event select MSR.",null,null],[17,"MSR_B1_PMON_CTR3","","Uncore B-box 1 perfmon counter MSR.",null,null],[17,"MSR_W_PMON_BOX_CTRL","","Uncore W-box perfmon local box control MSR.",null,null],[17,"MSR_W_PMON_BOX_STATUS","","Uncore W-box perfmon local box status MSR.",null,null],[17,"MSR_W_PMON_BOX_OVF_CTRL","","Uncore W-box perfmon local box overflow control MSR.",null,null],[17,"IA32_QM_EVTSEL","","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )",null,null],[17,"IA32_QM_CTR","","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )",null,null],[17,"IA32_PQR_ASSOC","","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )",null,null],[17,"MSR_W_PMON_EVNT_SEL0","","Uncore W-box perfmon event select MSR.",null,null],[17,"MSR_W_PMON_CTR0","","Uncore W-box perfmon counter MSR.",null,null],[17,"MSR_W_PMON_EVNT_SEL1","","Uncore W-box perfmon event select MSR.",null,null],[17,"MSR_W_PMON_CTR1","","Uncore W-box perfmon counter MSR.",null,null],[17,"MSR_W_PMON_EVNT_SEL2","","Uncore W-box perfmon event select MSR.",null,null],[17,"MSR_W_PMON_CTR2","","Uncore W-box perfmon counter MSR.",null,null],[17,"MSR_W_PMON_EVNT_SEL3","","Uncore W-box perfmon event select MSR.",null,null],[17,"MSR_W_PMON_CTR3","","Uncore W-box perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_BOX_CTRL","","Uncore M-box 0 perfmon local box control MSR.",null,null],[17,"MSR_M0_PMON_BOX_STATUS","","Uncore M-box 0 perfmon local box status MSR.",null,null],[17,"MSR_M0_PMON_BOX_OVF_CTRL","","Uncore M-box 0 perfmon local box overflow control MSR.",null,null],[17,"MSR_M0_PMON_TIMESTAMP","","Uncore M-box 0 perfmon time stamp unit select MSR.",null,null],[17,"MSR_M0_PMON_DSP","","Uncore M-box 0 perfmon DSP unit select MSR.",null,null],[17,"MSR_M0_PMON_ISS","","Uncore M-box 0 perfmon ISS unit select MSR.",null,null],[17,"MSR_M0_PMON_MAP","","Uncore M-box 0 perfmon MAP unit select MSR.",null,null],[17,"MSR_M0_PMON_MSC_THR","","Uncore M-box 0 perfmon MIC THR select MSR.",null,null],[17,"MSR_M0_PMON_PGT","","Uncore M-box 0 perfmon PGT unit select MSR.",null,null],[17,"MSR_M0_PMON_PLD","","Uncore M-box 0 perfmon PLD unit select MSR.",null,null],[17,"MSR_M0_PMON_ZDP","","Uncore M-box 0 perfmon ZDP unit select MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL0","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR0","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL1","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR1","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL2","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR2","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL3","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR3","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL4","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR4","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL5","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR5","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_S1_PMON_BOX_CTRL","","Uncore S-box 1 perfmon local box control MSR.",null,null],[17,"MSR_S1_PMON_BOX_STATUS","","Uncore S-box 1 perfmon local box status MSR.",null,null],[17,"MSR_S1_PMON_BOX_OVF_CTRL","","Uncore S-box 1 perfmon local box overflow control MSR.",null,null],[17,"MSR_S1_PMON_EVNT_SEL0","","Uncore S-box 1 perfmon event select MSR.",null,null],[17,"MSR_S1_PMON_CTR0","","Uncore S-box 1 perfmon counter MSR.",null,null],[17,"MSR_S1_PMON_EVNT_SEL1","","Uncore S-box 1 perfmon event select MSR.",null,null],[17,"MSR_S1_PMON_CTR1","","Uncore S-box 1 perfmon counter MSR.",null,null],[17,"MSR_S1_PMON_EVNT_SEL2","","Uncore S-box 1 perfmon event select MSR.",null,null],[17,"MSR_S1_PMON_CTR2","","Uncore S-box 1 perfmon counter MSR.",null,null],[17,"MSR_S1_PMON_EVNT_SEL3","","Uncore S-box 1 perfmon event select MSR.",null,null],[17,"MSR_S1_PMON_CTR3","","Uncore S-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_BOX_CTRL","","Uncore M-box 1 perfmon local box control MSR.",null,null],[17,"MSR_M1_PMON_BOX_STATUS","","Uncore M-box 1 perfmon local box status MSR.",null,null],[17,"MSR_M1_PMON_BOX_OVF_CTRL","","Uncore M-box 1 perfmon local box overflow control MSR.",null,null],[17,"MSR_M1_PMON_TIMESTAMP","","Uncore M-box 1 perfmon time stamp unit select MSR.",null,null],[17,"MSR_M1_PMON_DSP","","Uncore M-box 1 perfmon DSP unit select MSR.",null,null],[17,"MSR_M1_PMON_ISS","","Uncore M-box 1 perfmon ISS unit select MSR.",null,null],[17,"MSR_M1_PMON_MAP","","Uncore M-box 1 perfmon MAP unit select MSR.",null,null],[17,"MSR_M1_PMON_MSC_THR","","Uncore M-box 1 perfmon MIC THR select MSR.",null,null],[17,"MSR_M1_PMON_PGT","","Uncore M-box 1 perfmon PGT unit select MSR.",null,null],[17,"MSR_M1_PMON_PLD","","Uncore M-box 1 perfmon PLD unit select MSR.",null,null],[17,"MSR_M1_PMON_ZDP","","Uncore M-box 1 perfmon ZDP unit select MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL0","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR0","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL1","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR1","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL2","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR2","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL3","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR3","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL4","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR4","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL5","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR5","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_BOX_CTRL","","Uncore C-box 0 perfmon local box control MSR.",null,null],[17,"MSR_C0_PMON_BOX_STATUS","","Uncore C-box 0 perfmon local box status MSR.",null,null],[17,"MSR_C0_PMON_BOX_OVF_CTRL","","Uncore C-box 0 perfmon local box overflow control MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL0","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR0","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL1","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR1","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL2","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR2","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL3","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR3","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL4","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR4","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL5","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR5","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_BOX_CTRL","","Uncore C-box 4 perfmon local box control MSR.",null,null],[17,"MSR_C4_PMON_BOX_STATUS","","Uncore C-box 4 perfmon local box status MSR.",null,null],[17,"MSR_C4_PMON_BOX_OVF_CTRL","","Uncore C-box 4 perfmon local box overflow control MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL0","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR0","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL1","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR1","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL2","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR2","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL3","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR3","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL4","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR4","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL5","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR5","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_BOX_CTRL","","Uncore C-box 2 perfmon local box control MSR.",null,null],[17,"MSR_C2_PMON_BOX_STATUS","","Uncore C-box 2 perfmon local box status MSR.",null,null],[17,"MSR_C2_PMON_BOX_OVF_CTRL","","Uncore C-box 2 perfmon local box overflow control MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL0","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR0","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL1","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR1","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL2","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR2","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL3","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR3","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL4","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR4","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL5","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR5","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_BOX_CTRL","","Uncore C-box 6 perfmon local box control MSR.",null,null],[17,"MSR_C6_PMON_BOX_STATUS","","Uncore C-box 6 perfmon local box status MSR.",null,null],[17,"MSR_C6_PMON_BOX_OVF_CTRL","","Uncore C-box 6 perfmon local box overflow control MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL0","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR0","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL1","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR1","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL2","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR2","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL3","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR3","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL4","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR4","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL5","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR5","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_BOX_CTRL","","Uncore C-box 1 perfmon local box control MSR.",null,null],[17,"MSR_C1_PMON_BOX_STATUS","","Uncore C-box 1 perfmon local box status MSR.",null,null],[17,"MSR_C1_PMON_BOX_OVF_CTRL","","Uncore C-box 1 perfmon local box overflow control MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL0","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR0","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL1","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR1","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL2","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR2","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL3","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR3","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL4","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR4","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL5","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR5","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_BOX_CTRL","","Uncore C-box 5 perfmon local box control MSR.",null,null],[17,"MSR_C5_PMON_BOX_STATUS","","Uncore C-box 5 perfmon local box status MSR.",null,null],[17,"MSR_C5_PMON_BOX_OVF_CTRL","","Uncore C-box 5 perfmon local box overflow control MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL0","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR0","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL1","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR1","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL2","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR2","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL3","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR3","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL4","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR4","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL5","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR5","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_BOX_CTRL","","Uncore C-box 3 perfmon local box control MSR.",null,null],[17,"MSR_C3_PMON_BOX_STATUS","","Uncore C-box 3 perfmon local box status MSR.",null,null],[17,"MSR_C3_PMON_BOX_OVF_CTRL","","Uncore C-box 3 perfmon local box overflow control MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL0","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR0","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL1","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR1","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL2","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR2","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL3","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR3","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL4","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR4","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL5","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR5","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_BOX_CTRL","","Uncore C-box 7 perfmon local box control MSR.",null,null],[17,"MSR_C7_PMON_BOX_STATUS","","Uncore C-box 7 perfmon local box status MSR.",null,null],[17,"MSR_C7_PMON_BOX_OVF_CTRL","","Uncore C-box 7 perfmon local box overflow control MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL0","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR0","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL1","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR1","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL2","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR2","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL3","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR3","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL4","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR4","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL5","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR5","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_BOX_CTRL","","Uncore R-box 0 perfmon local box control MSR.",null,null],[17,"MSR_R0_PMON_BOX_STATUS","","Uncore R-box 0 perfmon local box status MSR.",null,null],[17,"MSR_R0_PMON_BOX_OVF_CTRL","","Uncore R-box 0 perfmon local box overflow control MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P0","","Uncore R-box 0 perfmon IPERF0 unit Port 0 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P1","","Uncore R-box 0 perfmon IPERF0 unit Port 1 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P2","","Uncore R-box 0 perfmon IPERF0 unit Port 2 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P3","","Uncore R-box 0 perfmon IPERF0 unit Port 3 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P4","","Uncore R-box 0 perfmon IPERF0 unit Port 4 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P5","","Uncore R-box 0 perfmon IPERF0 unit Port 5 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P6","","Uncore R-box 0 perfmon IPERF0 unit Port 6 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P7","","Uncore R-box 0 perfmon IPERF0 unit Port 7 select MSR.",null,null],[17,"MSR_R0_PMON_QLX_P0","","Uncore R-box 0 perfmon QLX unit Port 0 select MSR.",null,null],[17,"MSR_R0_PMON_QLX_P1","","Uncore R-box 0 perfmon QLX unit Port 1 select MSR.",null,null],[17,"MSR_R0_PMON_QLX_P2","","Uncore R-box 0 perfmon QLX unit Port 2 select MSR.",null,null],[17,"MSR_R0_PMON_QLX_P3","","Uncore R-box 0 perfmon QLX unit Port 3 select MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL0","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR0","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL1","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR1","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL2","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR2","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL3","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR3","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL4","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR4","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL5","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR5","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL6","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR6","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL7","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR7","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_BOX_CTRL","","Uncore R-box 1 perfmon local box control MSR.",null,null],[17,"MSR_R1_PMON_BOX_STATUS","","Uncore R-box 1 perfmon local box status MSR.",null,null],[17,"MSR_R1_PMON_BOX_OVF_CTRL","","Uncore R-box 1 perfmon local box overflow control MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P8","","Uncore R-box 1 perfmon IPERF1 unit Port 8 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P9","","Uncore R-box 1 perfmon IPERF1 unit Port 9 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P10","","Uncore R-box 1 perfmon IPERF1 unit Port 10 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P11","","Uncore R-box 1 perfmon IPERF1 unit Port 11 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P12","","Uncore R-box 1 perfmon IPERF1 unit Port 12 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P13","","Uncore R-box 1 perfmon IPERF1 unit Port 13 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P14","","Uncore R-box 1 perfmon IPERF1 unit Port 14 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P15","","Uncore R-box 1 perfmon IPERF1 unit Port 15 select MSR.",null,null],[17,"MSR_R1_PMON_QLX_P4","","Uncore R-box 1 perfmon QLX unit Port 4 select MSR.",null,null],[17,"MSR_R1_PMON_QLX_P5","","Uncore R-box 1 perfmon QLX unit Port 5 select MSR.",null,null],[17,"MSR_R1_PMON_QLX_P6","","Uncore R-box 1 perfmon QLX unit Port 6 select MSR.",null,null],[17,"MSR_R1_PMON_QLX_P7","","Uncore R-box 1 perfmon QLX unit Port 7 select MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL8","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR8","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL9","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR9","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL10","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR10","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL11","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR11","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL12","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR12","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL13","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR13","","Uncore R-box 1perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL14","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR14","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL15","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR15","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_B0_PMON_MATCH","","Uncore B-box 0 perfmon local box match MSR.",null,null],[17,"MSR_B0_PMON_MASK","","Uncore B-box 0 perfmon local box mask MSR.",null,null],[17,"MSR_S0_PMON_MATCH","","Uncore S-box 0 perfmon local box match MSR.",null,null],[17,"MSR_S0_PMON_MASK","","Uncore S-box 0 perfmon local box mask MSR.",null,null],[17,"MSR_B1_PMON_MATCH","","Uncore B-box 1 perfmon local box match MSR.",null,null],[17,"MSR_B1_PMON_MASK","","Uncore B-box 1 perfmon local box mask MSR.",null,null],[17,"MSR_M0_PMON_MM_CONFIG","","Uncore M-box 0 perfmon local box address match/mask config MSR.",null,null],[17,"MSR_M0_PMON_ADDR_MATCH","","Uncore M-box 0 perfmon local box address match MSR.",null,null],[17,"MSR_M0_PMON_ADDR_MASK","","Uncore M-box 0 perfmon local box address mask MSR.",null,null],[17,"MSR_S1_PMON_MATCH","","Uncore S-box 1 perfmon local box match MSR.",null,null],[17,"MSR_S1_PMON_MASK","","Uncore S-box 1 perfmon local box mask MSR.",null,null],[17,"MSR_M1_PMON_MM_CONFIG","","Uncore M-box 1 perfmon local box address match/mask config MSR.",null,null],[17,"MSR_M1_PMON_ADDR_MATCH","","Uncore M-box 1 perfmon local box address match MSR.",null,null],[17,"MSR_M1_PMON_ADDR_MASK","","Uncore M-box 1 perfmon local box address mask MSR.",null,null],[17,"MSR_C8_PMON_BOX_CTRL","","Uncore C-box 8 perfmon local box control MSR.",null,null],[17,"MSR_C8_PMON_BOX_STATUS","","Uncore C-box 8 perfmon local box status MSR.",null,null],[17,"MSR_C8_PMON_BOX_OVF_CTRL","","Uncore C-box 8 perfmon local box overflow control MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL0","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR0","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL1","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR1","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL2","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR2","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL3","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR3","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL4","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR4","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL5","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR5","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_BOX_CTRL","","Uncore C-box 9 perfmon local box control MSR.",null,null],[17,"MSR_C9_PMON_BOX_STATUS","","Uncore C-box 9 perfmon local box status MSR.",null,null],[17,"MSR_C9_PMON_BOX_OVF_CTRL","","Uncore C-box 9 perfmon local box overflow control MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL0","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR0","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL1","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR1","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL2","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR2","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL3","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR3","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL4","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR4","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL5","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR5","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_EMON_L3_CTR_CTL0","","GBUSQ Event Control and Counter  Register (R/W) See Section 18.17, Performance  Monitoring on 64-bit Intel Xeon Processor MP with Up to 8-MByte L3 Cache.",null,null],[17,"MSR_IFSB_BUSQ0","","IFSB BUSQ Event Control and Counter  Register (R/W) See Section 18.17, Performance  Monitoring on 64-bit Intel Xeon Processor  MP with Up to 8-MByte L3 Cache.",null,null],[17,"MSR_EMON_L3_CTR_CTL1","","GBUSQ Event Control/Counter Register (R/W) Apply to Intel Xeon processor 7400 series (processor signature  06_1D) only. See Section 17.2.2",null,null],[17,"MSR_IFSB_BUSQ1","","IFSB BUSQ Event Control and Counter Register (R/W)",null,null],[17,"MSR_EMON_L3_CTR_CTL2","","GSNPQ Event Control and Counter  Register (R/W)  See Section 18.17, Performance Monitoring on 64-bit Intel Xeon Processor MP with Up to 8-MByte L3 Cache.",null,null],[17,"MSR_IFSB_SNPQ0","","IFSB SNPQ Event Control and Counter  Register (R/W)  See Section 18.17, Performance  Monitoring on 64-bit Intel Xeon Processor  MP with Up to 8-MByte L3 Cache.",null,null],[17,"MSR_EMON_L3_CTR_CTL3","","GSNPQ Event Control/Counter Register (R/W) Apply to Intel Xeon processor 7400 series (processor signature  06_1D) only. See Section 17.2.2",null,null],[17,"MSR_IFSB_SNPQ1","","IFSB SNPQ Event Control and Counter  Register (R/W)",null,null],[17,"MSR_EFSB_DRDY0","","EFSB DRDY Event Control and Counter Register (R/W)  See Section 18.17, Performance  Monitoring on 64-bit Intel Xeon Processor MP with Up to 8-MByte L3 Cache  for  details.",null,null],[17,"MSR_EMON_L3_CTR_CTL4","","FSB Event Control and Counter Register (R/W)  See Section 18.17, Performance  Monitoring on 64-bit Intel Xeon Processor MP with Up to 8-MByte L3 Cache  for  details.",null,null],[17,"MSR_EFSB_DRDY1","","EFSB DRDY Event Control and Counter  Register (R/W)",null,null],[17,"MSR_EMON_L3_CTR_CTL5","","FSB Event Control/Counter Register (R/W) Apply to Intel Xeon processor 7400 series (processor signature  06_1D) only. See Section 17.2.2",null,null],[17,"MSR_EMON_L3_CTR_CTL6","","FSB Event Control/Counter Register (R/W) Apply to Intel Xeon processor 7400 series (processor signature  06_1D) only. See Section 17.2.2",null,null],[17,"MSR_IFSB_CTL6","","IFSB Latency Event Control Register  (R/W) See Section 18.17, Performance  Monitoring on 64-bit Intel Xeon Processor MP with Up to 8-MByte L3 Cache  for  details.",null,null],[17,"MSR_EMON_L3_CTR_CTL7","","FSB Event Control/Counter Register (R/W) Apply to Intel Xeon processor 7400 series (processor signature  06_1D) only. See Section 17.2.2",null,null],[17,"MSR_IFSB_CNTR7","","IFSB Latency Event Counter Register  (R/W)  See Section 18.17, Performance  Monitoring on 64-bit Intel Xeon Processor  MP with Up to 8-MByte L3 Cache.",null,null],[17,"MSR_EMON_L3_GL_CTL","","L3/FSB Common Control Register (R/W) Apply to Intel Xeon processor 7400 series (processor signature  06_1D) only. See Section 17.2.2",null,null],[17,"IA32_EFER","","If (  CPUID.80000001.EDX.[bit  20] or  CPUID.80000001.EDX.[bit 29])",null,null],[17,"IA32_STAR","","System Call Target Address (R/W)  See Table 35-2.",null,null],[17,"IA32_LSTAR","","IA-32e Mode System Call Target Address (R/W)  See Table 35-2.",null,null],[17,"IA32_FMASK","","System Call Flag Mask (R/W)  See Table 35-2.",null,null],[17,"IA32_FS_BASE","","Map of BASE Address of FS (R/W)  See Table 35-2.",null,null],[17,"IA32_GS_BASE","","Map of BASE Address of GS (R/W)  See Table 35-2.",null,null],[17,"IA32_KERNEL_GS_BASE","","If  CPUID.80000001.EDX.[bit  29] = 1",null,null],[17,"IA32_KERNEL_GSBASE","","Swap Target of BASE Address of GS (R/W) See Table 35-2.",null,null],[17,"IA32_TSC_AUX","","AUXILIARY TSC Signature. (R/W) See Table 35-2 and Section  17.13.2, IA32_TSC_AUX Register and RDTSCP Support.",null,null],[0,"time","x86","Functions to read time stamp counters on x86.",null,null],[5,"rdtsc","x86::time","Read the time stamp counter.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"rdtscp","","Read the time stamp counter.",null,{"inputs":[],"output":{"name":"u64"}}],[0,"irq","x86","Interrupt description and set-up code.",null,null],[3,"InterruptDescription","x86::irq","x86 Exception description (see also Intel Vol. 3a Chapter 6).",null,null],[12,"vector","","",0,null],[12,"mnemonic","","",0,null],[12,"description","","",0,null],[12,"irqtype","","",0,null],[12,"source","","",0,null],[3,"IdtEntry","","A struct describing an interrupt gate.  See the Intel manual mentioned\nabove for details, specifically, the section &quot;6.14.1 64-Bit Mode IDT&quot;\nand &quot;Table 3-2. System-Segment and Gate-Descriptor Types&quot;.",null,null],[12,"base_lo","","Lower 16 bits of ISR.",1,null],[12,"sel","","Segment selector.",1,null],[12,"res0","","This must always be zero.",1,null],[12,"flags","","Flags.",1,null],[12,"base_hi","","The upper 48 bits of ISR (the last 16 bits must be zero).",1,null],[12,"res1","","Must be zero.",1,null],[3,"PageFaultError","","",null,null],[5,"enable","","Enable Interrupts.",null,{"inputs":[],"output":null}],[5,"disable","","Disable Interrupts.",null,{"inputs":[],"output":null}],[7,"EXCEPTIONS","","x86 External Interrupts (1-16).",null,null],[17,"PFAULT_ERROR_P","","0: The fault was caused by a non-present page.\n1: The fault was caused by a page-level protection violation",null,null],[17,"PFAULT_ERROR_WR","","0: The access causing the fault was a read.\n1: The access causing the fault was a write.",null,null],[17,"PFAULT_ERROR_US","","0: The access causing the fault originated when the processor\nwas executing in supervisor mode.\n1: The access causing the fault originated when the processor\nwas executing in user mode.",null,null],[17,"PFAULT_ERROR_RSVD","","0: The fault was not caused by reserved bit violation.\n1: The fault was caused by reserved bits set to 1 in a page directory.",null,null],[17,"PFAULT_ERROR_ID","","0: The fault was not caused by an instruction fetch.\n1: The fault was caused by an instruction fetch.",null,null],[17,"PFAULT_ERROR_PK","","0: The fault was not by protection keys.\n1: There was a protection key violation.",null,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"missing","","Create a &quot;missing&quot; IdtEntry.  This is a `const` function, so we can\ncall it at compile time to initialize static variables.",1,{"inputs":[],"output":{"name":"idtentry"}}],[11,"interrupt_gate","","Create a new IdtEntry pointing at `handler`, which must be a\nfunction with interrupt calling conventions.  (This must be\ncurrently defined in assembly language.)  The `gdt_code_selector`\nvalue must be the offset of code segment entry in the GDT.",1,null],[11,"hash","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"empty","","Returns an empty set of flags.",2,{"inputs":[],"output":{"name":"pagefaulterror"}}],[11,"all","","Returns the set containing all flags.",2,{"inputs":[],"output":{"name":"pagefaulterror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",2,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",2,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",2,{"inputs":[{"name":"u32"}],"output":{"name":"pagefaulterror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",2,null],[11,"is_all","","Returns `true` if all flags are currently set.",2,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",2,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",2,null],[11,"insert","","Inserts the specified flags in-place.",2,null],[11,"remove","","Removes the specified flags in-place.",2,null],[11,"toggle","","Toggles the specified flags in-place.",2,null],[11,"bitor","","Returns the union of the two sets of flags.",2,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",2,null],[11,"bitand","","Returns the intersection between the two sets of flags.",2,null],[11,"sub","","Returns the set difference of the two sets of flags.",2,null],[11,"not","","Returns the complement of this set of flags.",2,null],[11,"fmt","","",2,null],[0,"rflags","x86","Description of RFlag values that store the results of operations and the state of the processor.",null,null],[3,"RFlags","x86::rflags","",null,null],[17,"RFLAGS_ID","","ID Flag (ID)",null,null],[17,"RFLAGS_VIP","","Virtual Interrupt Pending (VIP)",null,null],[17,"RFLAGS_VIF","","Virtual Interrupt Flag (VIF)",null,null],[17,"RFLAGS_AC","","Alignment Check (AC)",null,null],[17,"RFLAGS_VM","","Virtual-8086 Mode (VM)",null,null],[17,"RFLAGS_RF","","Resume Flag (RF)",null,null],[17,"RFLAGS_NT","","Nested Task (NT)",null,null],[17,"RFLAGS_IOPL0","","I/O Privilege Level (IOPL) 0",null,null],[17,"RFLAGS_IOPL1","","I/O Privilege Level (IOPL) 1",null,null],[17,"RFLAGS_IOPL2","","I/O Privilege Level (IOPL) 2",null,null],[17,"RFLAGS_IOPL3","","I/O Privilege Level (IOPL) 3",null,null],[17,"RFLAGS_OF","","Overflow Flag (OF)",null,null],[17,"RFLAGS_DF","","Direction Flag (DF)",null,null],[17,"RFLAGS_IF","","Interrupt Enable Flag (IF)",null,null],[17,"RFLAGS_TF","","Trap Flag (TF)",null,null],[17,"RFLAGS_SF","","Sign Flag (SF)",null,null],[17,"RFLAGS_ZF","","Zero Flag (ZF)",null,null],[17,"RFLAGS_AF","","Auxiliary Carry Flag (AF)",null,null],[17,"RFLAGS_PF","","Parity Flag (PF)",null,null],[17,"RFLAGS_A1","","Bit 1 is always 1.",null,null],[17,"RFLAGS_CF","","Carry Flag (CF)",null,null],[11,"hash","","",3,null],[11,"cmp","","",3,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"empty","","Returns an empty set of flags.",3,{"inputs":[],"output":{"name":"rflags"}}],[11,"all","","Returns the set containing all flags.",3,{"inputs":[],"output":{"name":"rflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",3,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",3,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",3,{"inputs":[{"name":"u64"}],"output":{"name":"rflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",3,null],[11,"is_all","","Returns `true` if all flags are currently set.",3,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",3,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",3,null],[11,"insert","","Inserts the specified flags in-place.",3,null],[11,"remove","","Removes the specified flags in-place.",3,null],[11,"toggle","","Toggles the specified flags in-place.",3,null],[11,"bitor","","Returns the union of the two sets of flags.",3,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",3,null],[11,"bitand","","Returns the intersection between the two sets of flags.",3,null],[11,"sub","","Returns the set difference of the two sets of flags.",3,null],[11,"not","","Returns the complement of this set of flags.",3,null],[11,"new","","Creates a new RFlags entry. Ensures bit 1 is set.",3,{"inputs":[],"output":{"name":"rflags"}}],[0,"paging","x86","Description of the data-structures for IA-32e paging mode.",null,null],[3,"PAddr","x86::paging","Represents a physical memory address",null,null],[3,"VAddr","","Represent a virtual (linear) memory address",null,null],[3,"PML4Entry","","",null,null],[3,"PDPTEntry","","",null,null],[3,"PDEntry","","",null,null],[3,"PTEntry","","",null,null],[5,"pml4_index","","Given virtual address calculate corresponding entry in PML4.",null,{"inputs":[{"name":"vaddr"}],"output":{"name":"usize"}}],[5,"pdpt_index","","Given virtual address calculate corresponding entry in PDPT.",null,{"inputs":[{"name":"vaddr"}],"output":{"name":"usize"}}],[5,"pd_index","","Given virtual address calculate corresponding entry in PD.",null,{"inputs":[{"name":"vaddr"}],"output":{"name":"usize"}}],[5,"pt_index","","Given virtual address calculate corresponding entry in PT.",null,{"inputs":[{"name":"vaddr"}],"output":{"name":"usize"}}],[6,"PML4","","A PML4 table.\nIn practice this has only 4 entries but it still needs to be the size of a 4K page.",null,null],[6,"PDPT","","A page directory pointer table.",null,null],[6,"PD","","A page directory.",null,null],[6,"PT","","A page table.",null,null],[17,"BASE_PAGE_SIZE","","",null,null],[17,"LARGE_PAGE_SIZE","","",null,null],[17,"HUGE_PAGE_SIZE","","",null,null],[17,"CACHE_LINE_SIZE","","",null,null],[17,"MAXPHYADDR","","MAXPHYADDR, which is at most 52; (use CPUID for finding system value).",null,null],[17,"PML4_P","","Present; must be 1 to reference a page-directory-pointer table",null,null],[17,"PML4_RW","","Read/write; if 0, writes may not be allowed to the 512-GByte region\ncontrolled by this entry (see Section 4.6)",null,null],[17,"PML4_US","","User/supervisor; if 0, user-mode accesses are not allowed\nto the 512-GByte region controlled by this entry.",null,null],[17,"PML4_PWT","","Page-level write-through; indirectly determines the memory type used to\naccess the page-directory-pointer table referenced by this entry.",null,null],[17,"PML4_PCD","","Page-level cache disable; indirectly determines the memory type used to\naccess the page-directory-pointer table referenced by this entry.",null,null],[17,"PML4_A","","Accessed; indicates whether this entry has been used for linear-address translation.",null,null],[17,"PML4_XD","","If IA32_EFER.NXE = 1, execute-disable\nIf 1, instruction fetches are not allowed from the 512-GByte region.",null,null],[17,"PDPT_P","","Present; must be 1 to map a 1-GByte page or reference a page directory.",null,null],[17,"PDPT_RW","","Read/write; if 0, writes may not be allowed to the 1-GByte region controlled by this entry",null,null],[17,"PDPT_US","","User/supervisor; user-mode accesses are not allowed to the 1-GByte region controlled by this entry.",null,null],[17,"PDPT_PWT","","Page-level write-through.",null,null],[17,"PDPT_PCD","","Page-level cache disable.",null,null],[17,"PDPT_A","","Accessed; if PDPT_PS set indicates whether software has accessed the 1-GByte page\nelse indicates whether this entry has been used for linear-address translation",null,null],[17,"PDPT_D","","Dirty; if PDPT_PS indicates whether software has written to the 1-GByte page referenced by this entry.\nelse ignored.",null,null],[17,"PDPT_PS","","Page size; if set this entry maps a 1-GByte page; otherwise, this entry references a page directory.\nif not PDPT_PS this is ignored.",null,null],[17,"PDPT_G","","Global; if PDPT_PS &amp;&amp; CR4.PGE = 1, determines whether the translation is global; ignored otherwise\nif not PDPT_PS this is ignored.",null,null],[17,"PDPT_PAT","","Indirectly determines the memory type used to access the 1-GByte page referenced by this entry.",null,null],[17,"PDPT_XD","","If IA32_EFER.NXE = 1, execute-disable\nIf 1, instruction fetches are not allowed from the 512-GByte region.",null,null],[17,"PD_P","","Present; must be 1 to map a 2-MByte page or reference a page table.",null,null],[17,"PD_RW","","Read/write; if 0, writes may not be allowed to the 2-MByte region controlled by this entry",null,null],[17,"PD_US","","User/supervisor; user-mode accesses are not allowed to the 2-MByte region controlled by this entry.",null,null],[17,"PD_PWT","","Page-level write-through.",null,null],[17,"PD_PCD","","Page-level cache disable.",null,null],[17,"PD_A","","Accessed; if PD_PS set indicates whether software has accessed the 2-MByte page\nelse indicates whether this entry has been used for linear-address translation",null,null],[17,"PD_D","","Dirty; if PD_PS indicates whether software has written to the 2-MByte page referenced by this entry.\nelse ignored.",null,null],[17,"PD_PS","","Page size; if set this entry maps a 2-MByte page; otherwise, this entry references a page directory.",null,null],[17,"PD_G","","Global; if PD_PS &amp;&amp; CR4.PGE = 1, determines whether the translation is global; ignored otherwise\nif not PD_PS this is ignored.",null,null],[17,"PD_PAT","","Indirectly determines the memory type used to access the 2-MByte page referenced by this entry.\nif not PD_PS this is ignored.",null,null],[17,"PD_XD","","If IA32_EFER.NXE = 1, execute-disable\nIf 1, instruction fetches are not allowed from the 512-GByte region.",null,null],[17,"PT_P","","Present; must be 1 to map a 4-KByte page.",null,null],[17,"PT_RW","","Read/write; if 0, writes may not be allowed to the 4-KByte region controlled by this entry",null,null],[17,"PT_US","","User/supervisor; user-mode accesses are not allowed to the 4-KByte region controlled by this entry.",null,null],[17,"PT_PWT","","Page-level write-through.",null,null],[17,"PT_PCD","","Page-level cache disable.",null,null],[17,"PT_A","","Accessed; indicates whether software has accessed the 4-KByte page",null,null],[17,"PT_D","","Dirty; indicates whether software has written to the 4-KByte page referenced by this entry.",null,null],[17,"PT_G","","Global; if CR4.PGE = 1, determines whether the translation is global (see Section 4.10); ignored otherwise",null,null],[17,"PT_XD","","If IA32_EFER.NXE = 1, execute-disable\nIf 1, instruction fetches are not allowed from the 512-GByte region.",null,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"cmp","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"cmp","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"as_u64","","Convert to `u64`",4,null],[11,"from_u64","","Convert from `u64`",4,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"as_usize","","Convert to `usize`",5,null],[11,"from_usize","","Convert from `usize`",5,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"hash","","",6,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"clone","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"empty","","Returns an empty set of flags.",6,{"inputs":[],"output":{"name":"pml4entry"}}],[11,"all","","Returns the set containing all flags.",6,{"inputs":[],"output":{"name":"pml4entry"}}],[11,"bits","","Returns the raw value of the flags currently stored.",6,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",6,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",6,{"inputs":[{"name":"u64"}],"output":{"name":"pml4entry"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,null],[11,"is_all","","Returns `true` if all flags are currently set.",6,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",6,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",6,null],[11,"insert","","Inserts the specified flags in-place.",6,null],[11,"remove","","Removes the specified flags in-place.",6,null],[11,"toggle","","Toggles the specified flags in-place.",6,null],[11,"bitor","","Returns the union of the two sets of flags.",6,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",6,null],[11,"bitand","","Returns the intersection between the two sets of flags.",6,null],[11,"sub","","Returns the set difference of the two sets of flags.",6,null],[11,"not","","Returns the complement of this set of flags.",6,null],[11,"new","","Creates a new PML4Entry.",6,{"inputs":[{"name":"paddr"},{"name":"pml4entry"}],"output":{"name":"pml4entry"}}],[11,"get_address","","Retrieves the physical address in this entry.",6,null],[11,"is_present","","Is page present?",6,null],[11,"is_writeable","","Read/write; if 0, writes may not be allowed to the 512-GByte region, controlled by this entry (see Section 4.6)",6,null],[11,"is_user_mode_allowed","","User/supervisor; if 0, user-mode accesses are not allowed to the 512-GByte region controlled by this entry.",6,null],[11,"is_page_write_through","","Page-level write-through; indirectly determines the memory type used to access the page-directory-pointer table referenced by this entry.",6,null],[11,"is_page_level_cache_disabled","","Page-level cache disable; indirectly determines the memory type used to access the page-directory-pointer table referenced by this entry.",6,null],[11,"is_accessed","","Accessed; indicates whether this entry has been used for linear-address translation.",6,null],[11,"is_instruction_fetching_disabled","","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction fetches are not allowed from the 512-GByte region.",6,null],[11,"hash","","",7,null],[11,"cmp","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"empty","","Returns an empty set of flags.",7,{"inputs":[],"output":{"name":"pdptentry"}}],[11,"all","","Returns the set containing all flags.",7,{"inputs":[],"output":{"name":"pdptentry"}}],[11,"bits","","Returns the raw value of the flags currently stored.",7,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",7,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",7,{"inputs":[{"name":"u64"}],"output":{"name":"pdptentry"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",7,null],[11,"is_all","","Returns `true` if all flags are currently set.",7,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",7,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",7,null],[11,"insert","","Inserts the specified flags in-place.",7,null],[11,"remove","","Removes the specified flags in-place.",7,null],[11,"toggle","","Toggles the specified flags in-place.",7,null],[11,"bitor","","Returns the union of the two sets of flags.",7,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",7,null],[11,"bitand","","Returns the intersection between the two sets of flags.",7,null],[11,"sub","","Returns the set difference of the two sets of flags.",7,null],[11,"not","","Returns the complement of this set of flags.",7,null],[11,"new","","Creates a new PDPTEntry.",7,{"inputs":[{"name":"paddr"},{"name":"pdptentry"}],"output":{"name":"pdptentry"}}],[11,"get_address","","Retrieves the physical address in this entry.",7,null],[11,"is_present","","Is page present?",7,null],[11,"is_writeable","","Read/write; if 0, writes may not be allowed to the 1-GByte region controlled by this entry.",7,null],[11,"is_user_mode_allowed","","User/supervisor; user-mode accesses are not allowed to the 1-GByte region controlled by this entry.",7,null],[11,"is_page_write_through","","Page-level write-through.",7,null],[11,"is_page_level_cache_disabled","","Page-level cache disable.",7,null],[11,"is_accessed","","Accessed; indicates whether this entry has been used for linear-address translation.",7,null],[11,"is_pat","","Indirectly determines the memory type used to access the 1-GByte page referenced by this entry. if not PDPT_PS this is ignored.",7,null],[11,"is_instruction_fetching_disabled","","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction fetches are not allowed from the 512-GByte region.",7,null],[11,"hash","","",8,null],[11,"cmp","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"fmt","","",8,null],[11,"empty","","Returns an empty set of flags.",8,{"inputs":[],"output":{"name":"pdentry"}}],[11,"all","","Returns the set containing all flags.",8,{"inputs":[],"output":{"name":"pdentry"}}],[11,"bits","","Returns the raw value of the flags currently stored.",8,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",8,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",8,{"inputs":[{"name":"u64"}],"output":{"name":"pdentry"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,null],[11,"is_all","","Returns `true` if all flags are currently set.",8,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",8,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",8,null],[11,"insert","","Inserts the specified flags in-place.",8,null],[11,"remove","","Removes the specified flags in-place.",8,null],[11,"toggle","","Toggles the specified flags in-place.",8,null],[11,"bitor","","Returns the union of the two sets of flags.",8,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",8,null],[11,"bitand","","Returns the intersection between the two sets of flags.",8,null],[11,"sub","","Returns the set difference of the two sets of flags.",8,null],[11,"not","","Returns the complement of this set of flags.",8,null],[11,"new","","Creates a new PDEntry.",8,{"inputs":[{"name":"paddr"},{"name":"pdentry"}],"output":{"name":"pdentry"}}],[11,"get_address","","Retrieves the physical address in this entry.",8,null],[11,"is_present","","Present; must be 1 to map a 2-MByte page or reference a page table.",8,null],[11,"is_writeable","","Read/write; if 0, writes may not be allowed to the 2-MByte region controlled by this entry",8,null],[11,"is_user_mode_allowed","","User/supervisor; user-mode accesses are not allowed to the 2-MByte region controlled by this entry.",8,null],[11,"is_page_write_through","","Page-level write-through.",8,null],[11,"is_page_level_cache_disabled","","Page-level cache disable.",8,null],[11,"is_accessed","","Accessed; if PD_PS set indicates whether software has accessed the 2-MByte page else indicates whether this entry has been used for linear-address translation.",8,null],[11,"is_dirty","","Dirty; if PD_PS set indicates whether software has written to the 2-MByte page referenced by this entry else ignored.",8,null],[11,"is_page","","Page size; if set this entry maps a 2-MByte page; otherwise, this entry references a page directory.",8,null],[11,"is_global","","Global; if PD_PS &amp;&amp; CR4.PGE = 1, determines whether the translation is global; ignored otherwise if not PD_PS this is ignored.",8,null],[11,"is_pat","","Indirectly determines the memory type used to access the 2-MByte page referenced by this entry. if not PD_PS this is ignored.",8,null],[11,"is_instruction_fetching_disabled","","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction fetches are not allowed from the 2-Mbyte region.",8,null],[11,"hash","","",9,null],[11,"cmp","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"fmt","","",9,null],[11,"empty","","Returns an empty set of flags.",9,{"inputs":[],"output":{"name":"ptentry"}}],[11,"all","","Returns the set containing all flags.",9,{"inputs":[],"output":{"name":"ptentry"}}],[11,"bits","","Returns the raw value of the flags currently stored.",9,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",9,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",9,{"inputs":[{"name":"u64"}],"output":{"name":"ptentry"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,null],[11,"is_all","","Returns `true` if all flags are currently set.",9,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",9,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",9,null],[11,"insert","","Inserts the specified flags in-place.",9,null],[11,"remove","","Removes the specified flags in-place.",9,null],[11,"toggle","","Toggles the specified flags in-place.",9,null],[11,"bitor","","Returns the union of the two sets of flags.",9,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",9,null],[11,"bitand","","Returns the intersection between the two sets of flags.",9,null],[11,"sub","","Returns the set difference of the two sets of flags.",9,null],[11,"not","","Returns the complement of this set of flags.",9,null],[11,"new","","Creates a new PTEntry.",9,{"inputs":[{"name":"paddr"},{"name":"ptentry"}],"output":{"name":"ptentry"}}],[11,"get_address","","Retrieves the physical address in this entry.",9,null],[11,"is_present","","Present; must be 1 to map a 4-KByte page or reference a page table.",9,null],[11,"is_writeable","","Read/write; if 0, writes may not be allowed to the 4-KByte region controlled by this entry",9,null],[11,"is_user_mode_allowed","","User/supervisor; user-mode accesses are not allowed to the 4-KByte region controlled by this entry.",9,null],[11,"is_page_write_through","","Page-level write-through.",9,null],[11,"is_page_level_cache_disabled","","Page-level cache disable.",9,null],[11,"is_accessed","","Accessed; if PT_PS set indicates whether software has accessed the 4-KByte page else indicates whether this entry has been used for linear-address translation.",9,null],[11,"is_dirty","","Dirty; if PD_PS set indicates whether software has written to the 4-KByte page referenced by this entry else ignored.",9,null],[11,"is_global","","Global; if PT_PS &amp;&amp; CR4.PGE = 1, determines whether the translation is global; ignored otherwise if not PT_PS this is ignored.",9,null],[11,"is_instruction_fetching_disabled","","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction fetches are not allowed from the 4-KByte region.",9,null],[0,"segmentation","x86","Program x86 segmentation hardware.",null,null],[3,"SegmentSelector","x86::segmentation","",null,null],[3,"SegmentDescriptor","","",null,null],[5,"load_ss","","Reload stack segment register.",null,{"inputs":[{"name":"segmentselector"}],"output":null}],[5,"load_ds","","Reload data segment register.",null,{"inputs":[{"name":"segmentselector"}],"output":null}],[5,"load_es","","Reload fs segment register.",null,{"inputs":[{"name":"segmentselector"}],"output":null}],[5,"load_fs","","Reload fs segment register.",null,{"inputs":[{"name":"segmentselector"}],"output":null}],[5,"load_gs","","Reload gs segment register.",null,{"inputs":[{"name":"segmentselector"}],"output":null}],[5,"load_cs","","Reload code segment register.\nNote this is special since we can not directly move\nto %cs. Instead we push the new segment selector\nand return value on the stack and use lretq\nto reload cs and continue at 1:.",null,{"inputs":[{"name":"segmentselector"}],"output":null}],[17,"RPL_0","","Requestor Privilege Level",null,null],[17,"RPL_1","","",null,null],[17,"RPL_2","","",null,null],[17,"RPL_3","","",null,null],[17,"TI_GDT","","Table Indicator (TI) 0 means GDT is used.",null,null],[17,"TI_LDT","","Table Indicator (TI) 1 means LDT is used.",null,null],[17,"DESC_S","","Descriptor type (0 = system; 1 = code or data).",null,null],[17,"DESC_DPL0","","Descriptor privilege level 0.",null,null],[17,"DESC_DPL1","","Descriptor privilege level 1.",null,null],[17,"DESC_DPL2","","Descriptor privilege level 2.",null,null],[17,"DESC_DPL3","","Descriptor privilege level 3.",null,null],[17,"DESC_P","","Descriptor is Present.",null,null],[17,"DESC_AVL","","Available for use by system software.",null,null],[17,"DESC_L","","64-bit code segment (IA-32e mode only).",null,null],[17,"DESC_DB","","Default operation size (0 = 16-bit segment, 1 = 32-bit segment)",null,null],[17,"DESC_G","","Granularity.",null,null],[17,"TYPE_SYS_LDT","","",null,null],[17,"TYPE_SYS_TSS_AVAILABLE","","",null,null],[17,"TYPE_SYS_TSS_BUSY","","",null,null],[17,"TYPE_SYS_CALL_GATE","","",null,null],[17,"TYPE_SYS_INTERRUPT_GATE","","",null,null],[17,"TYPE_SYS_TRAP_GATE","","",null,null],[17,"TYPE_D_RO","","Data Read-Only",null,null],[17,"TYPE_D_ROA","","Data Read-Only, accessed",null,null],[17,"TYPE_D_RW","","Data Read/Write",null,null],[17,"TYPE_D_RWA","","Data Read/Write, accessed",null,null],[17,"TYPE_D_ROEXD","","Data Read-Only, expand-down",null,null],[17,"TYPE_D_ROEXDA","","Data Read-Only, expand-down, accessed",null,null],[17,"TYPE_D_RWEXD","","Data Read/Write, expand-down",null,null],[17,"TYPE_D_RWEXDA","","Data Read/Write, expand-down, accessed",null,null],[17,"TYPE_C_EO","","Code Execute-Only",null,null],[17,"TYPE_C_EOA","","Code Execute-Only, accessed",null,null],[17,"TYPE_C_ER","","Code Execute/Read",null,null],[17,"TYPE_C_ERA","","Code Execute/Read, accessed",null,null],[17,"TYPE_C_EOC","","Code Execute-Only, conforming",null,null],[17,"TYPE_C_EOCA","","Code Execute-Only, conforming, accessed",null,null],[17,"TYPE_C_ERC","","Code Execute/Read, conforming",null,null],[17,"TYPE_C_ERCA","","Code Execute/Read, conforming, accessed",null,null],[11,"hash","","",10,null],[11,"cmp","","",10,null],[11,"partial_cmp","","",10,null],[11,"lt","","",10,null],[11,"le","","",10,null],[11,"gt","","",10,null],[11,"ge","","",10,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"empty","","Returns an empty set of flags.",10,{"inputs":[],"output":{"name":"segmentselector"}}],[11,"all","","Returns the set containing all flags.",10,{"inputs":[],"output":{"name":"segmentselector"}}],[11,"bits","","Returns the raw value of the flags currently stored.",10,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",10,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",10,{"inputs":[{"name":"u16"}],"output":{"name":"segmentselector"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,null],[11,"is_all","","Returns `true` if all flags are currently set.",10,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",10,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",10,null],[11,"insert","","Inserts the specified flags in-place.",10,null],[11,"remove","","Removes the specified flags in-place.",10,null],[11,"toggle","","Toggles the specified flags in-place.",10,null],[11,"bitor","","Returns the union of the two sets of flags.",10,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",10,null],[11,"bitand","","Returns the intersection between the two sets of flags.",10,null],[11,"sub","","Returns the set difference of the two sets of flags.",10,null],[11,"not","","Returns the complement of this set of flags.",10,null],[11,"new","","Create a new SegmentSelector",10,{"inputs":[{"name":"u16"}],"output":{"name":"segmentselector"}}],[11,"from_raw","","",10,{"inputs":[{"name":"u16"}],"output":{"name":"segmentselector"}}],[11,"fmt","","",10,null],[11,"hash","","",11,null],[11,"cmp","","",11,null],[11,"partial_cmp","","",11,null],[11,"lt","","",11,null],[11,"le","","",11,null],[11,"gt","","",11,null],[11,"ge","","",11,null],[11,"clone","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"empty","","Returns an empty set of flags.",11,{"inputs":[],"output":{"name":"segmentdescriptor"}}],[11,"all","","Returns the set containing all flags.",11,{"inputs":[],"output":{"name":"segmentdescriptor"}}],[11,"bits","","Returns the raw value of the flags currently stored.",11,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",11,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",11,{"inputs":[{"name":"u64"}],"output":{"name":"segmentdescriptor"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",11,null],[11,"is_all","","Returns `true` if all flags are currently set.",11,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",11,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",11,null],[11,"insert","","Inserts the specified flags in-place.",11,null],[11,"remove","","Removes the specified flags in-place.",11,null],[11,"toggle","","Toggles the specified flags in-place.",11,null],[11,"bitor","","Returns the union of the two sets of flags.",11,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",11,null],[11,"bitand","","Returns the intersection between the two sets of flags.",11,null],[11,"sub","","Returns the set difference of the two sets of flags.",11,null],[11,"not","","Returns the complement of this set of flags.",11,null],[11,"new","","",11,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"segmentdescriptor"}}],[11,"fmt","","",11,null],[0,"task","x86","Helpers to program the task state segment.",null,null],[3,"TaskStateSegment","x86::task","In 64-bit mode the TSS holds information that is not\ndirectly related to the task-switch mechanism,\nbut is used for finding kernel level stack\nif interrupts arrive while in kernel mode.",null,null],[12,"reserved","","",12,null],[12,"rsp","","The full 64-bit canonical forms of the stack pointers (RSP) for privilege levels 0-2.",12,null],[12,"reserved2","","",12,null],[12,"ist","","The full 64-bit canonical forms of the interrupt stack table (IST) pointers.",12,null],[12,"reserved3","","",12,null],[12,"reserved4","","",12,null],[12,"iomap_base","","The 16-bit offset to the I/O permission bit map from the 64-bit TSS base.",12,null],[5,"load_ltr","","Load the task state register.",null,{"inputs":[{"name":"segmentselector"}],"output":null}],[6,"TaskStateDescriptorLow","","",null,null],[6,"TaskStateDescriptorHigh","","",null,null],[11,"fmt","","",12,null],[11,"new","","",12,{"inputs":[],"output":{"name":"taskstatesegment"}}],[0,"dtables","x86","Functions and data-structures to load descriptor tables.",null,null],[3,"DescriptorTablePointer","x86::dtables","A struct describing a pointer to a descriptor table (GDT / IDT).\nThis is in a format suitable for giving to &#39;lgdt&#39; or &#39;lidt&#39;.",null,null],[12,"limit","","Size of the DT.",13,null],[12,"base","","Pointer to the memory region containing the DT.",13,null],[5,"lgdt","","Load GDT table.",null,{"inputs":[{"name":"descriptortablepointer"}],"output":null}],[5,"lldt","","Load LDT table.",null,{"inputs":[{"name":"descriptortablepointer"}],"output":null}],[5,"lidt","","Load IDT table.",null,{"inputs":[{"name":"descriptortablepointer"}],"output":null}],[11,"fmt","","",13,null],[0,"syscall","x86","Invokes an OS system-call handler at privilege level 0.",null,null],[5,"syscall0","x86::syscall","",null,{"inputs":[{"name":"u64"}],"output":{"name":"u64"}}],[5,"syscall1","","",null,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"u64"}}],[5,"syscall2","","",null,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"u64"}}],[5,"syscall3","","",null,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"u64"}}],[5,"syscall4","","",null,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"u64"}}],[5,"syscall5","","",null,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"u64"}}],[5,"syscall6","","",null,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"u64"}}],[0,"perfcnt","x86","Information about available performance counters.",null,null],[5,"core_counters","x86::perfcnt","Return all core performance counters for the running micro-architecture.",null,{"inputs":[],"output":{"name":"option"}}],[5,"uncore_counters","","Return all uncore performance counters for the running micro-architecture.",null,{"inputs":[],"output":{"name":"option"}}],[0,"intel","","Information about Intel&#39;s performance counters.",null,null],[0,"counters","x86::perfcnt::intel","Performance counter for all Intel architectures.",null,null],[7,"COUNTER_MAP","x86::perfcnt::intel::counters","",null,null],[17,"JAKETOWN_UNCORE","","",null,null],[17,"NEHALEMEX_CORE","","",null,null],[17,"JAKETOWN_CORE","","",null,null],[17,"IVYTOWN_CORE","","",null,null],[17,"HASWELL_UNCORE","","",null,null],[17,"IVYBRIDGE_CORE","","",null,null],[17,"BONNELL_CORE","","",null,null],[17,"BROADWELL_UNCORE","","",null,null],[17,"HASWELLX_CORE","","",null,null],[17,"NEHALEMEP_CORE","","",null,null],[17,"HASWELLX_UNCORE","","",null,null],[17,"WESTMEREEP_DP_CORE","","",null,null],[17,"IVYBRIDGE_UNCORE","","",null,null],[17,"BROADWELLDE_CORE","","",null,null],[17,"SANDYBRIDGE_UNCORE","","",null,null],[17,"SKYLAKE_CORE","","",null,null],[17,"HASWELL_CORE","","",null,null],[17,"IVYTOWN_UNCORE","","",null,null],[17,"BROADWELLDE_UNCORE","","",null,null],[17,"SILVERMONT_CORE","","",null,null],[17,"WESTMEREEX_CORE","","",null,null],[17,"SANDYBRIDGE_CORE","","",null,null],[17,"WESTMEREEP_SP_CORE","","",null,null],[17,"BROADWELL_CORE","","",null,null],[0,"description","x86::perfcnt::intel","",null,null],[3,"IntelPerformanceCounterDescription","x86::perfcnt::intel::description","",null,null],[12,"event_code","","This field maps to the Event Select field in the IA32_PERFEVTSELx[7:0]MSRs.",14,null],[12,"umask","","This field maps to the Unit Mask filed in the IA32_PERFEVTSELx[15:8] MSRs.",14,null],[12,"event_name","","It is a string of characters to identify the programming of an event.",14,null],[12,"brief_description","","This field contains a description of what is being counted by a particular event.",14,null],[12,"public_description","","In some cases, this field will contain a more detailed description of what is counted by an event.",14,null],[12,"counter","","This field lists the fixed (PERF_FIXED_CTRX) or programmable (IA32_PMCX)\ncounters that can be used to count the event.",14,null],[12,"counter_ht_off","","This field lists the counters where this event can be sampled\nwhen Intel® Hyper-Threading Technology (Intel® HT Technology) is\ndisabled.",14,null],[12,"pebs_counters","","This field is only relevant to PEBS events.",14,null],[12,"sample_after_value","","Sample After Value (SAV) is the value that can be preloaded\ninto the counter registers to set the point at which they will overflow.",14,null],[12,"msr_index","","Additional MSRs may be required for programming certain events.\nThis field gives the address of such MSRS.",14,null],[12,"msr_value","","When an MSRIndex is used (indicated by the MSRIndex column), this field will\ncontain the value that needs to be loaded into the\nregister whose address is given in MSRIndex column.",14,null],[12,"taken_alone","","This field is set for an event which can only be sampled or counted by itself,\nmeaning that when this event is being collected,\nthe remaining programmable counters are not available to count any other events.",14,null],[12,"counter_mask","","This field maps to the Counter Mask (CMASK) field in IA32_PERFEVTSELx[31:24] MSR.",14,null],[12,"invert","","This field corresponds to the Invert Counter Mask (INV) field in IA32_PERFEVTSELx[23] MSR.",14,null],[12,"any_thread","","This field corresponds to the Any Thread (ANY) bit of IA32_PERFEVTSELx[21] MSR.",14,null],[12,"edge_detect","","This field corresponds to the Edge Detect (E) bit of IA32_PERFEVTSELx[18] MSR.",14,null],[12,"pebs","","A &#39;0&#39; in this field means that the event cannot be programmed as a PEBS event.\nA &#39;1&#39; in this field means that the event is a  precise event and can be programmed\nin one of two ways – as a regular event or as a PEBS event.\nAnd a &#39;2&#39; in this field means that the event can only be programmed as a PEBS event.",14,null],[12,"precise_store","","A &#39;1&#39; in this field means the event uses the Precise Store feature and Bit 3 and\nbit 63 in IA32_PEBS_ENABLE MSR must be set to enable IA32_PMC3 as a PEBS counter\nand enable the precise store facility respectively.",14,null],[12,"data_la","","A &#39;1&#39; in this field means that when the event is configured as a PEBS event,\nthe Data Linear Address facility is supported.",14,null],[12,"l1_hit_indication","","A &#39;1&#39; in this field means that when the event is configured as a PEBS event,\nthe DCU hit field of the PEBS record is set to 1 when the store hits in the\nL1 cache and 0 when it misses.",14,null],[12,"errata","","This field lists the known bugs that apply to the events.",14,null],[12,"offcore","","There is only 1 file for core and offcore events in this format.\nThis field is set to 1 for offcore events and 0 for core events.",14,null],[12,"unit","","",14,null],[12,"filter","","",14,null],[12,"extsel","","",14,null],[4,"PebsType","","",null,null],[13,"Regular","","",15,null],[13,"PebsOrRegular","","",15,null],[13,"PebsOnly","","",15,null],[4,"Tuple","","",null,null],[13,"One","","",16,null],[13,"Two","","",16,null],[4,"MSRIndex","","",null,null],[13,"None","","",17,null],[13,"One","","",17,null],[13,"Two","","",17,null],[4,"Counter","","",null,null],[13,"Fixed","","Bit-mask containing the fixed counters\nusable with the corresponding performance event.",18,null],[13,"Programmable","","Bit-mask containing the programmable counters\nusable with the corresponding performance event.",18,null],[11,"fmt","","",15,null],[11,"fmt","","",16,null],[11,"fmt","","",17,null],[11,"fmt","","",18,null],[11,"fmt","","",14,null],[0,"cpuid","x86","",null,null],[0,"tlb","","Functions to flush the translation lookaside buffer (TLB).",null,null],[5,"flush","x86::tlb","Invalidate the given address in the TLB using the `invlpg` instruction.",null,{"inputs":[{"name":"usize"}],"output":null}],[5,"flush_all","","Invalidate the TLB completely by reloading the CR3 register.",null,{"inputs":[],"output":null}],[14,"int","x86","Generate a software interrupt.\nThis is a macro argument needs to be an immediate.",null,null],[14,"syscall","","",null,null]],"paths":[[3,"InterruptDescription"],[3,"IdtEntry"],[3,"PageFaultError"],[3,"RFlags"],[3,"PAddr"],[3,"VAddr"],[3,"PML4Entry"],[3,"PDPTEntry"],[3,"PDEntry"],[3,"PTEntry"],[3,"SegmentSelector"],[3,"SegmentDescriptor"],[3,"TaskStateSegment"],[3,"DescriptorTablePointer"],[3,"IntelPerformanceCounterDescription"],[4,"PebsType"],[4,"Tuple"],[4,"MSRIndex"],[4,"Counter"]]};
searchIndex["mmap"] = {"doc":"","items":[[3,"MemoryMap","mmap","A memory mapped file or chunk of memory. This is a very system-specific\ninterface to the OS&#39;s memory mapping facilities (`mmap` on POSIX,\n`VirtualAlloc`/`CreateFileMapping` on Windows). It makes no attempt at\nabstracting platform differences, besides in error values returned. Consider\nyourself warned.",null,null],[4,"MemoryMapKind","","Type of memory map",null,null],[13,"MapFile","","Virtual memory map. Usually used to change the permissions of a given\nchunk of memory.  Corresponds to `VirtualAlloc` on Windows.",0,null],[13,"MapVirtual","","Virtual memory map. Usually used to change the permissions of a given\nchunk of memory, or for allocation. Corresponds to `VirtualAlloc` on\nWindows.",0,null],[4,"MapOption","","Options the memory map is created with",null,null],[13,"MapReadable","","The memory should be readable",1,null],[13,"MapWritable","","The memory should be writable",1,null],[13,"MapExecutable","","The memory should be executable",1,null],[13,"MapAddr","","Create a map for a specific address range. Corresponds to `MAP_FIXED` on\nPOSIX.",1,null],[13,"MapFd","","Create a memory mapping for a file with a given fd.",1,null],[13,"MapOffset","","When using `MapFd`, the start of the map is `usize` bytes from the start\nof the file.",1,null],[13,"MapNonStandardFlags","","On POSIX, this can be used to specify the default flags passed to\n`mmap`. By default it uses `MAP_PRIVATE` and, if not using `MapFd`,\n`MAP_ANON`. This will override both of those. This is platform-specific\n(the exact values used) and ignored on Windows.",1,null],[4,"MapError","","Possible errors when creating a map.",null,null],[13,"ErrFdNotAvail","","# The following are POSIX-specific",2,null],[13,"ErrInvalidFd","","fd was not valid",2,null],[13,"ErrUnaligned","","Either the address given by `MapAddr` or offset given by `MapOffset` was\nnot a multiple of `MemoryMap::granularity` (unaligned to page size).",2,null],[13,"ErrNoMapSupport","","With `MapFd`, the fd does not support mapping.",2,null],[13,"ErrNoMem","","If using `MapAddr`, the address + `min_len` was outside of the process&#39;s\naddress space. If using `MapFd`, the target of the fd didn&#39;t have enough\nresources to fulfill the request.",2,null],[13,"ErrZeroLength","","A zero-length map was requested. This is invalid according to\n[POSIX](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mmap.html).\nNot all platforms obey this, but this wrapper does.",2,null],[13,"ErrUnknown","","Unrecognized error. The inner value is the unrecognized errno.",2,null],[13,"ErrUnsupProt","","# The following are Windows-specific",2,null],[13,"ErrUnsupOffset","","When using `MapFd`, `MapOffset` was given (Windows does not support this\nat all)",2,null],[13,"ErrAlreadyExists","","When using `MapFd`, there was already a mapping to the file.",2,null],[13,"ErrVirtualAlloc","","Unrecognized error from `VirtualAlloc`. The inner value is the return\nvalue of GetLastError.",2,null],[13,"ErrCreateFileMappingW","","Unrecognized error from `CreateFileMapping`. The inner value is the\nreturn value of `GetLastError`.",2,null],[13,"ErrMapViewOfFile","","Unrecognized error from `MapViewOfFile`. The inner value is the return\nvalue of `GetLastError`.",2,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"new","","Create a new mapping with the given `options`, at least `min_len` bytes\nlong. `min_len` must be greater than zero; see the note on\n`ErrZeroLength`.",3,null],[11,"granularity","","Granularity that the offset or address must be for `MapOffset` and\n`MapAddr` respectively.",3,{"inputs":[],"output":{"name":"usize"}}],[11,"drop","","Unmap the mapping. Panics the task if `munmap` panics.",3,null],[11,"data","","Returns the pointer to the memory created or modified by this map.",3,null],[11,"len","","Returns the number of bytes this map applies to.",3,null],[11,"kind","","Returns the type of mapping this represents.",3,null]],"paths":[[4,"MemoryMapKind"],[4,"MapOption"],[4,"MapError"],[3,"MemoryMap"]]};
searchIndex["tempdir"] = {"doc":"Temporary directories of files.","items":[[3,"TempDir","tempdir","A directory in the filesystem that is automatically deleted when\nit goes out of scope.",null,null],[11,"new","","Attempts to make a temporary directory inside of `env::temp_dir()` whose\nname will have the prefix, `prefix`. The directory and\neverything inside it will be automatically deleted once the\nreturned `TempDir` is destroyed.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_in","","Attempts to make a temporary directory inside of `tmpdir`\nwhose name will have the prefix `prefix`. The directory and\neverything inside it will be automatically deleted once the\nreturned `TempDir` is destroyed.",0,{"inputs":[{"name":"p"},{"name":"str"}],"output":{"name":"result"}}],[11,"path","","Accesses the [`Path`] to the temporary directory.",0,null],[11,"into_path","","Unwraps the [`Path`] contained in the `TempDir` and\nreturns it. This destroys the `TempDir` without deleting the\ndirectory represented by the returned `Path`.",0,null],[11,"close","","Closes and removes the temporary directory, returing a `Result`.",0,null],[11,"as_ref","","",0,null],[11,"fmt","","",0,null],[11,"drop","","",0,null]],"paths":[[3,"TempDir"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",15,null],[12,"sa_data","","",15,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",16,null],[12,"sin_port","","",16,null],[12,"sin_addr","","",16,null],[12,"sin_zero","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",19,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",20,null],[12,"ai_family","","",20,null],[12,"ai_socktype","","",20,null],[12,"ai_protocol","","",20,null],[12,"ai_addrlen","","",20,null],[12,"ai_addr","","",20,null],[12,"ai_canonname","","",20,null],[12,"ai_next","","",20,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",21,null],[12,"nl_pid","","",21,null],[12,"nl_groups","","",21,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",22,null],[12,"sll_protocol","","",22,null],[12,"sll_ifindex","","",22,null],[12,"sll_hatype","","",22,null],[12,"sll_pkttype","","",22,null],[12,"sll_halen","","",22,null],[12,"sll_addr","","",22,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",23,null],[12,"tm_min","","",23,null],[12,"tm_hour","","",23,null],[12,"tm_mday","","",23,null],[12,"tm_mon","","",23,null],[12,"tm_year","","",23,null],[12,"tm_wday","","",23,null],[12,"tm_yday","","",23,null],[12,"tm_isdst","","",23,null],[12,"tm_gmtoff","","",23,null],[12,"tm_zone","","",23,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",24,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",25,null],[12,"dli_fbase","","",25,null],[12,"dli_sname","","",25,null],[12,"dli_saddr","","",25,null],[3,"epoll_event","","",null,null],[12,"events","","",26,null],[12,"u64","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[12,"domainname","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"dirent","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"dirent64","","",null,null],[12,"d_ino","","",30,null],[12,"d_off","","",30,null],[12,"d_reclen","","",30,null],[12,"d_type","","",30,null],[12,"d_name","","",30,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",31,null],[12,"rlim_max","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_pathv","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_flags","","",32,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",33,null],[12,"ifa_name","","",33,null],[12,"ifa_flags","","",33,null],[12,"ifa_addr","","",33,null],[12,"ifa_netmask","","",33,null],[12,"ifa_ifu","","",33,null],[12,"ifa_data","","",33,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",34,null],[12,"pw_passwd","","",34,null],[12,"pw_uid","","",34,null],[12,"pw_gid","","",34,null],[12,"pw_gecos","","",34,null],[12,"pw_dir","","",34,null],[12,"pw_shell","","",34,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",35,null],[12,"f_frsize","","",35,null],[12,"f_blocks","","",35,null],[12,"f_bfree","","",35,null],[12,"f_bavail","","",35,null],[12,"f_files","","",35,null],[12,"f_ffree","","",35,null],[12,"f_favail","","",35,null],[12,"f_fsid","","",35,null],[12,"f_flag","","",35,null],[12,"f_namemax","","",35,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",36,null],[12,"dqb_bsoftlimit","","",36,null],[12,"dqb_curspace","","",36,null],[12,"dqb_ihardlimit","","",36,null],[12,"dqb_isoftlimit","","",36,null],[12,"dqb_curinodes","","",36,null],[12,"dqb_btime","","",36,null],[12,"dqb_itime","","",36,null],[12,"dqb_valid","","",36,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",37,null],[12,"ssi_errno","","",37,null],[12,"ssi_code","","",37,null],[12,"ssi_pid","","",37,null],[12,"ssi_uid","","",37,null],[12,"ssi_fd","","",37,null],[12,"ssi_tid","","",37,null],[12,"ssi_band","","",37,null],[12,"ssi_overrun","","",37,null],[12,"ssi_trapno","","",37,null],[12,"ssi_status","","",37,null],[12,"ssi_int","","",37,null],[12,"ssi_ptr","","",37,null],[12,"ssi_utime","","",37,null],[12,"ssi_stime","","",37,null],[12,"ssi_addr","","",37,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",38,null],[12,"mq_maxmsg","","",38,null],[12,"mq_msgsize","","",38,null],[12,"mq_curmsgs","","",38,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",39,null],[12,"if_name","","",39,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",40,null],[12,"sa_mask","","",40,null],[12,"sa_flags","","",40,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",41,null],[12,"ss_flags","","",41,null],[12,"ss_size","","",41,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",42,null],[12,"si_errno","","",42,null],[12,"si_code","","",42,null],[12,"_pad","","",42,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",43,null],[12,"gl_pathv","","",43,null],[12,"gl_offs","","",43,null],[12,"gl_flags","","",43,null],[3,"ucred","","",null,null],[12,"pid","","",44,null],[12,"uid","","",44,null],[12,"gid","","",44,null],[3,"statfs","","",null,null],[12,"f_type","","",45,null],[12,"f_bsize","","",45,null],[12,"f_blocks","","",45,null],[12,"f_bfree","","",45,null],[12,"f_bavail","","",45,null],[12,"f_files","","",45,null],[12,"f_ffree","","",45,null],[12,"f_fsid","","",45,null],[12,"f_namelen","","",45,null],[12,"f_frsize","","",45,null],[3,"msghdr","","",null,null],[12,"msg_name","","",46,null],[12,"msg_namelen","","",46,null],[12,"msg_iov","","",46,null],[12,"msg_iovlen","","",46,null],[12,"msg_control","","",46,null],[12,"msg_controllen","","",46,null],[12,"msg_flags","","",46,null],[3,"termios","","",null,null],[12,"c_iflag","","",47,null],[12,"c_oflag","","",47,null],[12,"c_cflag","","",47,null],[12,"c_lflag","","",47,null],[12,"c_line","","",47,null],[12,"c_cc","","",47,null],[12,"c_ispeed","","",47,null],[12,"c_ospeed","","",47,null],[3,"flock","","",null,null],[12,"l_type","","",48,null],[12,"l_whence","","",48,null],[12,"l_start","","",48,null],[12,"l_len","","",48,null],[12,"l_pid","","",48,null],[3,"ipc_perm","","",null,null],[12,"__key","","",49,null],[12,"uid","","",49,null],[12,"gid","","",49,null],[12,"cuid","","",49,null],[12,"cgid","","",49,null],[12,"mode","","",49,null],[12,"__seq","","",49,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",50,null],[12,"shm_segsz","","",50,null],[12,"shm_atime","","",50,null],[12,"shm_dtime","","",50,null],[12,"shm_ctime","","",50,null],[12,"shm_cpid","","",50,null],[12,"shm_lpid","","",50,null],[12,"shm_nattch","","",50,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",51,null],[12,"loads","","",51,null],[12,"totalram","","",51,null],[12,"freeram","","",51,null],[12,"sharedram","","",51,null],[12,"bufferram","","",51,null],[12,"totalswap","","",51,null],[12,"freeswap","","",51,null],[12,"procs","","",51,null],[12,"pad","","",51,null],[12,"totalhigh","","",51,null],[12,"freehigh","","",51,null],[12,"mem_unit","","",51,null],[12,"_f","","",51,null],[3,"stat","","",null,null],[12,"st_dev","","",52,null],[12,"st_ino","","",52,null],[12,"st_nlink","","",52,null],[12,"st_mode","","",52,null],[12,"st_uid","","",52,null],[12,"st_gid","","",52,null],[12,"st_rdev","","",52,null],[12,"st_size","","",52,null],[12,"st_blksize","","",52,null],[12,"st_blocks","","",52,null],[12,"st_atime","","",52,null],[12,"st_atime_nsec","","",52,null],[12,"st_mtime","","",52,null],[12,"st_mtime_nsec","","",52,null],[12,"st_ctime","","",52,null],[12,"st_ctime_nsec","","",52,null],[3,"stat64","","",null,null],[12,"st_dev","","",53,null],[12,"st_ino","","",53,null],[12,"st_nlink","","",53,null],[12,"st_mode","","",53,null],[12,"st_uid","","",53,null],[12,"st_gid","","",53,null],[12,"st_rdev","","",53,null],[12,"st_size","","",53,null],[12,"st_blksize","","",53,null],[12,"st_blocks","","",53,null],[12,"st_atime","","",53,null],[12,"st_atime_nsec","","",53,null],[12,"st_mtime","","",53,null],[12,"st_mtime_nsec","","",53,null],[12,"st_ctime","","",53,null],[12,"st_ctime_nsec","","",53,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",54,null],[12,"exponent","","",54,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",55,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",56,null],[12,"swd","","",56,null],[12,"ftw","","",56,null],[12,"fop","","",56,null],[12,"rip","","",56,null],[12,"rdp","","",56,null],[12,"mxcsr","","",56,null],[12,"mxcr_mask","","",56,null],[12,"_st","","",56,null],[12,"_xmm","","",56,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",57,null],[12,"fpregs","","",57,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",58,null],[12,"uc_link","","",58,null],[12,"uc_stack","","",58,null],[12,"uc_mcontext","","",58,null],[12,"uc_sigmask","","",58,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",59,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",58,null],[11,"clone","","",60,null],[11,"clone","","",51,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",61,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",65,null],[11,"clone","","",66,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",67,null],[11,"clone","","",38,null],[11,"clone","","",68,null],[11,"clone","","",39,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",69,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["raw_cpuid"] = {"doc":"","items":[[3,"CpuId","raw_cpuid","Main type used to query for information about the CPU we&#39;re running on.",null,null],[3,"CpuIdResult","","Low-level data-structure to store result of cpuid instruction.",null,null],[12,"eax","","Return value EAX register",0,null],[12,"ebx","","Return value EBX register",0,null],[12,"ecx","","Return value ECX register",0,null],[12,"edx","","Return value EDX register",0,null],[3,"VendorInfo","","",null,null],[3,"CacheInfoIter","","Used to iterate over cache information contained in cpuid instruction.",null,null],[3,"CacheInfo","","Describes any kind of cache (TLB, Data and Instruction caches plus prefetchers).",null,null],[12,"num","","Number as retrieved from cpuid",1,null],[12,"typ","","Cache type",1,null],[12,"desc","","Description of the cache (from Intel Manual)",1,null],[3,"ProcessorSerial","","",null,null],[3,"FeatureInfo","","",null,null],[3,"CacheParametersIter","","",null,null],[3,"CacheParameter","","",null,null],[3,"MonitorMwaitInfo","","",null,null],[3,"ThermalPowerInfo","","",null,null],[3,"ExtendedFeatures","","",null,null],[3,"DirectCacheAccessInfo","","",null,null],[3,"PerformanceMonitoringInfo","","",null,null],[3,"ExtendedTopologyIter","","",null,null],[3,"ExtendedTopologyLevel","","",null,null],[3,"ExtendedStateInfo","","",null,null],[3,"ExtendedStateIter","","",null,null],[3,"ExtendedState","","",null,null],[12,"subleaf","","",2,null],[3,"QoSInfo","","",null,null],[3,"QoSEnforcementInfo","","",null,null],[3,"QoSEnforcementIter","","Iterator over the QoSEnforcement sub-leafs.",null,null],[3,"QoSEnforcement","","",null,null],[3,"ProcessorTraceInfo","","",null,null],[3,"ProcessorTraceIter","","Iterator over the Processor Trace sub-leafs.",null,null],[3,"ProcessorTrace","","Processor Trace information sub-leaf.",null,null],[3,"TscInfo","","Contains time stamp counter information.",null,null],[3,"ProcessorFrequencyInfo","","Processor Frequency Information",null,null],[3,"ExtendedFunctionInfo","","",null,null],[4,"CacheInfoType","","",null,null],[13,"GENERAL","","",3,null],[13,"CACHE","","",3,null],[13,"TLB","","",3,null],[13,"STLB","","",3,null],[13,"DTLB","","",3,null],[13,"PREFETCH","","",3,null],[4,"CacheType","","",null,null],[13,"NULL","","Null - No more caches",4,null],[13,"DATA","","",4,null],[13,"INSTRUCTION","","",4,null],[13,"UNIFIED","","",4,null],[13,"RESERVED","","4-31 = Reserved",4,null],[4,"TopologyType","","",null,null],[13,"INVALID","","",5,null],[13,"SMT","","Hyper-thread (Simultaneous multithreading)",5,null],[13,"CORE","","",5,null],[4,"L2Associativity","","",null,null],[13,"Disabled","","",6,null],[13,"DirectMapped","","",6,null],[13,"TwoWay","","",6,null],[13,"FourWay","","",6,null],[13,"EightWay","","",6,null],[13,"SixteenWay","","",6,null],[13,"FullyAssiciative","","",6,null],[13,"Unknown","","",6,null],[5,"cpuid2","","Execute CPUID instruction with eax and ecx register set.\nNote: This is a low-level function to query cpuid directly.\nIf in doubt use `CpuId` instead.",null,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"cpuidresult"}}],[5,"cpuid1","","Execute CPUID instruction with eax register set.\nNote: This is a low-level function to query cpuid directly.\nIf in doubt use `CpuId` instead.",null,{"inputs":[{"name":"u32"}],"output":{"name":"cpuidresult"}}],[17,"CACHE_INFO_TABLE","","This table is taken from Intel manual (Section CPUID instruction).",null,null],[11,"fmt","","",7,null],[11,"default","","",0,{"inputs":[],"output":{"name":"cpuidresult"}}],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"new","","Return new CPUID struct.",7,{"inputs":[],"output":{"name":"cpuid"}}],[11,"get_vendor_info","","Return information about vendor.\nThis is typically a ASCII readable string such as\nGenuineIntel for Intel CPUs or AuthenticAMD for AMD CPUs.",7,null],[11,"get_feature_info","","Query a set of features that are available on this CPU.",7,null],[11,"get_cache_info","","Query basic information about caches. This will just return an index\ninto a static table of cache descriptions (see `CACHE_INFO_TABLE`).",7,null],[11,"get_processor_serial","","Retrieve serial number of processor.",7,null],[11,"get_cache_parameters","","Retrieve more elaborate information about caches (as opposed\nto `get_cache_info`). This will tell us about associativity,\nset size, line size etc. for each level of the cache hierarchy.",7,null],[11,"get_monitor_mwait_info","","Information about how monitor/mwait works on this CPU.",7,null],[11,"get_thermal_power_info","","Query information about thermal and power management features of the CPU.",7,null],[11,"get_extended_feature_info","","Find out about more features supported by this CPU.",7,null],[11,"get_direct_cache_access_info","","Direct cache access info.",7,null],[11,"get_performance_monitoring_info","","Info about performance monitoring (how many counters etc.).",7,null],[11,"get_extended_topology_info","","Information about topology (how many cores and what kind of cores).",7,null],[11,"get_extended_state_info","","Information for saving/restoring extended register state.",7,null],[11,"get_qos_info","","Quality of service informations.",7,null],[11,"get_qos_enforcement_info","","Quality of service enforcement information.",7,null],[11,"get_processor_trace_info","","Intel Processor Trace Enumeration Information.",7,null],[11,"get_tsc_info","","Time Stamp Counter/Core Crystal Clock Information.",7,null],[11,"get_processor_frequency_info","","Processor Frequency Information.",7,null],[11,"get_extended_function_info","","Extended functionality of CPU described here (including more supported features).\nThis also contains a more detailed CPU model identifier.",7,null],[11,"fmt","","",8,null],[11,"as_string","","Return vendor identification as human readable string.",8,null],[11,"fmt","","",9,null],[11,"next","","Iterate over all cache information.",9,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",8,null],[11,"serial_lower","","Bits 00-31 of 96 bit processor serial number.\n(Available in Pentium III processor only; otherwise, the value in this register is reserved.)",10,null],[11,"serial_middle","","Bits 32-63 of 96 bit processor serial number.\n(Available in Pentium III processor only; otherwise, the value in this register is reserved.)",10,null],[11,"fmt","","",11,null],[11,"extended_family_id","","Version Information: Extended Family",11,null],[11,"extended_model_id","","Version Information: Extended Model",11,null],[11,"family_id","","Version Information: Family",11,null],[11,"model_id","","Version Information: Model",11,null],[11,"stepping_id","","Version Information: Stepping ID",11,null],[11,"brand_index","","Brand Index",11,null],[11,"cflush_cache_line_size","","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)",11,null],[11,"initial_local_apic_id","","Initial APIC ID",11,null],[11,"max_logical_processor_ids","","Maximum number of addressable IDs for logical processors in this physical package.",11,null],[11,"has_sse3","","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates the processor supports this technology.",11,null],[11,"has_pclmulqdq","","PCLMULQDQ. A value of 1 indicates the processor supports the PCLMULQDQ instruction",11,null],[11,"has_ds_area","","64-bit DS Area. A value of 1 indicates the processor supports DS area using 64-bit layout",11,null],[11,"has_monitor_mwait","","MONITOR/MWAIT. A value of 1 indicates the processor supports this feature.",11,null],[11,"has_cpl","","CPL Qualified Debug Store. A value of 1 indicates the processor supports the extensions to the  Debug Store feature to allow for branch message storage qualified by CPL.",11,null],[11,"has_vmx","","Virtual Machine Extensions. A value of 1 indicates that the processor supports this technology.",11,null],[11,"has_smx","","Safer Mode Extensions. A value of 1 indicates that the processor supports this technology. See Chapter 5, Safer Mode Extensions Reference.",11,null],[11,"has_eist","","Enhanced Intel SpeedStep® technology. A value of 1 indicates that the processor supports this technology.",11,null],[11,"has_tm2","","Thermal Monitor 2. A value of 1 indicates whether the processor supports this technology.",11,null],[11,"has_ssse3","","A value of 1 indicates the presence of the Supplemental Streaming SIMD Extensions 3 (SSSE3). A value of 0 indicates the instruction extensions are not present in the processor",11,null],[11,"has_cnxtid","","L1 Context ID. A value of 1 indicates the L1 data cache mode can be set to either adaptive mode or shared mode. A value of 0 indicates this feature is not supported. See definition of the IA32_MISC_ENABLE MSR Bit 24 (L1 Data Cache Context Mode) for details.",11,null],[11,"has_fma","","A value of 1 indicates the processor supports FMA extensions using YMM state.",11,null],[11,"has_cmpxchg16b","","CMPXCHG16B Available. A value of 1 indicates that the feature is available. See the CMPXCHG8B/CMPXCHG16B Compare and Exchange Bytes section. 14",11,null],[11,"has_pdcm","","Perfmon and Debug Capability: A value of 1 indicates the processor supports the performance   and debug feature indication MSR IA32_PERF_CAPABILITIES.",11,null],[11,"has_pcid","","Process-context identifiers. A value of 1 indicates that the processor supports PCIDs and the software may set CR4.PCIDE to 1.",11,null],[11,"has_dca","","A value of 1 indicates the processor supports the ability to prefetch data from a memory mapped device.",11,null],[11,"has_sse41","","A value of 1 indicates that the processor supports SSE4.1.",11,null],[11,"has_sse42","","A value of 1 indicates that the processor supports SSE4.2.",11,null],[11,"has_x2apic","","A value of 1 indicates that the processor supports x2APIC feature.",11,null],[11,"has_movbe","","A value of 1 indicates that the processor supports MOVBE instruction.",11,null],[11,"has_popcnt","","A value of 1 indicates that the processor supports the POPCNT instruction.",11,null],[11,"has_tsc_deadline","","A value of 1 indicates that the processors local APIC timer supports one-shot operation using a TSC deadline value.",11,null],[11,"has_aesni","","A value of 1 indicates that the processor supports the AESNI instruction extensions.",11,null],[11,"has_xsave","","A value of 1 indicates that the processor supports the XSAVE/XRSTOR processor extended states feature, the XSETBV/XGETBV instructions, and XCR0.",11,null],[11,"has_oxsave","","A value of 1 indicates that the OS has enabled XSETBV/XGETBV instructions to access XCR0, and support for processor extended state management using XSAVE/XRSTOR.",11,null],[11,"has_avx","","A value of 1 indicates the processor supports the AVX instruction extensions.",11,null],[11,"has_f16c","","A value of 1 indicates that processor supports 16-bit floating-point conversion instructions.",11,null],[11,"has_rdrand","","A value of 1 indicates that processor supports RDRAND instruction.",11,null],[11,"has_fpu","","Floating Point Unit On-Chip. The processor contains an x87 FPU.",11,null],[11,"has_vme","","Virtual 8086 Mode Enhancements. Virtual 8086 mode enhancements, including CR4.VME for controlling the feature, CR4.PVI for protected mode virtual interrupts, software interrupt indirection, expansion of the TSS with the software indirection bitmap, and EFLAGS.VIF and EFLAGS.VIP flags.",11,null],[11,"has_de","","Debugging Extensions. Support for I/O breakpoints, including CR4.DE for controlling the feature, and optional trapping of accesses to DR4 and DR5.",11,null],[11,"has_pse","","Page Size Extension. Large pages of size 4 MByte are supported, including CR4.PSE for controlling the feature, the defined dirty bit in PDE (Page Directory Entries), optional reserved bit trapping in CR3, PDEs, and PTEs.",11,null],[11,"has_tsc","","Time Stamp Counter. The RDTSC instruction is supported, including CR4.TSD for controlling privilege.",11,null],[11,"has_msr","","Model Specific Registers RDMSR and WRMSR Instructions. The RDMSR and WRMSR instructions are supported. Some of the MSRs are implementation dependent.",11,null],[11,"has_pae","","Physical Address Extension. Physical addresses greater than 32 bits are supported: extended page table entry formats, an extra level in the page translation tables is defined, 2-MByte pages are supported instead of 4 Mbyte pages if PAE bit is 1.",11,null],[11,"has_mce","","Machine Check Exception. Exception 18 is defined for Machine Checks, including CR4.MCE for controlling the feature. This feature does not define the model-specific implementations of machine-check error logging, reporting, and processor shutdowns. Machine Check exception handlers may have to depend on processor version to do model specific processing of the exception, or test for the presence of the Machine Check feature.",11,null],[11,"has_cmpxchg8b","","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes (64 bits) instruction is supported (implicitly locked and atomic).",11,null],[11,"has_apic","","APIC On-Chip. The processor contains an Advanced Programmable Interrupt Controller (APIC), responding to memory mapped commands in the physical address range FFFE0000H to FFFE0FFFH (by default - some processors permit the APIC to be relocated).",11,null],[11,"has_sysenter_sysexit","","SYSENTER and SYSEXIT Instructions. The SYSENTER and SYSEXIT and associated MSRs are supported.",11,null],[11,"has_mtrr","","Memory Type Range Registers. MTRRs are supported. The MTRRcap MSR contains feature bits that describe what memory types are supported, how many variable MTRRs are supported, and whether fixed MTRRs are supported.",11,null],[11,"has_pge","","Page Global Bit. The global bit is supported in paging-structure entries that map a page, indicating TLB entries that are common to different processes and need not be flushed. The CR4.PGE bit controls this feature.",11,null],[11,"has_mca","","Machine Check Architecture. The Machine Check Architecture, which provides a compatible mechanism for error reporting in P6 family, Pentium 4, Intel Xeon processors, and future processors, is supported. The MCG_CAP MSR contains feature bits describing how many banks of error reporting MSRs are supported.",11,null],[11,"has_cmov","","Conditional Move Instructions. The conditional move instruction CMOV is supported. In addition, if x87 FPU is present as indicated by the CPUID.FPU feature bit, then the FCOMI and FCMOV instructions are supported",11,null],[11,"has_pat","","Page Attribute Table. Page Attribute Table is supported. This feature augments the Memory Type Range Registers (MTRRs), allowing an operating system to specify attributes of memory accessed through a linear address on a 4KB granularity.",11,null],[11,"has_pse36","","36-Bit Page Size Extension. 4-MByte pages addressing physical memory beyond 4 GBytes are supported with 32-bit paging. This feature indicates that upper bits of the physical address of a 4-MByte page are encoded in bits 20:13 of the page-directory entry. Such physical addresses are limited by MAXPHYADDR and may be up to 40 bits in size.",11,null],[11,"has_psn","","Processor Serial Number. The processor supports the 96-bit processor identification number feature and the feature is enabled.",11,null],[11,"has_clflush","","CLFLUSH Instruction. CLFLUSH Instruction is supported.",11,null],[11,"has_ds","","Debug Store. The processor supports the ability to write debug information into a memory resident buffer. This feature is used by the branch trace store (BTS) and precise event-based sampling (PEBS) facilities (see Chapter 23, Introduction to Virtual-Machine Extensions, in the Intel® 64 and IA-32 Architectures Software Developers Manual, Volume 3C).",11,null],[11,"has_acpi","","Thermal Monitor and Software Controlled Clock Facilities. The processor implements internal MSRs that allow processor temperature to be monitored and processor performance to be modulated in predefined duty cycles under software control.",11,null],[11,"has_mmx","","Intel MMX Technology. The processor supports the Intel MMX technology.",11,null],[11,"has_fxsave_fxstor","","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR instructions are supported for fast save and restore of the floating point context. Presence of this bit also indicates that CR4.OSFXSR is available for an operating system to indicate that it supports the FXSAVE and FXRSTOR instructions.",11,null],[11,"has_sse","","SSE. The processor supports the SSE extensions.",11,null],[11,"has_sse2","","SSE2. The processor supports the SSE2 extensions.",11,null],[11,"has_ss","","Self Snoop. The processor supports the management of conflicting memory types by performing a snoop of its own cache structure for transactions issued to the bus.",11,null],[11,"has_htt","","Max APIC IDs reserved field is Valid. A value of 0 for HTT indicates there is only a single logical processor in the package and software should assume only a single APIC ID is reserved.  A value of 1 for HTT indicates the value in CPUID.1.EBX[23:16] (the Maximum number of addressable IDs for logical processors in this package) is valid for the package.",11,null],[11,"has_tm","","Thermal Monitor. The processor implements the thermal monitor automatic thermal control circuitry (TCC).",11,null],[11,"has_pbe","","Pending Break Enable. The processor supports the use of the FERR#/PBE# pin when the processor is in the stop-clock state (STPCLK# is asserted) to signal the processor that an interrupt is pending and that the processor should return to normal operation to handle the interrupt. Bit 10 (PBE enable) in the IA32_MISC_ENABLE MSR enables this capability.",11,null],[11,"next","","Iterate over all caches for this CPU.\nNote: cpuid is called every-time we this function to get information\nabout next cache.",12,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"eq","","",4,null],[11,"cache_type","","Cache Type",13,null],[11,"level","","Cache Level (starts at 1)",13,null],[11,"is_self_initializing","","Self Initializing cache level (does not need SW initialization).",13,null],[11,"is_fully_associative","","Fully Associative cache",13,null],[11,"max_cores_for_cache","","Maximum number of addressable IDs for logical processors sharing this cache",13,null],[11,"max_cores_for_package","","Maximum number of addressable IDs for processor cores in the physical package",13,null],[11,"coherency_line_size","","System Coherency Line Size (Bits 11-00)",13,null],[11,"physical_line_partitions","","Physical Line partitions (Bits 21-12)",13,null],[11,"associativity","","Ways of associativity (Bits 31-22)",13,null],[11,"sets","","Number of Sets (Bits 31-00)",13,null],[11,"is_write_back_invalidate","","Write-Back Invalidate/Invalidate (Bit 0)\nFalse: WBINVD/INVD from threads sharing this cache acts upon lower level caches for threads sharing this cache.\nTrue: WBINVD/INVD is not guaranteed to act upon lower level caches of non-originating threads sharing this cache.",13,null],[11,"is_inclusive","","Cache Inclusiveness (Bit 1)\nFalse: Cache is not inclusive of lower cache levels.\nTrue: Cache is inclusive of lower cache levels.",13,null],[11,"has_complex_indexing","","Complex Cache Indexing (Bit 2)\nFalse: Direct mapped cache.\nTrue: A complex function is used to index the cache, potentially using all address bits.",13,null],[11,"fmt","","",14,null],[11,"smallest_monitor_line","","Smallest monitor-line size in bytes (default is processor&#39;s monitor granularity)",14,null],[11,"largest_monitor_line","","Largest monitor-line size in bytes (default is processor&#39;s monitor granularity",14,null],[11,"extensions_supported","","Enumeration of Monitor-Mwait extensions (beyond EAX and EBX registers) supported",14,null],[11,"interrupts_as_break_event","","Supports treating interrupts as break-event for MWAIT, even when interrupts disabled",14,null],[11,"supported_c0_states","","Number of C0 sub C-states supported using MWAIT (Bits 03 - 00)",14,null],[11,"supported_c1_states","","Number of C1 sub C-states supported using MWAIT (Bits 07 - 04)",14,null],[11,"supported_c2_states","","Number of C2 sub C-states supported using MWAIT (Bits 11 - 08)",14,null],[11,"supported_c3_states","","Number of C3 sub C-states supported using MWAIT (Bits 15 - 12)",14,null],[11,"supported_c4_states","","Number of C4 sub C-states supported using MWAIT (Bits 19 - 16)",14,null],[11,"supported_c5_states","","Number of C5 sub C-states supported using MWAIT (Bits 23 - 20)",14,null],[11,"supported_c6_states","","Number of C6 sub C-states supported using MWAIT (Bits 27 - 24)",14,null],[11,"supported_c7_states","","Number of C7 sub C-states supported using MWAIT (Bits 31 - 28)",14,null],[11,"fmt","","",15,null],[11,"has_dts","","Digital temperature sensor is supported if set.",15,null],[11,"has_turbo_boost","","Intel Turbo Boost Technology Available (see description of IA32_MISC_ENABLE[38]).",15,null],[11,"has_arat","","ARAT. APIC-Timer-always-running feature is supported if set.",15,null],[11,"has_pln","","PLN. Power limit notification controls are supported if set.",15,null],[11,"has_ecmd","","ECMD. Clock modulation duty cycle extension is supported if set.",15,null],[11,"has_ptm","","PTM. Package thermal management is supported if set.",15,null],[11,"has_hw_coord_feedback","","Hardware Coordination Feedback Capability (Presence of IA32_MPERF and IA32_APERF). The capability to provide a measure of delivered processor performance (since last reset of the counters), as a percentage of expected processor performance at frequency specified in CPUID Brand String Bits 02 - 01",15,null],[11,"has_energy_bias_pref","","The processor supports performance-energy bias preference if CPUID.06H:ECX.SETBH[bit 3] is set and it also implies the presence of a new architectural MSR called IA32_ENERGY_PERF_BIAS (1B0H)",15,null],[11,"dts_irq_threshold","","Number of Interrupt Thresholds in Digital Thermal Sensor",15,null],[11,"fmt","","",16,null],[11,"has_fsgsbase","","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if 1.",16,null],[11,"has_tsc_adjust_msr","","IA32_TSC_ADJUST MSR is supported if 1.",16,null],[11,"has_bmi1","","BMI1",16,null],[11,"has_hle","","HLE",16,null],[11,"has_avx2","","AVX2",16,null],[11,"has_smep","","SMEP. Supports Supervisor-Mode Execution Prevention if 1.",16,null],[11,"has_bmi2","","BMI2",16,null],[11,"has_rep_movsb_stosb","","Supports Enhanced REP MOVSB/STOSB if 1.",16,null],[11,"has_invpcid","","INVPCID. If 1, supports INVPCID instruction for system software that manages process-context identifiers.",16,null],[11,"has_rtm","","RTM",16,null],[11,"has_qm","","Supports Quality of Service Monitoring (QM) capability if 1.",16,null],[11,"has_fpu_cs_ds_deprecated","","Deprecates FPU CS and FPU DS values if 1.",16,null],[11,"has_mpx","","MPX. Supports Intel Memory Protection Extensions if 1.",16,null],[11,"fmt","","",17,null],[11,"get_dca_cap_value","","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address 1F8H)",17,null],[11,"fmt","","",18,null],[11,"version_id","","Version ID of architectural performance monitoring. (Bits 07 - 00)",18,null],[11,"number_of_counters","","Number of general-purpose performance monitoring counter per logical processor. (Bits 15- 08)",18,null],[11,"counter_bit_width","","Bit width of general-purpose, performance monitoring counter. (Bits 23 - 16)",18,null],[11,"ebx_length","","Length of EBX bit vector to enumerate architectural performance monitoring events. (Bits 31 - 24)",18,null],[11,"fixed_function_counters","","Number of fixed-function performance counters (if Version ID &gt; 1). (Bits 04 - 00)",18,null],[11,"fixed_function_counters_bit_width","","Bit width of fixed-function performance counters (if Version ID &gt; 1). (Bits 12- 05)",18,null],[11,"is_core_cyc_ev_unavailable","","Core cycle event not available if 1.",18,null],[11,"is_inst_ret_ev_unavailable","","Instruction retired event not available if 1.",18,null],[11,"is_ref_cycle_ev_unavailable","","Reference cycles event not available if 1.",18,null],[11,"is_cache_ref_ev_unavailable","","Last-level cache reference event not available if 1.",18,null],[11,"is_ll_cache_miss_ev_unavailable","","Last-level cache misses event not available if 1.",18,null],[11,"is_branch_inst_ret_ev_unavailable","","Branch instruction retired event not available if 1.",18,null],[11,"is_branch_midpred_ev_unavailable","","Branch mispredict retired event not available if 1.",18,null],[11,"fmt","","",19,null],[11,"fmt","","",20,null],[11,"processors","","Number of logical processors at this level type.\nThe number reflects configuration as shipped.",20,null],[11,"level_number","","Level number.",20,null],[11,"level_type","","",20,null],[11,"x2apic_id","","x2APIC ID the current logical processor. (Bits 31-00)",20,null],[11,"shift_right_for_next_apic_id","","Number of bits to shift right on x2APIC ID to get a unique topology ID of the next level type. (Bits 04-00)\nAll logical processors with the same next level ID share current level.",20,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"next","","",19,null],[11,"fmt","","",21,null],[11,"xcr0_supported","","Reports the valid bit fields of XCR0. If a bit is 0,\nthe corresponding bit field in XCR0 is reserved.",21,null],[11,"has_legacy_x87","","Legacy x87.",21,null],[11,"has_sse_128","","SSE 128-bit.",21,null],[11,"has_avx_256","","AVX 256-bit.",21,null],[11,"has_mpx","","MPX.",21,null],[11,"has_avx_512","","AVX 512-bit.",21,null],[11,"has_ia32_xss","","IA32_XSS.",21,null],[11,"has_pkru","","PKRU.",21,null],[11,"maximum_size_enabled_features","","Maximum size (bytes, from the beginning of the XSAVE/XRSTOR save area) required by\nenabled features in XCR0. May be different than ECX if some features at the end of the XSAVE save area\nare not enabled.",21,null],[11,"maximum_size_supported_features","","Maximum size (bytes, from the beginning of the XSAVE/XRSTOR save area) of the\nXSAVE/XRSTOR save area required by all supported features in the processor,\ni.e all the valid bit fields in XCR0.",21,null],[11,"has_xsaveopt","","CPU has xsaveopt feature.",21,null],[11,"has_xsavec","","Supports XSAVEC and the compacted form of XRSTOR if set.",21,null],[11,"has_xgetbv","","Supports XGETBV with ECX = 1 if set.",21,null],[11,"has_xsaves_xrstors","","Supports XSAVES/XRSTORS and IA32_XSS if set.",21,null],[11,"iter","","Iterator over extended state enumeration levels &gt;= 2.",21,null],[11,"next","","",22,null],[11,"fmt","","",2,null],[11,"size","","The size in bytes (from the offset specified in EBX) of the save area\nfor an extended state feature associated with a valid sub-leaf index, n.\nThis field reports 0 if the sub-leaf index, n, is invalid.",2,null],[11,"offset","","The offset in bytes of this extended state components save area\nfrom the beginning of the XSAVE/XRSTOR area.",2,null],[11,"is_in_ia32_xss","","True if the bit n (corresponding to the sub-leaf index)\nis supported in the IA32_XSS MSR;",2,null],[11,"is_in_xcr0","","True if bit n is supported in XCR0.",2,null],[11,"is_compacted_format","","Returns true when the compacted format of an XSAVE area is used,\nthis extended state component located on the next 64-byte\nboundary following the preceding state component\n(otherwise, it is located immediately following the preceding state component).",2,null],[11,"fmt","","",23,null],[11,"maximum_rmid_range","","Maximum range (zero-based) of RMID within this physical processor of all types.",23,null],[11,"has_l3_qos","","Supports L3 Cache QoS if true.",23,null],[11,"conversion_factor","","Conversion factor from reported IA32_QM_CTR value to occupancy metric (bytes).",23,null],[11,"maximum_range_l3_rmid","","Maximum range (zero-based) of RMID of L3.",23,null],[11,"has_l3_occupancy_monitoring","","Supports L3 occupancy monitoring if true.",23,null],[11,"fmt","","",24,null],[11,"has_l3_qos_enforcement","","Supports L3 Cache QoS enforcement if true.",24,null],[11,"iter","","Iterator over QoS enforcements.",24,null],[11,"next","","",25,null],[11,"fmt","","",26,null],[11,"capacity_mask_length","","Length of the capacity bit mask.",26,null],[11,"allocation_unit_isolation","","Bit-granular map of isolation/contention of allocation units.",26,null],[11,"highest_cos_number","","Highest COS number supported for this Leaf.",26,null],[11,"has_infrequent_cos_updates","","Updates of COS should be infrequent if true.",26,null],[11,"has_code_data_prioritization","","Is Code and Data Prioritization Technology supported?",26,null],[11,"fmt","","",27,null],[11,"has_rtit_cr3_match","","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set to 1, and that IA32_RTIT_CR3_MATCH MSR can be accessed.",27,null],[11,"has_configurable_psb_and_cycle_accurate_mode","","If true, Indicates support of Configurable PSB and Cycle-Accurate Mode.",27,null],[11,"has_ip_tracestop_filtering","","If true, Indicates support of IP Filtering, TraceStop filtering, and preservation of Intel PT MSRs across warm reset.",27,null],[11,"has_mtc_timing_packet_coefi_suppression","","If true, Indicates support of MTC timing packet and suppression of COFI-based packets.",27,null],[11,"has_topa","","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = 1, hence utilizing the ToPA output scheme; IA32_RTIT_OUTPUT_BASE and IA32_RTIT_OUTPUT_MASK_PTRS MSRs can be accessed.",27,null],[11,"has_topa_maximum_entries","","If true, ToPA tables can hold any number of output entries, up to the maximum allowed by the MaskOrTableOffset field of IA32_RTIT_OUTPUT_MASK_PTRS.",27,null],[11,"has_single_range_output_scheme","","If true, Indicates support of Single-Range Output scheme.",27,null],[11,"has_trace_transport_subsystem","","If true, Indicates support of output to Trace Transport subsystem.",27,null],[11,"has_lip_with_cs_base","","If true, Generated packets which contain IP payloads have LIP values, which include the CS base component.",27,null],[11,"iter","","Iterator over processor trace info sub-leafs.",27,null],[11,"fmt","","",28,null],[11,"next","","",28,null],[11,"fmt","","",29,null],[11,"configurable_address_ranges","","Number of configurable Address Ranges for filtering (Bits 2:0).",29,null],[11,"supported_mtc_period_encodings","","Bitmap of supported MTC period encodings (Bit 31:16).",29,null],[11,"supported_cycle_threshold_value_encodings","","Bitmap of supported Cycle Threshold value encodings (Bits 15-0).",29,null],[11,"supported_psb_frequency_encodings","","Bitmap of supported Configurable PSB frequency encodings (Bit 31:16)",29,null],[11,"fmt","","",30,null],[11,"get_tsc_ratio_denominator","","An unsigned integer which is the denominator of the TSC/”core crystal clock” ratio (Bits 31:0).",30,null],[11,"get_tsc_ratio_numerator","","An unsigned integer which is the numerator of the TSC/”core crystal clock” ratio (Bits 31-0).",30,null],[11,"fmt","","",31,null],[11,"processor_base_frequency","","Processor Base Frequency (in MHz).",31,null],[11,"processor_max_frequency","","Maximum Frequency (in MHz).",31,null],[11,"bus_frequency","","Bus (Reference) Frequency (in MHz).",31,null],[11,"fmt","","",32,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"processor_brand_string","","Retrieve processor brand string.",32,null],[11,"extended_signature","","Extended Processor Signature and Feature Bits.",32,null],[11,"cache_line_size","","Cache Line size in bytes",32,null],[11,"l2_associativity","","L2 Associativity field",32,null],[11,"cache_size","","Cache size in 1K units",32,null],[11,"physical_address_bits","","#Physical Address Bits",32,null],[11,"linear_address_bits","","#Linear Address Bits",32,null],[11,"has_invariant_tsc","","Is Invariant TSC available?",32,null],[11,"has_lahf_sahf","","Is LAHF/SAHF available in 64-bit mode?",32,null],[11,"has_lzcnt","","Is LZCNT available?",32,null],[11,"has_prefetchw","","Is PREFETCHW available?",32,null],[11,"has_syscall_sysret","","Are fast system calls available.",32,null],[11,"has_execute_disable","","Is there support for execute disable bit.",32,null],[11,"has_1gib_pages","","Is there support for 1GiB pages.",32,null],[11,"has_rdtscp","","Check support for rdtscp instruction.",32,null],[11,"has_64bit_mode","","Check support for 64-bit mode.",32,null],[14,"cpuid","","Macro to choose between `cpuid1` and `cpuid2`.\nNote: This is a low-level macro to query cpuid directly.\nIf in doubt use `CpuId` instead.",null,null]],"paths":[[3,"CpuIdResult"],[3,"CacheInfo"],[3,"ExtendedState"],[4,"CacheInfoType"],[4,"CacheType"],[4,"TopologyType"],[4,"L2Associativity"],[3,"CpuId"],[3,"VendorInfo"],[3,"CacheInfoIter"],[3,"ProcessorSerial"],[3,"FeatureInfo"],[3,"CacheParametersIter"],[3,"CacheParameter"],[3,"MonitorMwaitInfo"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedTopologyIter"],[3,"ExtendedTopologyLevel"],[3,"ExtendedStateInfo"],[3,"ExtendedStateIter"],[3,"QoSInfo"],[3,"QoSEnforcementInfo"],[3,"QoSEnforcementIter"],[3,"QoSEnforcement"],[3,"ProcessorTraceInfo"],[3,"ProcessorTraceIter"],[3,"ProcessorTrace"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"ExtendedFunctionInfo"]]};
searchIndex["nom"] = {"doc":"nom, eating data byte by byte","items":[[3,"ProducerRepeat","nom","ProducerRepeat takes a single value, and generates it at each step",null,null],[3,"MemProducer","","A MemProducer generates values from an in memory byte buffer",null,null],[3,"FileProducer","","",null,null],[3,"MapConsumer","","MapConsumer takes a function S -&gt; T and applies it on a consumer producing values of type S",null,null],[3,"ChainConsumer","","ChainConsumer takes a consumer C1 R -&gt; S, and a consumer C2 S -&gt; T, and makes a consumer R -&gt; T by applying C2 on C1&#39;s result",null,null],[4,"ErrorKind","","indicates which parser returned an error",null,null],[13,"Custom","","",0,null],[13,"Tag","","",0,null],[13,"MapRes","","",0,null],[13,"MapOpt","","",0,null],[13,"Alt","","",0,null],[13,"IsNot","","",0,null],[13,"IsA","","",0,null],[13,"SeparatedList","","",0,null],[13,"SeparatedNonEmptyList","","",0,null],[13,"Many0","","",0,null],[13,"Many1","","",0,null],[13,"Count","","",0,null],[13,"TakeUntilAndConsume","","",0,null],[13,"TakeUntil","","",0,null],[13,"TakeUntilEitherAndConsume","","",0,null],[13,"TakeUntilEither","","",0,null],[13,"LengthValue","","",0,null],[13,"TagClosure","","",0,null],[13,"Alpha","","",0,null],[13,"Digit","","",0,null],[13,"HexDigit","","",0,null],[13,"OctDigit","","",0,null],[13,"AlphaNumeric","","",0,null],[13,"Space","","",0,null],[13,"MultiSpace","","",0,null],[13,"LengthValueFn","","",0,null],[13,"Eof","","",0,null],[13,"ExprOpt","","",0,null],[13,"ExprRes","","",0,null],[13,"CondReduce","","",0,null],[13,"Switch","","",0,null],[13,"TagBits","","",0,null],[13,"OneOf","","",0,null],[13,"NoneOf","","",0,null],[13,"Char","","",0,null],[13,"CrLf","","",0,null],[13,"RegexpMatch","","",0,null],[13,"RegexpMatches","","",0,null],[13,"RegexpFind","","",0,null],[13,"RegexpCapture","","",0,null],[13,"RegexpCaptures","","",0,null],[13,"TakeWhile1","","",0,null],[13,"Complete","","",0,null],[13,"Fix","","",0,null],[13,"Escaped","","",0,null],[13,"EscapedTransform","","",0,null],[13,"TagStr","","",0,null],[13,"IsNotStr","","",0,null],[13,"IsAStr","","",0,null],[13,"TakeWhile1Str","","",0,null],[13,"NonEmpty","","",0,null],[13,"ManyMN","","",0,null],[13,"TakeUntilAndConsumeStr","","",0,null],[13,"TakeUntilStr","","",0,null],[13,"Not","","",0,null],[4,"Err","","Contains the error that a parser can return",null,null],[13,"Code","","An error code, represented by an ErrorKind, which can contain a custom error code represented by E",1,null],[13,"Node","","An error code, and the next error",1,null],[13,"Position","","An error code, and the input position",1,null],[13,"NodePosition","","An error code, the input position and the next error",1,null],[4,"Needed","","Contains information on needed data if a parser returned `Incomplete`",null,null],[13,"Unknown","","needs more data, but we do not know how much",2,null],[13,"Size","","contains the required data size",2,null],[4,"IResult","","Holds the result of parsing functions",null,null],[13,"Done","","indicates a correct parsing, the first field containing the rest of the unparsed data, the second field contains the parsed data",3,null],[13,"Error","","contains a Err, an enum that can indicate an error code, a position in the input, and a pointer to another error, making a list of errors in the parsing tree",3,null],[13,"Incomplete","","Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown",3,null],[4,"Input","","",null,null],[13,"Element","","",4,null],[13,"Empty","","",4,null],[13,"Eof","","",4,null],[4,"ConsumerState","","Stores a consumer&#39;s current computation state",null,null],[13,"Done","","A value of type O has been produced",5,null],[13,"Error","","An error of type E has been encountered",5,null],[13,"Continue","","Continue applying, and pass a message of type M to the data source",5,null],[4,"Move","","",null,null],[13,"Consume","","indcates how much data was consumed",6,null],[13,"Seek","","indicates where in the input the consumer must seek",6,null],[13,"Await","","indicates more data is needed",6,null],[4,"FileProducerState","","",null,null],[13,"Normal","","",7,null],[13,"Error","","",7,null],[13,"Eof","","",7,null],[5,"error_to_list","","",null,{"inputs":[{"name":"err"}],"output":{"name":"vec"}}],[5,"compare_error_paths","","",null,{"inputs":[{"name":"err"},{"name":"err"}],"output":{"name":"bool"}}],[5,"add_error_pattern","","",null,{"inputs":[{"name":"hashmap"},{"name":"iresult"},{"name":"str"}],"output":{"name":"bool"}}],[5,"slice_to_offsets","","",null,null],[5,"prepare_errors","","",null,null],[5,"print_error","","",null,null],[5,"generate_colors","","",null,null],[5,"code_from_offset","","",null,null],[5,"reset_color","","",null,{"inputs":[{"name":"vec"}],"output":null}],[5,"write_color","","",null,{"inputs":[{"name":"vec"},{"name":"u8"}],"output":null}],[5,"print_codes","","",null,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"string"}}],[5,"print_offsets","","",null,null],[5,"error_to_u32","","",null,{"inputs":[{"name":"errorkind"}],"output":{"name":"u32"}}],[5,"tag_cl","","",null,null],[5,"print","","",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"begin","","",null,null],[5,"not_line_ending","","",null,null],[5,"line_ending","","Recognizes a line feed",null,null],[5,"is_alphabetic","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_hex_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_oct_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_alphanumeric","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_space","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"alpha","","Recognizes lowercase and uppercase alphabetic characters: a-zA-Z",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"digit","","Recognizes numerical characters: 0-9",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"hex_digit","","Recognizes hexadecimal numerical characters: 0-9, A-F, a-f",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"oct_digit","","Recognizes octal characters: 0-7",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"alphanumeric","","Recognizes numerical and alphabetic characters: 0-9a-zA-Z",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"space","","Recognizes spaces and tabs",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"multispace","","Recognizes spaces, tabs, carriage returns and line feeds",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"sized_buffer","","",null,null],[5,"length_value","","",null,null],[5,"be_u8","","Recognizes an unsigned 1 byte integer (equivalent to take!(1)",null,null],[5,"be_u16","","Recognizes big endian unsigned 2 bytes integer",null,null],[5,"be_u32","","Recognizes big endian unsigned 4 bytes integer",null,null],[5,"be_u64","","Recognizes big endian unsigned 8 bytes integer",null,null],[5,"be_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",null,null],[5,"be_i16","","Recognizes big endian signed 2 bytes integer",null,null],[5,"be_i32","","Recognizes big endian signed 4 bytes integer",null,null],[5,"be_i64","","Recognizes big endian signed 8 bytes integer",null,null],[5,"le_u8","","Recognizes an unsigned 1 byte integer (equivalent to take!(1)",null,null],[5,"le_u16","","Recognizes little endian unsigned 2 bytes integer",null,null],[5,"le_u32","","Recognizes little endian unsigned 4 bytes integer",null,null],[5,"le_u64","","Recognizes little endian unsigned 8 bytes integer",null,null],[5,"le_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",null,null],[5,"le_i16","","Recognizes little endian signed 2 bytes integer",null,null],[5,"le_i32","","Recognizes little endian signed 4 bytes integer",null,null],[5,"le_i64","","Recognizes little endian signed 8 bytes integer",null,null],[5,"be_f32","","Recognizes big endian 4 bytes floating point number",null,null],[5,"be_f64","","Recognizes big endian 8 bytes floating point number",null,null],[5,"le_f32","","Recognizes little endian 4 bytes floating point number",null,null],[5,"le_f64","","Recognizes little endian 8 bytes floating point number",null,null],[5,"hex_u32","","Recognizes a hex-encoded integer",null,null],[5,"eof","","Recognizes empty input buffers",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"non_empty","","Recognizes non empty buffers",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"rest","","Return the remaining input.",null,null],[5,"rest_s","","Return the remaining input, for strings.",null,{"inputs":[{"name":"str"}],"output":{"name":"iresult"}}],[5,"newline","","",null,null],[5,"crlf","","",null,null],[5,"eol","","",null,null],[5,"tab","","",null,null],[5,"anychar","","",null,null],[5,"shift","","",null,null],[11,"clone","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"is_known","","",2,null],[11,"map","","Maps a `Needed` to `Needed` by appling a function to a contained `Size` value.",2,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"is_done","","",3,null],[11,"is_err","","",3,null],[11,"is_incomplete","","",3,null],[11,"map","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, N, E&gt;` by appling a function\nto a contained `Done` value, leaving `Error` and `Incomplete` value\nuntouched.",3,null],[11,"map_inc","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, O, E&gt;` by appling a function\nto a contained `Incomplete` value, leaving `Done` and `Error` value\nuntouched.",3,null],[11,"map_err","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, O, N&gt;` by appling a function\nto a contained `Error` value, leaving `Done` and `Incomplete` value\nuntouched.",3,null],[11,"unwrap","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n`Done`.",3,null],[11,"unwrap_inc","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n`Done`.",3,null],[11,"unwrap_err","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n`Done`.",3,null],[11,"remaining_input","","",3,null],[11,"remaining_input","","",3,null],[11,"remaining_input","","",3,null],[11,"output","","",3,null],[11,"output","","",3,null],[11,"output","","",3,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"map","","",5,null],[11,"flat_map","","",5,null],[11,"apply","","",8,null],[11,"new","","",9,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"apply","","",9,null],[11,"eq","","",7,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",10,null],[11,"new","","",10,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"state","","",10,null],[11,"refill","","",10,null],[11,"resize","","Resize the internal buffer, copy the data to the new one and returned how much data was copied",10,null],[11,"apply","","",10,null],[11,"new","","",11,{"inputs":[{"name":"c"},{"name":"f"}],"output":{"name":"mapconsumer"}}],[11,"handle","","",11,null],[11,"state","","",11,null],[11,"new","","",12,{"inputs":[{"name":"c1"},{"name":"c2"}],"output":{"name":"chainconsumer"}}],[11,"handle","","",12,null],[11,"state","","",12,null],[8,"HexDisplay","","useful functions to calculate the offset between slices and show a hexdump of a slice",null,null],[10,"offset","","offset between the first byte of self and the first byte of the argument",13,null],[10,"to_hex","","Converts the value of `self` to a hex dump, returning the owned\nstring.",13,null],[10,"to_hex_from","","Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\nstring.",13,null],[8,"InputLength","","",null,null],[10,"input_len","","",14,null],[8,"AsChar","","",null,null],[10,"as_char","","",15,null],[10,"is_alpha","","",15,null],[10,"is_alphanum","","",15,null],[10,"is_0_to_9","","",15,null],[10,"is_hex_digit","","",15,null],[10,"is_oct_digit","","",15,null],[8,"IterIndices","","",null,null],[16,"Item","","",16,null],[16,"Iter","","",16,null],[10,"iter_indices","","",16,null],[8,"AsBytes","","",null,null],[10,"as_bytes","","",17,null],[8,"GetInput","","",null,null],[10,"remaining_input","","",18,null],[8,"GetOutput","","",null,null],[10,"output","","",19,null],[8,"Consumer","","The Consumer trait wraps a computation and its state",null,null],[10,"handle","","implement handle for the current computation, returning the new state of the consumer",20,null],[10,"state","","returns the current state",20,null],[8,"Producer","","The producer wraps a data source, like file or network, and applies a consumer on it",null,null],[10,"apply","","Applies a consumer once on the produced data, and return the consumer&#39;s state",21,null],[11,"run","","Applies a consumer once on the produced data, and returns the generated value if there is one",21,null],[14,"dbg","","Prints a message if the parser fails",null,null],[14,"dbg_dmp","","Prints a message and the input if the parser fails",null,null],[14,"closure","","Wraps a parser in a closure",null,null],[14,"named","","Makes a function from a parser combination",null,null],[14,"call","","Used to wrap common expressions and function as macros",null,null],[14,"apply","","emulate function currying: `apply!(my_function, arg1, arg2, ...)` becomes `my_function(input, arg1, arg2, ...)`",null,null],[14,"error","","Prevents backtracking if the child parser fails",null,null],[14,"add_error","","Add an error if the child parser fails",null,null],[14,"fix_error","","translate parser result from IResult&lt;I,O,u32&gt; to IResult&lt;I,O,E&gt; with a custom type",null,null],[14,"complete","","replaces a `Incomplete` returned by the child parser\nwith an `Error`",null,null],[14,"try_parse","","A bit like `std::try!`, this macro will return the remaining input and parsed value if the child parser returned `Done`,\nand will do an early return for `Error` and `Incomplete`\nthis can provide more flexibility than `chain!` if needed",null,null],[14,"flat_map","","`flat_map!(R -&gt; IResult&lt;R,S&gt;, S -&gt; IResult&lt;S,T&gt;) =&gt; R -&gt; IResult&lt;R, T&gt;`",null,null],[14,"map","","`map!(I -&gt; IResult&lt;I,O&gt;, O -&gt; P) =&gt; I -&gt; IResult&lt;I, P&gt;`\nmaps a function on the result of a parser",null,null],[14,"map_res","","`map_res!(I -&gt; IResult&lt;I,O&gt;, O -&gt; Result&lt;P&gt;) =&gt; I -&gt; IResult&lt;I, P&gt;`\nmaps a function returning a Result on the output of a parser",null,null],[14,"map_opt","","`map_opt!(I -&gt; IResult&lt;I,O&gt;, O -&gt; Option&lt;P&gt;) =&gt; I -&gt; IResult&lt;I, P&gt;`\nmaps a function returning an Option on the output of a parser",null,null],[14,"value","","`value!(T, R -&gt; IResult&lt;R, S&gt; ) =&gt; R -&gt; IResult&lt;R, T&gt;`",null,null],[14,"expr_res","","`expr_res!(Result&lt;E,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nevaluate an expression that returns a Result&lt;T,E&gt; and returns a IResult::Done(I,T) if Ok",null,null],[14,"expr_opt","","`expr_opt!(Option&lt;O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nevaluate an expression that returns a Option&lt;T&gt; and returns a IResult::Done(I,T) if Some",null,null],[14,"chain","","`chain!(I-&gt;IResult&lt;I,A&gt; ~ I-&gt;IResult&lt;I,B&gt; ~ ... I-&gt;IResult&lt;I,X&gt; , || { return O } ) =&gt; I -&gt; IResult&lt;I, O&gt;`\nchains parsers and assemble the results through a closure",null,null],[14,"tuple","","`tuple!(I-&gt;IResult&lt;I,A&gt;, I-&gt;IResult&lt;I,B&gt;, ... I-&gt;IResult&lt;I,X&gt;) =&gt; I -&gt; IResult&lt;I, (A, B, ..., X)&gt;`\nchains parsers and assemble the sub results in a tuple.",null,null],[14,"alt","","`alt!(I -&gt; IResult&lt;I,O&gt; | I -&gt; IResult&lt;I,O&gt; | ... | I -&gt; IResult&lt;I,O&gt; ) =&gt; I -&gt; IResult&lt;I, O&gt;`\ntry a list of parsers, return the result of the first successful one",null,null],[14,"alt_complete","","This is a combination of the `alt!` and `complete!` combinators. Rather\nthan returning `Incomplete` on partial input, `alt_complete!` will try the\nnext alternative in the chain. You should use this only if you know you\nwill not receive partial input for the rules you&#39;re trying to match (this\nis almost always the case for parsing programming languages).",null,null],[14,"switch","","`switch!(I -&gt; IResult&lt;I,P&gt;, P =&gt; I -&gt; IResult&lt;I,O&gt; | ... | P =&gt; I -&gt; IResult&lt;I,O&gt; ) =&gt; I -&gt; IResult&lt;I, O&gt;`\nchoose the next parser depending on the result of the first one, if successful,\nand returns the result of the second parser",null,null],[14,"opt","","`opt!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Option&lt;O&gt;&gt;`\nmake the underlying parser optional",null,null],[14,"opt_res","","`opt_res!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Result&lt;nom::Err,O&gt;&gt;`\nmake the underlying parser optional",null,null],[14,"cond_with_error","","`cond_with_error!(bool, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Option&lt;O&gt;&gt;`\nConditional combinator",null,null],[14,"cond","","`cond!(bool, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Option&lt;O&gt;&gt;`\nConditional combinator",null,null],[14,"cond_reduce","","`cond_reduce!(bool, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nConditional combinator with error",null,null],[14,"peek","","`peek!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nreturns a result without consuming the input",null,null],[14,"not","","`not!(I -&gt; IResult&lt;I,0&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nreturns a result only if the embedded parser returns Error or Incomplete\ndoes not consume the input",null,null],[14,"tap","","`tap!(name: I -&gt; IResult&lt;I,O&gt; =&gt; { block }) =&gt; I -&gt; IResult&lt;I, O&gt;`\nallows access to the parser&#39;s result without affecting it",null,null],[14,"pair","","`pair!(I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I,P&gt;) =&gt; I -&gt; IResult&lt;I, (O,P)&gt;`\npair(X,Y), returns (x,y)",null,null],[14,"separated_pair","","`separated_pair!(I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I, T&gt;, I -&gt; IResult&lt;I,P&gt;) =&gt; I -&gt; IResult&lt;I, (O,P)&gt;`\nseparated_pair(X,sep,Y) returns (x,y)",null,null],[14,"preceded","","`preceded!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\npreceded(opening, X) returns X",null,null],[14,"terminated","","`terminated!(I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I,T&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nterminated(X, closing) returns X",null,null],[14,"delimited","","`delimited!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I,U&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\ndelimited(opening, X, closing) returns X",null,null],[14,"separated_list","","`separated_list!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nseparated_list(sep, X) returns Vec&lt;X&gt;",null,null],[14,"separated_nonempty_list","","`separated_nonempty_list!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nseparated_nonempty_list(sep, X) returns Vec&lt;X&gt;",null,null],[14,"many0","","`many0!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the parser 0 or more times and returns the list of results in a Vec",null,null],[14,"many1","","`many1!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the parser 1 or more times and returns the list of results in a Vec",null,null],[14,"many_m_n","","`many_m_n!(usize, usize, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the parser between m and n times (n included) and returns the list of results in a Vec",null,null],[14,"count","","`count!(I -&gt; IResult&lt;I,O&gt;, nb) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the child parser a specified number of times",null,null],[14,"count_fixed","","`count_fixed!(O, I -&gt; IResult&lt;I,O&gt;, nb) =&gt; I -&gt; IResult&lt;I, [O; nb]&gt;`\nApplies the child parser a fixed number of times and returns a fixed size array\nThe type must be specified and it must be `Copy`",null,null],[14,"length_value","","`length_value!(I -&gt; IResult&lt;I, nb&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\ngets a number from the first parser, then applies the second parser that many times",null,null],[14,"fold_many0","","`fold_many0!(I -&gt; IResult&lt;I,O&gt;, R, Fn(R, O) -&gt; R) =&gt; I -&gt; IResult&lt;I, R&gt;`\nApplies the parser 0 or more times and folds the list of return values",null,null],[14,"fold_many1","","`fold_many1!(I -&gt; IResult&lt;I,O&gt;, R, Fn(R, O) -&gt; R) =&gt; I -&gt; IResult&lt;I, R&gt;`\nApplies the parser 1 or more times and folds the list of return values",null,null],[14,"fold_many_m_n","","`fold_many_m_n!(usize, usize, I -&gt; IResult&lt;I,O&gt;, R, Fn(R, O) -&gt; R) =&gt; I -&gt; IResult&lt;I, R&gt;`\nApplies the parser between m and n times (n included) and folds the list of return value",null,null],[14,"method","","Makes a method from a parser combination",null,null],[14,"call_m","","Used to called methods then move self back into self",null,null],[14,"apply_m","","emulate function currying for method calls on structs\n`apply!(self.my_function, arg1, arg2, ...)` becomes `self.my_function(input, arg1, arg2, ...)`",null,null],[14,"recognize","","`recognize!(&amp;[T] -&gt; IResult&lt;&amp;[T], O&gt; ) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nif the child parser was successful, return the consumed input as produced value",null,null],[14,"tag","","`tag!(&amp;[T]: nom::AsBytes) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\ndeclares a byte array as a suite to recognize",null,null],[14,"is_not","","`is_not!(&amp;[T:AsBytes]) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes that do not appear in the provided array",null,null],[14,"is_a","","`is_a!(&amp;[T]) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes that appear in the provided array",null,null],[14,"escaped","","`escaped!(&amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;, T, &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nmatches a byte string with escaped characters.",null,null],[14,"escaped_transform","","`escaped_transform!(&amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;, T, &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;T&gt;&gt;`\nmatches a byte string with escaped characters.",null,null],[14,"take_while","","`take_while!(T -&gt; bool) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes until the provided function fails.",null,null],[14,"take_while1","","`take_while1!(&amp;[T] -&gt; bool) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest (non empty) list of bytes until the provided function fails.",null,null],[14,"take_till","","`take_till!(T -&gt; bool) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes until the provided function succeeds",null,null],[14,"take","","`take!(nb) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\ngenerates a parser consuming the specified number of bytes",null,null],[14,"take_str","","`take!(nb) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;str&gt;`\nsame as take! but returning a &amp;str",null,null],[14,"take_until_and_consume","","`take_until_and_consume!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\ngenerates a parser consuming bytes until the specified byte sequence is found, and consumes it",null,null],[14,"take_until","","`take_until!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nconsumes data until it finds the specified tag",null,null],[14,"take_until_either_and_consume","","`take_until_either_and_consume!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nconsumes data until it finds any of the specified characters, and consume it",null,null],[14,"take_until_either","","`take_until_either!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`",null,null],[14,"length_bytes","","`length_bytes!(&amp;[T] -&gt; IResult&lt;&amp;[T], nb&gt;) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;\ngets a number from the first parser, then extracts that many bytes from the\nremaining stream",null,null],[14,"bits","","`bits!( parser ) =&gt; ( &amp;[u8], (&amp;[u8], usize) -&gt; IResult&lt;(&amp;[u8], usize), T&gt; ) -&gt; IResult&lt;&amp;[u8], T&gt;`\ntransforms its byte slice input into a bit stream for the underlying parsers",null,null],[14,"take_bits","","`take_bits!(type, nb) =&gt; ( (&amp;[T], usize), U, usize) -&gt; IResult&lt;(&amp;[T], usize), U&gt;`\ngenerates a parser consuming the specified number of bits.",null,null],[14,"tag_bits","","matches an integer pattern to a bitstream. The number of bits of the input to compare must be specified",null,null],[14,"u16","","if parameter is true, parse a big endian u16 integer,\notherwise a little endian u16 integer",null,null],[14,"u32","","if parameter is true, parse a big endian u32 integer,\notherwise a little endian u32 integer",null,null],[14,"u64","","if parameter is true, parse a big endian u64 integer,\notherwise a little endian u64 integer",null,null],[14,"i16","","if parameter is true, parse a big endian i16 integer,\notherwise a little endian i16 integer",null,null],[14,"i32","","if parameter is true, parse a big endian i32 integer,\notherwise a little endian i32 integer",null,null],[14,"i64","","if parameter is true, parse a big endian i64 integer,\notherwise a little endian i64 integer",null,null],[14,"one_of","","matches one of the provided characters",null,null],[14,"none_of","","matches anything but the provided characters",null,null],[14,"char","","matches one character: `char!(char) =&gt; &amp;[u8] -&gt; IResult&lt;&amp;[u8], char&gt;",null,null],[14,"consumer_from_parser","","",null,null],[14,"tag_s","","`tag_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ndeclares a string as a suite to recognize",null,null],[14,"take_s","","`take_s!(nb) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ngenerates a parser consuming the specified number of characters",null,null],[14,"is_not_s","","`is_not_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters that do not appear in the provided array",null,null],[14,"is_a_s","","`is_a_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters that appear in the provided array",null,null],[14,"take_while_s","","`take_while_s!(char -&gt; bool) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters until the provided function fails.",null,null],[14,"take_while1_s","","`take_while1_s!(char -&gt; bool) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest (non empty) list of characters until the provided function fails.",null,null],[14,"take_till_s","","`take_till_s!(&amp;str -&gt; bool) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters until the provided function succeeds",null,null],[14,"take_until_and_consume_s","","`take_until_and_consume_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ngenerates a parser consuming all chars until the specified string is found and consumes it",null,null],[14,"take_until_s","","`take_until_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ngenerates a parser consuming all chars until the specified string is found and leaves it in the remaining input",null,null],[11,"run","","Applies a consumer once on the produced data, and returns the generated value if there is one",21,null]],"paths":[[4,"ErrorKind"],[4,"Err"],[4,"Needed"],[4,"IResult"],[4,"Input"],[4,"ConsumerState"],[4,"Move"],[4,"FileProducerState"],[3,"ProducerRepeat"],[3,"MemProducer"],[3,"FileProducer"],[3,"MapConsumer"],[3,"ChainConsumer"],[8,"HexDisplay"],[8,"InputLength"],[8,"AsChar"],[8,"IterIndices"],[8,"AsBytes"],[8,"GetInput"],[8,"GetOutput"],[8,"Consumer"],[8,"Producer"]]};
searchIndex["phf"] = {"doc":"Compile time optimized maps and sets.","items":[[8,"PhfHash","phf","A trait implemented by types which can be used in PHF data structures.",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher as necessary.",0,null],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,null],[3,"Map","","An immutable map constructed at compile time.",null,null],[3,"Set","","An immutable set constructed at compile time.",null,null],[3,"OrderedMap","","An order-preserving immutable map constructed at compile time.",null,null],[3,"OrderedSet","","An order-preserving immutable set constructed at compile time.",null,null],[0,"map","","An immutable map constructed at compile time.",null,null],[3,"Map","phf::map","An immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the key/value pairs in a `Map`.",null,null],[3,"Keys","","An iterator over the keys in a `Map`.",null,null],[3,"Values","","An iterator over the values in a `Map`.",null,null],[11,"fmt","","",1,null],[11,"index","","",1,null],[11,"is_empty","","Returns true if the `Map` is empty.",1,null],[11,"len","","Returns the number of entries in the `Map`.",1,null],[11,"contains_key","","Determines if `key` is in the `Map`.",1,null],[11,"get","","Returns a reference to the value that `key` maps to.",1,null],[11,"get_key","","Returns a reference to the map&#39;s internal static instance of the given\nkey.",1,null],[11,"get_entry","","Like `get`, but returns both the key and the value.",1,null],[11,"entries","","Returns an iterator over the key/value pairs in the map.",1,null],[11,"keys","","Returns an iterator over the keys in the map.",1,null],[11,"values","","Returns an iterator over the values in the map.",1,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"next_back","","",2,null],[11,"next","","",3,null],[11,"size_hint","","",3,null],[11,"next_back","","",3,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[0,"set","phf","An immutable set constructed at compile time.",null,null],[3,"Set","phf::set","An immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `Set`.",null,null],[11,"fmt","","",5,null],[11,"len","","Returns the number of elements in the `Set`.",5,null],[11,"is_empty","","Returns true if the `Set` contains no elements.",5,null],[11,"get_key","","Returns a reference to the set&#39;s internal static instance of the given\nkey.",5,null],[11,"contains","","Returns true if `value` is in the `Set`.",5,null],[11,"iter","","Returns an iterator over the values in the set.",5,null],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",5,null],[11,"is_subset","","Returns true if `other` contains all values in `self`.",5,null],[11,"is_superset","","Returns true if `self` contains all values in `other`.",5,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"next_back","","",6,null],[0,"ordered_map","phf","An order-preserving immutable map constructed at compile time.",null,null],[3,"OrderedMap","phf::ordered_map","An order-preserving immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the entries in a `OrderedMap`.",null,null],[3,"Keys","","An iterator over the keys in a `OrderedMap`.",null,null],[3,"Values","","An iterator over the values in a `OrderedMap`.",null,null],[11,"fmt","","",7,null],[11,"index","","",7,null],[11,"len","","Returns the number of entries in the `Map`.",7,null],[11,"is_empty","","Returns true if the `Map` is empty.",7,null],[11,"get","","Returns a reference to the value that `key` maps to.",7,null],[11,"get_key","","Returns a reference to the map&#39;s internal static instance of the given\nkey.",7,null],[11,"contains_key","","Determines if `key` is in the `Map`.",7,null],[11,"get_index","","Returns the index of the key within the list used to initialize\nthe ordered map.",7,null],[11,"index","","Returns references to both the key and values at an index\nwithin the list used to initialize the ordered map. See `.get_index(key)`.",7,null],[11,"get_entry","","Like `get`, but returns both the key and the value.",7,null],[11,"entries","","Returns an iterator over the key/value pairs in the map.",7,null],[11,"keys","","Returns an iterator over the keys in the map.",7,null],[11,"values","","Returns an iterator over the values in the map.",7,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"next_back","","",8,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[0,"ordered_set","phf","An order-preserving immutable set constructed at compile time.",null,null],[3,"OrderedSet","phf::ordered_set","An order-preserving immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `OrderedSet`.",null,null],[11,"fmt","","",11,null],[11,"len","","Returns the number of elements in the `OrderedSet`.",11,null],[11,"is_empty","","Returns true if the `OrderedSet` contains no elements.",11,null],[11,"get_key","","Returns a reference to the set&#39;s internal static instance of the given\nkey.",11,null],[11,"get_index","","Returns the index of the key within the list used to initialize\nthe ordered set.",11,null],[11,"index","","Returns a reference to the key at an index\nwithin the list used to initialize the ordered set. See `.get_index(key)`.",11,null],[11,"contains","","Returns true if `value` is in the `Set`.",11,null],[11,"iter","","Returns an iterator over the values in the set.",11,null],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",11,null],[11,"is_subset","","Returns true if `other` contains all values in `self`.",11,null],[11,"is_superset","","Returns true if `self` contains all values in `other`.",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"next_back","","",12,null]],"paths":[[8,"PhfHash"],[3,"Map"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Set"],[3,"Iter"],[3,"OrderedMap"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"OrderedSet"],[3,"Iter"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers\nin either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["phf_shared"] = {"doc":"","items":[[5,"displace","phf_shared","",null,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"u32"}}],[5,"split","","",null,null],[5,"hash","","`key` is from `phf_generator::HashState::key`.",null,{"inputs":[{"name":"t"},{"name":"u64"}],"output":{"name":"u64"}}],[5,"get_index","","Return an index into `phf_generator::HashState::map`.",null,null],[8,"PhfHash","","A trait implemented by types which can be used in PHF data structures.",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher as necessary.",0,null],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,null]],"paths":[[8,"PhfHash"]]};
initSearch(searchIndex);
